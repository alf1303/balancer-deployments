{"id":"d4bd8ba0526745340d9e727c7fe1c1c7","_format":"hh-sol-build-info-1","solcVersion":"0.7.1","solcLongVersion":"0.7.1+commit.f4a555be","input":{"language":"Solidity","sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.1 <0.9.0;\n\n// solhint-disable\n\n/**\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n * supported.\n * Uses the default 'BAL' prefix for the error code\n */\nfunction _require(bool condition, uint256 errorCode) pure {\n    if (!condition) _revert(errorCode);\n}\n\n/**\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n * supported.\n */\nfunction _require(\n    bool condition,\n    uint256 errorCode,\n    bytes3 prefix\n) pure {\n    if (!condition) _revert(errorCode, prefix);\n}\n\n/**\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\n * Uses the default 'BAL' prefix for the error code\n */\nfunction _revert(uint256 errorCode) pure {\n    _revert(errorCode, 0x42414c); // This is the raw byte representation of \"BAL\"\n}\n\n/**\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\n */\nfunction _revert(uint256 errorCode, bytes3 prefix) pure {\n    uint256 prefixUint = uint256(uint24(prefix));\n    // We're going to dynamically create a revert string based on the error code, with the following format:\n    // 'BAL#{errorCode}'\n    // where the code is left-padded with zeroes to three digits (so they range from 000 to 999).\n    //\n    // We don't have revert strings embedded in the contract to save bytecode size: it takes much less space to store a\n    // number (8 to 16 bits) than the individual string characters.\n    //\n    // The dynamic string creation algorithm that follows could be implemented in Solidity, but assembly allows for a\n    // much denser implementation, again saving bytecode size. Given this function unconditionally reverts, this is a\n    // safe place to rely on it without worrying about how its usage might affect e.g. memory contents.\n    assembly {\n        // First, we need to compute the ASCII representation of the error code. We assume that it is in the 0-999\n        // range, so we only need to convert three digits. To convert the digits to ASCII, we add 0x30, the value for\n        // the '0' character.\n\n        let units := add(mod(errorCode, 10), 0x30)\n\n        errorCode := div(errorCode, 10)\n        let tenths := add(mod(errorCode, 10), 0x30)\n\n        errorCode := div(errorCode, 10)\n        let hundreds := add(mod(errorCode, 10), 0x30)\n\n        // With the individual characters, we can now construct the full string.\n        // We first append the '#' character (0x23) to the prefix. In the case of 'BAL', it results in 0x42414c23 ('BAL#')\n        // Then, we shift this by 24 (to provide space for the 3 bytes of the error code), and add the\n        // characters to it, each shifted by a multiple of 8.\n        // The revert reason is then shifted left by 200 bits (256 minus the length of the string, 7 characters * 8 bits\n        // per character = 56) to locate it in the most significant part of the 256 slot (the beginning of a byte\n        // array).\n        let formattedPrefix := shl(24, add(0x23, shl(8, prefixUint)))\n\n        let revertReason := shl(200, add(formattedPrefix, add(add(units, shl(8, tenths)), shl(16, hundreds))))\n\n        // We can now encode the reason in memory, which can be safely overwritten as we're about to revert. The encoded\n        // message will have the following layout:\n        // [ revert reason identifier ] [ string location offset ] [ string length ] [ string contents ]\n\n        // The Solidity revert reason identifier is 0x08c739a0, the function selector of the Error(string) function. We\n        // also write zeroes to the next 28 bytes of memory, but those are about to be overwritten.\n        mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\n        // Next is the offset to the location of the string, which will be placed immediately after (20 bytes away).\n        mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020)\n        // The string length is fixed: 7 characters.\n        mstore(0x24, 7)\n        // Finally, the string itself is stored.\n        mstore(0x44, revertReason)\n\n        // Even if the string is only 7 bytes long, we need to return a full 32 byte slot containing it. The length of\n        // the encoded message is therefore 4 + 32 + 32 + 32 = 100.\n        revert(0, 100)\n    }\n}\n\nlibrary Errors {\n    // Math\n    uint256 internal constant ADD_OVERFLOW = 0;\n    uint256 internal constant SUB_OVERFLOW = 1;\n    uint256 internal constant SUB_UNDERFLOW = 2;\n    uint256 internal constant MUL_OVERFLOW = 3;\n    uint256 internal constant ZERO_DIVISION = 4;\n    uint256 internal constant DIV_INTERNAL = 5;\n    uint256 internal constant X_OUT_OF_BOUNDS = 6;\n    uint256 internal constant Y_OUT_OF_BOUNDS = 7;\n    uint256 internal constant PRODUCT_OUT_OF_BOUNDS = 8;\n    uint256 internal constant INVALID_EXPONENT = 9;\n\n    // Input\n    uint256 internal constant OUT_OF_BOUNDS = 100;\n    uint256 internal constant UNSORTED_ARRAY = 101;\n    uint256 internal constant UNSORTED_TOKENS = 102;\n    uint256 internal constant INPUT_LENGTH_MISMATCH = 103;\n    uint256 internal constant ZERO_TOKEN = 104;\n    uint256 internal constant INSUFFICIENT_DATA = 105;\n\n    // Shared pools\n    uint256 internal constant MIN_TOKENS = 200;\n    uint256 internal constant MAX_TOKENS = 201;\n    uint256 internal constant MAX_SWAP_FEE_PERCENTAGE = 202;\n    uint256 internal constant MIN_SWAP_FEE_PERCENTAGE = 203;\n    uint256 internal constant MINIMUM_BPT = 204;\n    uint256 internal constant CALLER_NOT_VAULT = 205;\n    uint256 internal constant UNINITIALIZED = 206;\n    uint256 internal constant BPT_IN_MAX_AMOUNT = 207;\n    uint256 internal constant BPT_OUT_MIN_AMOUNT = 208;\n    uint256 internal constant EXPIRED_PERMIT = 209;\n    uint256 internal constant NOT_TWO_TOKENS = 210;\n    uint256 internal constant DISABLED = 211;\n\n    // Pools\n    uint256 internal constant MIN_AMP = 300;\n    uint256 internal constant MAX_AMP = 301;\n    uint256 internal constant MIN_WEIGHT = 302;\n    uint256 internal constant MAX_STABLE_TOKENS = 303;\n    uint256 internal constant MAX_IN_RATIO = 304;\n    uint256 internal constant MAX_OUT_RATIO = 305;\n    uint256 internal constant MIN_BPT_IN_FOR_TOKEN_OUT = 306;\n    uint256 internal constant MAX_OUT_BPT_FOR_TOKEN_IN = 307;\n    uint256 internal constant NORMALIZED_WEIGHT_INVARIANT = 308;\n    uint256 internal constant INVALID_TOKEN = 309;\n    uint256 internal constant UNHANDLED_JOIN_KIND = 310;\n    uint256 internal constant ZERO_INVARIANT = 311;\n    uint256 internal constant ORACLE_INVALID_SECONDS_QUERY = 312;\n    uint256 internal constant ORACLE_NOT_INITIALIZED = 313;\n    uint256 internal constant ORACLE_QUERY_TOO_OLD = 314;\n    uint256 internal constant ORACLE_INVALID_INDEX = 315;\n    uint256 internal constant ORACLE_BAD_SECS = 316;\n    uint256 internal constant AMP_END_TIME_TOO_CLOSE = 317;\n    uint256 internal constant AMP_ONGOING_UPDATE = 318;\n    uint256 internal constant AMP_RATE_TOO_HIGH = 319;\n    uint256 internal constant AMP_NO_ONGOING_UPDATE = 320;\n    uint256 internal constant STABLE_INVARIANT_DIDNT_CONVERGE = 321;\n    uint256 internal constant STABLE_GET_BALANCE_DIDNT_CONVERGE = 322;\n    uint256 internal constant RELAYER_NOT_CONTRACT = 323;\n    uint256 internal constant BASE_POOL_RELAYER_NOT_CALLED = 324;\n    uint256 internal constant REBALANCING_RELAYER_REENTERED = 325;\n    uint256 internal constant GRADUAL_UPDATE_TIME_TRAVEL = 326;\n    uint256 internal constant SWAPS_DISABLED = 327;\n    uint256 internal constant CALLER_IS_NOT_LBP_OWNER = 328;\n    uint256 internal constant PRICE_RATE_OVERFLOW = 329;\n    uint256 internal constant INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED = 330;\n    uint256 internal constant WEIGHT_CHANGE_TOO_FAST = 331;\n    uint256 internal constant LOWER_GREATER_THAN_UPPER_TARGET = 332;\n    uint256 internal constant UPPER_TARGET_TOO_HIGH = 333;\n    uint256 internal constant UNHANDLED_BY_LINEAR_POOL = 334;\n    uint256 internal constant OUT_OF_TARGET_RANGE = 335;\n    uint256 internal constant UNHANDLED_EXIT_KIND = 336;\n    uint256 internal constant UNAUTHORIZED_EXIT = 337;\n    uint256 internal constant MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE = 338;\n    uint256 internal constant UNHANDLED_BY_MANAGED_POOL = 339;\n    uint256 internal constant UNHANDLED_BY_PHANTOM_POOL = 340;\n    uint256 internal constant TOKEN_DOES_NOT_HAVE_RATE_PROVIDER = 341;\n    uint256 internal constant INVALID_INITIALIZATION = 342;\n    uint256 internal constant OUT_OF_NEW_TARGET_RANGE = 343;\n    uint256 internal constant FEATURE_DISABLED = 344;\n    uint256 internal constant UNINITIALIZED_POOL_CONTROLLER = 345;\n    uint256 internal constant SET_SWAP_FEE_DURING_FEE_CHANGE = 346;\n    uint256 internal constant SET_SWAP_FEE_PENDING_FEE_CHANGE = 347;\n    uint256 internal constant CHANGE_TOKENS_DURING_WEIGHT_CHANGE = 348;\n    uint256 internal constant CHANGE_TOKENS_PENDING_WEIGHT_CHANGE = 349;\n    uint256 internal constant MAX_WEIGHT = 350;\n    uint256 internal constant UNAUTHORIZED_JOIN = 351;\n    uint256 internal constant MAX_MANAGEMENT_AUM_FEE_PERCENTAGE = 352;\n    uint256 internal constant FRACTIONAL_TARGET = 353;\n    uint256 internal constant ADD_OR_REMOVE_BPT = 354;\n    uint256 internal constant INVALID_CIRCUIT_BREAKER_BOUNDS = 355;\n    uint256 internal constant CIRCUIT_BREAKER_TRIPPED = 356;\n    uint256 internal constant MALICIOUS_QUERY_REVERT = 357;\n    uint256 internal constant JOINS_EXITS_DISABLED = 358;\n\n    // Lib\n    uint256 internal constant REENTRANCY = 400;\n    uint256 internal constant SENDER_NOT_ALLOWED = 401;\n    uint256 internal constant PAUSED = 402;\n    uint256 internal constant PAUSE_WINDOW_EXPIRED = 403;\n    uint256 internal constant MAX_PAUSE_WINDOW_DURATION = 404;\n    uint256 internal constant MAX_BUFFER_PERIOD_DURATION = 405;\n    uint256 internal constant INSUFFICIENT_BALANCE = 406;\n    uint256 internal constant INSUFFICIENT_ALLOWANCE = 407;\n    uint256 internal constant ERC20_TRANSFER_FROM_ZERO_ADDRESS = 408;\n    uint256 internal constant ERC20_TRANSFER_TO_ZERO_ADDRESS = 409;\n    uint256 internal constant ERC20_MINT_TO_ZERO_ADDRESS = 410;\n    uint256 internal constant ERC20_BURN_FROM_ZERO_ADDRESS = 411;\n    uint256 internal constant ERC20_APPROVE_FROM_ZERO_ADDRESS = 412;\n    uint256 internal constant ERC20_APPROVE_TO_ZERO_ADDRESS = 413;\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_ALLOWANCE = 414;\n    uint256 internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = 415;\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_BALANCE = 416;\n    uint256 internal constant ERC20_BURN_EXCEEDS_ALLOWANCE = 417;\n    uint256 internal constant SAFE_ERC20_CALL_FAILED = 418;\n    uint256 internal constant ADDRESS_INSUFFICIENT_BALANCE = 419;\n    uint256 internal constant ADDRESS_CANNOT_SEND_VALUE = 420;\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_INT256 = 421;\n    uint256 internal constant GRANT_SENDER_NOT_ADMIN = 422;\n    uint256 internal constant REVOKE_SENDER_NOT_ADMIN = 423;\n    uint256 internal constant RENOUNCE_SENDER_NOT_ALLOWED = 424;\n    uint256 internal constant BUFFER_PERIOD_EXPIRED = 425;\n    uint256 internal constant CALLER_IS_NOT_OWNER = 426;\n    uint256 internal constant NEW_OWNER_IS_ZERO = 427;\n    uint256 internal constant CODE_DEPLOYMENT_FAILED = 428;\n    uint256 internal constant CALL_TO_NON_CONTRACT = 429;\n    uint256 internal constant LOW_LEVEL_CALL_FAILED = 430;\n    uint256 internal constant NOT_PAUSED = 431;\n    uint256 internal constant ADDRESS_ALREADY_ALLOWLISTED = 432;\n    uint256 internal constant ADDRESS_NOT_ALLOWLISTED = 433;\n    uint256 internal constant ERC20_BURN_EXCEEDS_BALANCE = 434;\n    uint256 internal constant INVALID_OPERATION = 435;\n    uint256 internal constant CODEC_OVERFLOW = 436;\n    uint256 internal constant IN_RECOVERY_MODE = 437;\n    uint256 internal constant NOT_IN_RECOVERY_MODE = 438;\n    uint256 internal constant INDUCED_FAILURE = 439;\n    uint256 internal constant EXPIRED_SIGNATURE = 440;\n    uint256 internal constant MALFORMED_SIGNATURE = 441;\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_UINT64 = 442;\n    uint256 internal constant UNHANDLED_FEE_TYPE = 443;\n    uint256 internal constant BURN_FROM_ZERO = 444;\n\n    // Vault\n    uint256 internal constant INVALID_POOL_ID = 500;\n    uint256 internal constant CALLER_NOT_POOL = 501;\n    uint256 internal constant SENDER_NOT_ASSET_MANAGER = 502;\n    uint256 internal constant USER_DOESNT_ALLOW_RELAYER = 503;\n    uint256 internal constant INVALID_SIGNATURE = 504;\n    uint256 internal constant EXIT_BELOW_MIN = 505;\n    uint256 internal constant JOIN_ABOVE_MAX = 506;\n    uint256 internal constant SWAP_LIMIT = 507;\n    uint256 internal constant SWAP_DEADLINE = 508;\n    uint256 internal constant CANNOT_SWAP_SAME_TOKEN = 509;\n    uint256 internal constant UNKNOWN_AMOUNT_IN_FIRST_SWAP = 510;\n    uint256 internal constant MALCONSTRUCTED_MULTIHOP_SWAP = 511;\n    uint256 internal constant INTERNAL_BALANCE_OVERFLOW = 512;\n    uint256 internal constant INSUFFICIENT_INTERNAL_BALANCE = 513;\n    uint256 internal constant INVALID_ETH_INTERNAL_BALANCE = 514;\n    uint256 internal constant INVALID_POST_LOAN_BALANCE = 515;\n    uint256 internal constant INSUFFICIENT_ETH = 516;\n    uint256 internal constant UNALLOCATED_ETH = 517;\n    uint256 internal constant ETH_TRANSFER = 518;\n    uint256 internal constant CANNOT_USE_ETH_SENTINEL = 519;\n    uint256 internal constant TOKENS_MISMATCH = 520;\n    uint256 internal constant TOKEN_NOT_REGISTERED = 521;\n    uint256 internal constant TOKEN_ALREADY_REGISTERED = 522;\n    uint256 internal constant TOKENS_ALREADY_SET = 523;\n    uint256 internal constant TOKENS_LENGTH_MUST_BE_2 = 524;\n    uint256 internal constant NONZERO_TOKEN_BALANCE = 525;\n    uint256 internal constant BALANCE_TOTAL_OVERFLOW = 526;\n    uint256 internal constant POOL_NO_TOKENS = 527;\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_BALANCE = 528;\n\n    // Fees\n    uint256 internal constant SWAP_FEE_PERCENTAGE_TOO_HIGH = 600;\n    uint256 internal constant FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH = 601;\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT = 602;\n    uint256 internal constant AUM_FEE_PERCENTAGE_TOO_HIGH = 603;\n\n    // FeeSplitter\n    uint256 internal constant SPLITTER_FEE_PERCENTAGE_TOO_HIGH = 700;\n\n    // Misc\n    uint256 internal constant UNIMPLEMENTED = 998;\n    uint256 internal constant SHOULD_NOT_HAPPEN = 999;\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the OptionalOnlyCaller helper, used to opt in to a caller\n * verification for a given address to methods that are otherwise callable by any address.\n */\ninterface IOptionalOnlyCaller {\n    /**\n     * @dev Emitted every time setOnlyCallerCheck is called.\n     */\n    event OnlyCallerOptIn(address user, bool enabled);\n\n    /**\n     * @dev Enables / disables verification mechanism for caller.\n     * @param enabled - True if caller verification shall be enabled, false otherwise.\n     */\n    function setOnlyCallerCheck(bool enabled) external;\n\n    function setOnlyCallerCheckWithSignature(\n        address user,\n        bool enabled,\n        bytes memory signature\n    ) external;\n\n    /**\n     * @dev Returns true if caller verification is enabled for the given user, false otherwise.\n     */\n    function isOnlyCallerEnabled(address user) external view returns (bool);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"../openzeppelin/IERC20.sol\";\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./IAuthorizer.sol\";\n\ninterface IBasicAuthorizer is IAuthorizer {\n    // solhint-disable-next-line func-name-mixedcase\n    function DEFAULT_ADMIN_ROLE() external returns (bytes32);\n\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"./IVault.sol\";\nimport \"./IAuthorizer.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\nimport \"../solidity-utils/helpers/IAuthentication.sol\";\nimport \"../solidity-utils/helpers/ISignaturesValidator.sol\";\nimport \"../solidity-utils/helpers/ITemporarilyPausable.sol\";\nimport \"../solidity-utils/misc/IWETH.sol\";\n\nimport \"./IAsset.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"},"contracts/custom/CustomToken.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20.sol\";\n\ncontract CustomToken is ERC20{\n    constructor(string memory name, string memory symbol, uint256 totalSupply) ERC20(name, symbol) {\n        _mint(msg.sender, totalSupply);\n    }\n}"},"contracts/helpers/Authentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\";\n\n/**\n * @dev Building block for performing access control on external functions.\n *\n * This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied\n * to external functions to only make them callable by authorized accounts.\n *\n * Derived contracts must implement the `_canPerform` function, which holds the actual access control logic.\n */\nabstract contract Authentication is IAuthentication {\n    bytes32 private immutable _actionIdDisambiguator;\n\n    /**\n     * @dev The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in\n     * multi contract systems.\n     *\n     * There are two main uses for it:\n     *  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers\n     *    unique. The contract's own address is a good option.\n     *  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier\n     *    shared by the entire family (and no other contract) should be used instead.\n     */\n    constructor(bytes32 actionIdDisambiguator) {\n        _actionIdDisambiguator = actionIdDisambiguator;\n    }\n\n    /**\n     * @dev Reverts unless the caller is allowed to call this function. Should only be applied to external functions.\n     */\n    modifier authenticate() {\n        _authenticateCaller();\n        _;\n    }\n\n    /**\n     * @dev Reverts unless the caller is allowed to call the entry point function.\n     */\n    function _authenticateCaller() internal view {\n        bytes32 actionId = getActionId(msg.sig);\n        _require(_canPerform(actionId, msg.sender), Errors.SENDER_NOT_ALLOWED);\n    }\n\n    function getActionId(bytes4 selector) public view override returns (bytes32) {\n        // Each external function is dynamically assigned an action identifier as the hash of the disambiguator and the\n        // function selector. Disambiguation is necessary to avoid potential collisions in the function selectors of\n        // multiple contracts.\n        return keccak256(abi.encodePacked(_actionIdDisambiguator, selector));\n    }\n\n    function _canPerform(bytes32 actionId, address user) internal view virtual returns (bool);\n}\n"},"contracts/helpers/BaseSplitCodeFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./CodeDeployer.sol\";\n\n/**\n * @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\n * the contract's creation code grows close to 24kB.\n *\n * Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\n */\nabstract contract BaseSplitCodeFactory {\n    // The contract's creation code is stored as code in two separate addresses, and retrieved via `extcodecopy`. This\n    // means this factory supports contracts with creation code of up to 48kB.\n    // We rely on inline-assembly to achieve this, both to make the entire operation highly gas efficient, and because\n    // `extcodecopy` is not available in Solidity.\n\n    // solhint-disable no-inline-assembly\n\n    address private immutable _creationCodeContractA;\n    uint256 private immutable _creationCodeSizeA;\n\n    address private immutable _creationCodeContractB;\n    uint256 private immutable _creationCodeSizeB;\n\n    /**\n     * @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\n     */\n    constructor(bytes memory creationCode) {\n        uint256 creationCodeSize = creationCode.length;\n\n        // We are going to deploy two contracts: one with approximately the first half of `creationCode`'s contents\n        // (A), and another with the remaining half (B).\n        // We store the lengths in both immutable and stack variables, since immutable variables cannot be read during\n        // construction.\n        uint256 creationCodeSizeA = creationCodeSize / 2;\n        _creationCodeSizeA = creationCodeSizeA;\n\n        uint256 creationCodeSizeB = creationCodeSize - creationCodeSizeA;\n        _creationCodeSizeB = creationCodeSizeB;\n\n        // To deploy the contracts, we're going to use `CodeDeployer.deploy()`, which expects a memory array with\n        // the code to deploy. Note that we cannot simply create arrays for A and B's code by copying or moving\n        // `creationCode`'s contents as they are expected to be very large (> 24kB), so we must operate in-place.\n\n        // Memory: [ code length ] [ A.data ] [ B.data ]\n\n        // Creating A's array is simple: we simply replace `creationCode`'s length with A's length. We'll later restore\n        // the original length.\n\n        bytes memory creationCodeA;\n        assembly {\n            creationCodeA := creationCode\n            mstore(creationCodeA, creationCodeSizeA)\n        }\n\n        // Memory: [ A.length ] [ A.data ] [ B.data ]\n        //         ^ creationCodeA\n\n        // The first half is the beginning of the real contract (as opposed to the second half, which could be\n        // anything), so we don't strictly need to protect the A contract. Fork tests should test both,\n        // for completeness.\n        bool preventExecution = false;\n\n        _creationCodeContractA = CodeDeployer.deploy(creationCodeA, preventExecution);\n\n        // Creating B's array is a bit more involved: since we cannot move B's contents, we are going to create a 'new'\n        // memory array starting at A's last 32 bytes, which will be replaced with B's length. We'll back-up this last\n        // byte to later restore it.\n\n        bytes memory creationCodeB;\n        bytes32 lastByteA;\n\n        assembly {\n            // `creationCode` points to the array's length, not data, so by adding A's length to it we arrive at A's\n            // last 32 bytes.\n            creationCodeB := add(creationCode, creationCodeSizeA)\n            lastByteA := mload(creationCodeB)\n            mstore(creationCodeB, creationCodeSizeB)\n        }\n\n        // Memory: [ A.length ] [ A.data[ : -1] ] [ B.length ][ B.data ]\n        //         ^ creationCodeA                ^ creationCodeB\n\n        // The code for contract B starts at a random point, and could accidentally contain valid opcodes.\n        // The `preventExecution` flag prepends an invalid opcode to ensure the  \"contract\" cannot be accidentally\n        // (or maliciously) executed. We need to remove this extra byte when reassembling the creation code.\n        preventExecution = true;\n        _creationCodeContractB = CodeDeployer.deploy(creationCodeB, preventExecution);\n\n        // We now restore the original contents of `creationCode` by writing back the original length and A's last byte.\n        assembly {\n            mstore(creationCodeA, creationCodeSize)\n            mstore(creationCodeB, lastByteA)\n        }\n    }\n\n    /**\n     * @dev Returns the two addresses where the creation code of the contract crated by this factory is stored.\n     */\n    function getCreationCodeContracts() public view returns (address contractA, address contractB) {\n        return (_creationCodeContractA, _creationCodeContractB);\n    }\n\n    /**\n     * @dev Returns the creation code of the contract this factory creates.\n     */\n    function getCreationCode() public view returns (bytes memory) {\n        return _getCreationCodeWithArgs(\"\");\n    }\n\n    /**\n     * @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`.\n     */\n    function _getCreationCodeWithArgs(bytes memory constructorArgs) private view returns (bytes memory code) {\n        // This function exists because `abi.encode()` cannot be instructed to place its result at a specific address.\n        // We need for the ABI-encoded constructor arguments to be located immediately after the creation code, but\n        // cannot rely on `abi.encodePacked()` to perform concatenation as that would involve copying the creation code,\n        // which would be prohibitively expensive.\n        // Instead, we compute the creation code in a pre-allocated array that is large enough to hold *both* the\n        // creation code and the constructor arguments, and then copy the ABI-encoded arguments (which should not be\n        // overly long) right after the end of the creation code.\n\n        // Immutable variables cannot be used in assembly, so we store them in the stack first.\n        address creationCodeContractA = _creationCodeContractA;\n        uint256 creationCodeSizeA = _creationCodeSizeA;\n        address creationCodeContractB = _creationCodeContractB;\n        uint256 creationCodeSizeB = _creationCodeSizeB;\n\n        uint256 creationCodeSize = creationCodeSizeA + creationCodeSizeB;\n        uint256 constructorArgsSize = constructorArgs.length;\n\n        uint256 codeSize = creationCodeSize + constructorArgsSize;\n\n        assembly {\n            // First, we allocate memory for `code` by retrieving the free memory pointer and then moving it ahead of\n            // `code` by the size of the creation code plus constructor arguments, and 32 bytes for the array length.\n            code := mload(0x40)\n            mstore(0x40, add(code, add(codeSize, 32)))\n\n            // We now store the length of the code plus constructor arguments.\n            mstore(code, codeSize)\n\n            // Next, we concatenate the creation code stored in A and B.\n            let dataStart := add(code, 32)\n            extcodecopy(creationCodeContractA, dataStart, 0, creationCodeSizeA)\n            // Start at offset 1 in contract B, to skip the inserted invalid opcode.\n            extcodecopy(creationCodeContractB, add(dataStart, creationCodeSizeA), 1, creationCodeSizeB)\n        }\n\n        // Finally, we copy the constructorArgs to the end of the array. Unfortunately there is no way to avoid this\n        // copy, as it is not possible to tell Solidity where to store the result of `abi.encode()`.\n        uint256 constructorArgsDataPtr;\n        uint256 constructorArgsCodeDataPtr;\n        assembly {\n            constructorArgsDataPtr := add(constructorArgs, 32)\n            constructorArgsCodeDataPtr := add(add(code, 32), creationCodeSize)\n        }\n\n        _memcpy(constructorArgsCodeDataPtr, constructorArgsDataPtr, constructorArgsSize);\n    }\n\n    /**\n     * @dev Deploys a contract with constructor arguments and a user-provided salt, using the create2 opcode.\n     * To create `constructorArgs`, call `abi.encode()` with the contract's constructor arguments, in order.\n     */\n    function _create(bytes memory constructorArgs, bytes32 salt) internal virtual returns (address) {\n        bytes memory creationCode = _getCreationCodeWithArgs(constructorArgs);\n\n        address destination;\n        assembly {\n            destination := create2(0, add(creationCode, 32), mload(creationCode), salt)\n        }\n\n        if (destination == address(0)) {\n            // Bubble up inner revert reason\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                returndatacopy(0, 0, returndatasize())\n                revert(0, returndatasize())\n            }\n        }\n\n        return destination;\n    }\n\n    // From\n    // https://github.com/Arachnid/solidity-stringutils/blob/b9a6f6615cf18a87a823cbc461ce9e140a61c305/src/strings.sol\n    function _memcpy(\n        uint256 dest,\n        uint256 src,\n        uint256 len\n    ) private pure {\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        uint256 mask = 256**(32 - len) - 1;\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n}\n"},"contracts/helpers/CodeDeployer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\n * contract code, which can be retrieved via the `extcodecopy` opcode.\n */\nlibrary CodeDeployer {\n    // During contract construction, the full code supplied exists as code, and can be accessed via `codesize` and\n    // `codecopy`. This is not the contract's final code however: whatever the constructor returns is what will be\n    // stored as its code.\n    //\n    // We use this mechanism to have a simple constructor that stores whatever is appended to it. The following opcode\n    // sequence corresponds to the creation code of the following equivalent Solidity contract, plus padding to make the\n    // full code 32 bytes long:\n    //\n    // contract CodeDeployer {\n    //     constructor() payable {\n    //         uint256 size;\n    //         assembly {\n    //             size := sub(codesize(), 32) // size of appended data, as constructor is 32 bytes long\n    //             codecopy(0, 32, size) // copy all appended data to memory at position 0\n    //             return(0, size) // return appended data for it to be stored as code\n    //         }\n    //     }\n    // }\n    //\n    // More specifically, it is composed of the following opcodes (plus padding):\n    //\n    // [1] PUSH1 0x20\n    // [2] CODESIZE\n    // [3] SUB\n    // [4] DUP1\n    // [6] PUSH1 0x20\n    // [8] PUSH1 0x00\n    // [9] CODECOPY\n    // [11] PUSH1 0x00\n    // [12] RETURN\n    //\n    // The padding is just the 0xfe sequence (invalid opcode). It is important as it lets us work in-place, avoiding\n    // memory allocation and copying.\n\n    bytes32\n        private constant _DEPLOYER_CREATION_CODE = 0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe;\n\n    // Sometimes (e.g., when deploying the second or \"B\" half of the creation code in BaseSplitCodeFactory), we need to\n    // protect the bare contract from being accidentally (or maliciously) executed, in case the bytes at the boundary\n    // happen to be valid opcodes. It's especially dangerous if the bytes contained the selfdestruct opcode, which would\n    // destroy the contract (and, if it's a factory, effectively disable it and prevent further pool creation).\n    //\n    // To guard against this, if the \"preventExecution\" flag is set, we prepend an invalid opcode to the contract,\n    // to ensure that it cannot be executed, regardless of its content.\n    //\n    // This corresponds to the following contract:\n    //\n    // contract CodeDeployer {\n    //     constructor() payable {\n    //         uint256 size;\n    //         assembly {\n    //             mstore8(0, 0xfe) // store invalid opcode at position 0\n    //             size := sub(codesize(), 32) // size of appended data, as constructor is 32 bytes long\n    //             codecopy(1, 32, size) // copy all appended data to memory at position 1\n    //             return(0, add(size, 1)) // return appended data (plus the extra byte) for it to be stored as code\n    //         }\n    //     }\n    // }\n    //\n    // More specifically, it is composed of the following opcodes (plus padding, described above):\n    //\n    // [1] PUSH1 0xfe\n    // [3] PUSH1 0x00\n    // [4] MSTORE8\n    // [6] PUSH1 0x20\n    // [7] CODESIZE\n    // [8] SUB\n    // [9] DUP1\n    // [11] PUSH1 0x20\n    // [13] PUSH1 0x01\n    // [14] CODECOPY\n    // [16] PUSH1 0x01\n    // [17] ADD\n    // [19] PUSH1 0x00\n    // [20] RETURN\n\n    // solhint-disable max-line-length\n    bytes32\n        private constant _PROTECTED_DEPLOYER_CREATION_CODE = 0x60fe600053602038038060206001396001016000f3fefefefefefefefefefefe;\n\n    /**\n     * @dev Deploys a contract with `code` as its code, returning the destination address.\n     * If preventExecution is set, prepend an invalid opcode to ensure the \"contract\" cannot be executed.\n     * Rather than add a flag, we could simply always prepend the opcode, but there might be use cases where fidelity\n     * is required.\n     *\n     * Reverts if deployment fails.\n     */\n    function deploy(bytes memory code, bool preventExecution) internal returns (address destination) {\n        bytes32 deployerCreationCode = preventExecution ? _PROTECTED_DEPLOYER_CREATION_CODE : _DEPLOYER_CREATION_CODE;\n\n        // We need to concatenate the deployer creation code and `code` in memory, but want to avoid copying all of\n        // `code` (which could be quite long) into a new memory location. Therefore, we operate in-place using\n        // assembly.\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let codeLength := mload(code)\n\n            // `code` is composed of length and data. We've already stored its length in `codeLength`, so we simply\n            // replace it with the deployer creation code (which is exactly 32 bytes long).\n            mstore(code, deployerCreationCode)\n\n            // At this point, `code` now points to the deployer creation code immediately followed by `code`'s data\n            // contents. This is exactly what the deployer expects to receive when created.\n            destination := create(0, code, add(codeLength, 32))\n\n            // Finally, we restore the original length in order to not mutate `code`.\n            mstore(code, codeLength)\n        }\n\n        // The create opcode returns the zero address when contract creation fails, so we revert if this happens.\n        _require(destination != address(0), Errors.CODE_DEPLOYMENT_FAILED);\n    }\n}\n"},"contracts/helpers/EOASignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\";\n\nimport \"../openzeppelin/EIP712.sol\";\n\n/**\n * @dev Utility for signing Solidity function calls.\n */\nabstract contract EOASignaturesValidator is ISignaturesValidator, EIP712 {\n    // Replay attack prevention for each account.\n    mapping(address => uint256) internal _nextNonce;\n\n    function getDomainSeparator() public view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    function getNextNonce(address account) public view override returns (uint256) {\n        return _nextNonce[account];\n    }\n\n    function _ensureValidSignature(\n        address account,\n        bytes32 structHash,\n        bytes memory signature,\n        uint256 errorCode\n    ) internal {\n        return _ensureValidSignature(account, structHash, signature, type(uint256).max, errorCode);\n    }\n\n    function _ensureValidSignature(\n        address account,\n        bytes32 structHash,\n        bytes memory signature,\n        uint256 deadline,\n        uint256 errorCode\n    ) internal {\n        bytes32 digest = _hashTypedDataV4(structHash);\n        _require(_isValidSignature(account, digest, signature), errorCode);\n\n        // We could check for the deadline before validating the signature, but this leads to saner error processing (as\n        // we only care about expired deadlines if the signature is correct) and only affects the gas cost of the revert\n        // scenario, which will only occur infrequently, if ever.\n        // The deadline is timestamp-based: it should not be relied upon for sub-minute accuracy.\n        // solhint-disable-next-line not-rely-on-time\n        _require(deadline >= block.timestamp, Errors.EXPIRED_SIGNATURE);\n\n        // We only advance the nonce after validating the signature. This is irrelevant for this module, but it can be\n        // important in derived contracts that override _isValidSignature (e.g. SignaturesValidator), as we want for\n        // the observable state to still have the current nonce as the next valid one.\n        _nextNonce[account] += 1;\n    }\n\n    function _isValidSignature(\n        address account,\n        bytes32 digest,\n        bytes memory signature\n    ) internal view virtual returns (bool) {\n        _require(signature.length == 65, Errors.MALFORMED_SIGNATURE);\n\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the r, s and v signature parameters, and the only way to get them is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        address recoveredAddress = ecrecover(digest, v, r, s);\n\n        // ecrecover returns the zero address on recover failure, so we need to handle that explicitly.\n        return (recoveredAddress != address(0) && recoveredAddress == account);\n    }\n\n    function _toArraySignature(\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (bytes memory) {\n        bytes memory signature = new bytes(65);\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            mstore(add(signature, 32), r)\n            mstore(add(signature, 64), s)\n            mstore8(add(signature, 96), v)\n        }\n\n        return signature;\n    }\n}\n"},"contracts/helpers/ERC20Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\";\n\n// solhint-disable\n\nfunction _asIAsset(IERC20[] memory tokens) pure returns (IAsset[] memory assets) {\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n        assets := tokens\n    }\n}\n\nfunction _sortTokens(\n    IERC20 tokenA,\n    IERC20 tokenB\n) pure returns (IERC20[] memory tokens) {\n    bool aFirst = tokenA < tokenB;\n    IERC20[] memory sortedTokens = new IERC20[](2);\n\n    sortedTokens[0] = aFirst ? tokenA : tokenB;\n    sortedTokens[1] = aFirst ? tokenB : tokenA;\n\n    return sortedTokens;\n}\n\nfunction _insertSorted(IERC20[] memory tokens, IERC20 token) pure returns (IERC20[] memory sorted) {\n    sorted = new IERC20[](tokens.length + 1);\n\n    if (tokens.length == 0) {\n        sorted[0] = token;\n        return sorted;\n    }\n\n    uint256 i;\n    for (i = tokens.length; i > 0 && tokens[i - 1] > token; i--) sorted[i] = tokens[i - 1];\n    for (uint256 j = 0; j < i; j++) sorted[j] = tokens[j];\n    sorted[i] = token;\n}\n\nfunction _findTokenIndex(IERC20[] memory tokens, IERC20 token) pure returns (uint256) {\n    // Note that while we know tokens are initially sorted, we cannot assume this will hold throughout\n    // the pool's lifetime, as pools with mutable tokens can append and remove tokens in any order.\n    uint256 tokensLength = tokens.length;\n    for (uint256 i = 0; i < tokensLength; i++) {\n        if (tokens[i] == token) {\n            return i;\n        }\n    }\n\n    _revert(Errors.INVALID_TOKEN);\n}\n"},"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\nimport \"./EOASignaturesValidator.sol\";\n\n/**\n * @dev Utility for signing Solidity function calls.\n *\n * This contract relies on the fact that Solidity contracts can be called with extra calldata, and enables\n * meta-transaction schemes by appending an EIP712 signature of the original calldata at the end.\n *\n * Derived contracts must implement the `_entrypointTypeHash` function to map function selectors to EIP712 structs.\n */\nabstract contract ExtraCalldataEOASignaturesValidator is EOASignaturesValidator {\n    // The appended data consists of a deadline, plus the [v,r,s] signature. For simplicity, we use a full 256 bit slot\n    // for each of these values, even if 'v' is typically an 8 bit value.\n    uint256 internal constant _EXTRA_CALLDATA_LENGTH = 4 * 32;\n\n    /**\n     * @dev Reverts with `errorCode` unless a valid signature for `user` was appended to the calldata.\n     */\n    function _validateExtraCalldataSignature(address user, uint256 errorCode) internal {\n        bytes32 typeHash = _entrypointTypeHash();\n\n        // Prevent accidental signature validation for functions that don't have an associated type hash.\n        _require(typeHash != bytes32(0), errorCode);\n\n        uint256 deadline = _deadline();\n\n        // All type hashes have this format: (bytes calldata, address sender, uint256 nonce, uint256 deadline).\n        bytes32 structHash = keccak256(\n            abi.encode(typeHash, keccak256(_calldata()), msg.sender, getNextNonce(user), deadline)\n        );\n\n        _ensureValidSignature(user, structHash, _signature(), deadline, errorCode);\n    }\n\n    /**\n     * @dev Returns the EIP712 type hash for the current entry point function, which can be identified by its function\n     * selector (available as `msg.sig`).\n     *\n     * The type hash must conform to the following format:\n     *  <name>(bytes calldata, address sender, uint256 nonce, uint256 deadline)\n     *\n     * If 0x00, all signatures will be considered invalid.\n     */\n    function _entrypointTypeHash() internal view virtual returns (bytes32);\n\n    /**\n     * @dev Extracts the signature deadline from extra calldata.\n     *\n     * This function returns bogus data if no signature is included.\n     */\n    function _deadline() internal pure returns (uint256) {\n        // The deadline is the first extra argument at the end of the original calldata.\n        return uint256(_decodeExtraCalldataWord(0));\n    }\n\n    /**\n     * @dev Extracts the signature parameters from extra calldata.\n     *\n     * This function returns bogus data if no signature is included. This is not a security risk, as that data would not\n     * be considered a valid signature in the first place.\n     */\n    function _signature() internal pure returns (bytes memory) {\n        // v, r and s are appended after the signature deadline, in that order.\n        uint8 v = uint8(uint256(_decodeExtraCalldataWord(0x20)));\n        bytes32 r = _decodeExtraCalldataWord(0x40);\n        bytes32 s = _decodeExtraCalldataWord(0x60);\n\n        return _toArraySignature(v, r, s);\n    }\n\n    /**\n     * @dev Returns the original calldata, without the extra bytes containing the signature.\n     *\n     * This function returns bogus data if no signature is included.\n     */\n    function _calldata() internal pure returns (bytes memory result) {\n        result = msg.data; // A calldata to memory assignment results in memory allocation and copy of contents.\n        if (result.length > _EXTRA_CALLDATA_LENGTH) {\n            // solhint-disable-next-line no-inline-assembly\n            assembly {\n                // We simply overwrite the array length with the reduced one.\n                mstore(result, sub(calldatasize(), _EXTRA_CALLDATA_LENGTH))\n            }\n        }\n    }\n\n    /**\n     * @dev Returns a 256 bit word from 'extra' calldata, at some offset from the expected end of the original calldata.\n     *\n     * This function returns bogus data if no signature is included.\n     */\n    function _decodeExtraCalldataWord(uint256 offset) private pure returns (bytes32 result) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            result := calldataload(add(sub(calldatasize(), _EXTRA_CALLDATA_LENGTH), offset))\n        }\n    }\n}\n"},"contracts/helpers/InputHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\nlibrary InputHelpers {\n    function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\n        _require(a == b, Errors.INPUT_LENGTH_MISMATCH);\n    }\n\n    function ensureInputLengthMatch(\n        uint256 a,\n        uint256 b,\n        uint256 c\n    ) internal pure {\n        _require(a == b && b == c, Errors.INPUT_LENGTH_MISMATCH);\n    }\n\n    function ensureArrayIsSorted(IERC20[] memory array) internal pure {\n        address[] memory addressArray;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            addressArray := array\n        }\n        ensureArrayIsSorted(addressArray);\n    }\n\n    function ensureArrayIsSorted(address[] memory array) internal pure {\n        if (array.length < 2) {\n            return;\n        }\n\n        address previous = array[0];\n        for (uint256 i = 1; i < array.length; ++i) {\n            address current = array[i];\n            _require(previous < current, Errors.UNSORTED_ARRAY);\n            previous = current;\n        }\n    }\n}\n"},"contracts/helpers/OptionalOnlyCaller.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\nimport \"./SignaturesValidator.sol\";\n\nabstract contract OptionalOnlyCaller is IOptionalOnlyCaller, SignaturesValidator {\n    mapping(address => bool) private _isOnlyCallerEnabled;\n\n    bytes32 private constant _SET_ONLY_CALLER_CHECK_TYPEHASH = keccak256(\n        \"SetOnlyCallerCheck(address user,bool enabled,uint256 nonce)\"\n    );\n\n    /**\n     * @dev Reverts if the verification mechanism is enabled and the given address is not the caller.\n     * @param user - Address to validate as the only allowed caller, if the verification is enabled.\n     */\n    modifier optionalOnlyCaller(address user) {\n        _verifyCaller(user);\n        _;\n    }\n\n    function setOnlyCallerCheck(bool enabled) external override {\n        _setOnlyCallerCheck(msg.sender, enabled);\n    }\n\n    function setOnlyCallerCheckWithSignature(\n        address user,\n        bool enabled,\n        bytes memory signature\n    ) external override {\n        bytes32 structHash = keccak256(abi.encode(_SET_ONLY_CALLER_CHECK_TYPEHASH, user, enabled, getNextNonce(user)));\n        _ensureValidSignature(user, structHash, signature, Errors.INVALID_SIGNATURE);\n        _setOnlyCallerCheck(user, enabled);\n    }\n\n    function _setOnlyCallerCheck(address user, bool enabled) private {\n        _isOnlyCallerEnabled[user] = enabled;\n        emit OnlyCallerOptIn(user, enabled);\n    }\n\n    function isOnlyCallerEnabled(address user) external view override returns (bool) {\n        return _isOnlyCallerEnabled[user];\n    }\n\n    function _verifyCaller(address user) private view {\n        if (_isOnlyCallerEnabled[user]) {\n            _require(msg.sender == user, Errors.SENDER_NOT_ALLOWED);\n        }\n    }\n}\n"},"contracts/helpers/ScalingHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../math/FixedPoint.sol\";\nimport \"../math/Math.sol\";\nimport \"../openzeppelin/ERC20.sol\";\nimport \"./InputHelpers.sol\";\n\n// solhint-disable\n\n// To simplify Pool logic, all token balances and amounts are normalized to behave as if the token had 18 decimals.\n// e.g. When comparing DAI (18 decimals) and USDC (6 decimals), 1 USDC and 1 DAI would both be represented as 1e18,\n// whereas without scaling 1 USDC would be represented as 1e6.\n// This allows us to not consider differences in token decimals in the internal Pool maths, simplifying it greatly.\n\n// Single Value\n\n/**\n * @dev Applies `scalingFactor` to `amount`, resulting in a larger or equal value depending on whether it needed\n * scaling or not.\n */\nfunction _upscale(uint256 amount, uint256 scalingFactor) pure returns (uint256) {\n    // Upscale rounding wouldn't necessarily always go in the same direction: in a swap for example the balance of\n    // token in should be rounded up, and that of token out rounded down. This is the only place where we round in\n    // the same direction for all amounts, as the impact of this rounding is expected to be minimal.\n    return FixedPoint.mulDown(amount, scalingFactor);\n}\n\n/**\n * @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n * whether it needed scaling or not. The result is rounded down.\n */\nfunction _downscaleDown(uint256 amount, uint256 scalingFactor) pure returns (uint256) {\n    return FixedPoint.divDown(amount, scalingFactor);\n}\n\n/**\n * @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n * whether it needed scaling or not. The result is rounded up.\n */\nfunction _downscaleUp(uint256 amount, uint256 scalingFactor) pure returns (uint256) {\n    return FixedPoint.divUp(amount, scalingFactor);\n}\n\n// Array\n\n/**\n * @dev Same as `_upscale`, but for an entire array. This function does not return anything, but instead *mutates*\n * the `amounts` array.\n */\nfunction _upscaleArray(uint256[] memory amounts, uint256[] memory scalingFactors) pure {\n    uint256 length = amounts.length;\n    InputHelpers.ensureInputLengthMatch(length, scalingFactors.length);\n\n    for (uint256 i = 0; i < length; ++i) {\n        amounts[i] = FixedPoint.mulDown(amounts[i], scalingFactors[i]);\n    }\n}\n\n/**\n * @dev Same as `_downscaleDown`, but for an entire array. This function does not return anything, but instead\n * *mutates* the `amounts` array.\n */\nfunction _downscaleDownArray(uint256[] memory amounts, uint256[] memory scalingFactors) pure {\n    uint256 length = amounts.length;\n    InputHelpers.ensureInputLengthMatch(length, scalingFactors.length);\n\n    for (uint256 i = 0; i < length; ++i) {\n        amounts[i] = FixedPoint.divDown(amounts[i], scalingFactors[i]);\n    }\n}\n\n/**\n * @dev Same as `_downscaleUp`, but for an entire array. This function does not return anything, but instead\n * *mutates* the `amounts` array.\n */\nfunction _downscaleUpArray(uint256[] memory amounts, uint256[] memory scalingFactors) pure {\n    uint256 length = amounts.length;\n    InputHelpers.ensureInputLengthMatch(length, scalingFactors.length);\n\n    for (uint256 i = 0; i < length; ++i) {\n        amounts[i] = FixedPoint.divUp(amounts[i], scalingFactors[i]);\n    }\n}\n\nfunction _computeScalingFactor(IERC20 token) view returns (uint256) {\n    // Tokens that don't implement the `decimals` method are not supported.\n    uint256 tokenDecimals = ERC20(address(token)).decimals();\n\n    // Tokens with more than 18 decimals are not supported.\n    uint256 decimalsDifference = Math.sub(18, tokenDecimals);\n    return FixedPoint.ONE * 10**decimalsDifference;\n}\n"},"contracts/helpers/SignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\";\n\nimport \"./EOASignaturesValidator.sol\";\nimport \"../openzeppelin/Address.sol\";\n\n/**\n * @dev Utility for signing Solidity function calls.\n */\nabstract contract SignaturesValidator is EOASignaturesValidator {\n    using Address for address;\n\n    function _isValidSignature(\n        address account,\n        bytes32 digest,\n        bytes memory signature\n    ) internal view virtual override returns (bool) {\n        if (account.isContract()) {\n            return IERC1271(account).isValidSignature(digest, signature) == IERC1271.isValidSignature.selector;\n        } else {\n            return super._isValidSignature(account, digest, signature);\n        }\n    }\n}\n"},"contracts/helpers/SingletonAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\n\nimport \"./Authentication.sol\";\n\nabstract contract SingletonAuthentication is Authentication {\n    IVault private immutable _vault;\n\n    // Use the contract's own address to disambiguate action identifiers\n    constructor(IVault vault) Authentication(bytes32(uint256(address(this)))) {\n        _vault = vault;\n    }\n\n    /**\n     * @notice Returns the Balancer Vault\n     */\n    function getVault() public view returns (IVault) {\n        return _vault;\n    }\n\n    /**\n     * @notice Returns the Authorizer\n     */\n    function getAuthorizer() public view returns (IAuthorizer) {\n        return getVault().getAuthorizer();\n    }\n\n    function _canPerform(bytes32 actionId, address account) internal view override returns (bool) {\n        return getAuthorizer().canPerform(actionId, account, address(this));\n    }\n\n    function _canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) internal view returns (bool) {\n        return getAuthorizer().canPerform(actionId, account, where);\n    }\n}\n"},"contracts/helpers/TemporarilyPausable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\";\n\n/**\n * @dev Allows for a contract to be paused during an initial period after deployment, disabling functionality. Can be\n * used as an emergency switch in case a security vulnerability or threat is identified.\n *\n * The contract can only be paused during the Pause Window, a period that starts at deployment. It can also be\n * unpaused and repaused any number of times during this period. This is intended to serve as a safety measure: it lets\n * system managers react quickly to potentially dangerous situations, knowing that this action is reversible if careful\n * analysis later determines there was a false alarm.\n *\n * If the contract is paused when the Pause Window finishes, it will remain in the paused state through an additional\n * Buffer Period, after which it will be automatically unpaused forever. This is to ensure there is always enough time\n * to react to an emergency, even if the threat is discovered shortly before the Pause Window expires.\n *\n * Note that since the contract can only be paused within the Pause Window, unpausing during the Buffer Period is\n * irreversible.\n */\nabstract contract TemporarilyPausable is ITemporarilyPausable {\n    // The Pause Window and Buffer Period are timestamp-based: they should not be relied upon for sub-minute accuracy.\n    // solhint-disable not-rely-on-time\n\n    uint256 private immutable _pauseWindowEndTime;\n    uint256 private immutable _bufferPeriodEndTime;\n\n    bool private _paused;\n\n    constructor(uint256 pauseWindowDuration, uint256 bufferPeriodDuration) {\n        _require(pauseWindowDuration <= PausableConstants.MAX_PAUSE_WINDOW_DURATION, Errors.MAX_PAUSE_WINDOW_DURATION);\n        _require(\n            bufferPeriodDuration <= PausableConstants.MAX_BUFFER_PERIOD_DURATION,\n            Errors.MAX_BUFFER_PERIOD_DURATION\n        );\n\n        uint256 pauseWindowEndTime = block.timestamp + pauseWindowDuration;\n\n        _pauseWindowEndTime = pauseWindowEndTime;\n        _bufferPeriodEndTime = pauseWindowEndTime + bufferPeriodDuration;\n    }\n\n    /**\n     * @dev Reverts if the contract is paused.\n     */\n    modifier whenNotPaused() {\n        _ensureNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Returns the current contract pause status, as well as the end times of the Pause Window and Buffer\n     * Period.\n     */\n    function getPausedState()\n        external\n        view\n        override\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        )\n    {\n        paused = !_isNotPaused();\n        pauseWindowEndTime = _getPauseWindowEndTime();\n        bufferPeriodEndTime = _getBufferPeriodEndTime();\n    }\n\n    /**\n     * @dev Sets the pause state to `paused`. The contract can only be paused until the end of the Pause Window, and\n     * unpaused until the end of the Buffer Period.\n     *\n     * Once the Buffer Period expires, this function reverts unconditionally.\n     */\n    function _setPaused(bool paused) internal {\n        if (paused) {\n            _require(block.timestamp < _getPauseWindowEndTime(), Errors.PAUSE_WINDOW_EXPIRED);\n        } else {\n            _require(block.timestamp < _getBufferPeriodEndTime(), Errors.BUFFER_PERIOD_EXPIRED);\n        }\n\n        _paused = paused;\n        emit PausedStateChanged(paused);\n    }\n\n    /**\n     * @dev Reverts if the contract is paused.\n     */\n    function _ensureNotPaused() internal view {\n        _require(_isNotPaused(), Errors.PAUSED);\n    }\n\n    /**\n     * @dev Reverts if the contract is not paused.\n     */\n    function _ensurePaused() internal view {\n        _require(!_isNotPaused(), Errors.NOT_PAUSED);\n    }\n\n    /**\n     * @dev Returns true if the contract is unpaused.\n     *\n     * Once the Buffer Period expires, the gas cost of calling this function is reduced dramatically, as storage is no\n     * longer accessed.\n     */\n    function _isNotPaused() internal view returns (bool) {\n        // After the Buffer Period, the (inexpensive) timestamp check short-circuits the storage access.\n        return block.timestamp > _getBufferPeriodEndTime() || !_paused;\n    }\n\n    // These getters lead to reduced bytecode size by inlining the immutable variables in a single place.\n\n    function _getPauseWindowEndTime() private view returns (uint256) {\n        return _pauseWindowEndTime;\n    }\n\n    function _getBufferPeriodEndTime() private view returns (uint256) {\n        return _bufferPeriodEndTime;\n    }\n}\n\n/**\n * @dev Keep the maximum durations in a single place.\n */\nlibrary PausableConstants {\n    uint256 public constant MAX_PAUSE_WINDOW_DURATION = 270 days;\n    uint256 public constant MAX_BUFFER_PERIOD_DURATION = 90 days;\n}\n"},"contracts/helpers/WordCodec.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\nimport \"../math/Math.sol\";\n\n/**\n * @dev Library for encoding and decoding values stored inside a 256 bit word. Typically used to pack multiple values in\n * a single storage slot, saving gas by performing less storage accesses.\n *\n * Each value is defined by its size and the least significant bit in the word, also known as offset. For example, two\n * 128 bit values may be encoded in a word by assigning one an offset of 0, and the other an offset of 128.\n *\n * We could use Solidity structs to pack values together in a single storage slot instead of relying on a custom and\n * error-prone library, but unfortunately Solidity only allows for structs to live in either storage, calldata or\n * memory. Because a memory struct uses not just memory but also a slot in the stack (to store its memory location),\n * using memory for word-sized values (i.e. of 256 bits or less) is strictly less gas performant, and doesn't even\n * prevent stack-too-deep issues. This is compounded by the fact that Balancer contracts typically are memory-intensive,\n * and the cost of accesing memory increases quadratically with the number of allocated words. Manual packing and\n * unpacking is therefore the preferred approach.\n */\nlibrary WordCodec {\n    // solhint-disable no-inline-assembly\n\n    // Masks are values with the least significant N bits set. They can be used to extract an encoded value from a word,\n    // or to insert a new one replacing the old.\n    uint256 private constant _MASK_1 = 2**(1) - 1;\n    uint256 private constant _MASK_192 = 2**(192) - 1;\n\n    // In-place insertion\n\n    /**\n     * @dev Inserts an unsigned integer of bitLength, shifted by an offset, into a 256 bit word,\n     * replacing the old value. Returns the new word.\n     */\n    function insertUint(\n        bytes32 word,\n        uint256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (bytes32 result) {\n        _validateEncodingParams(value, offset, bitLength);\n        // Equivalent to:\n        // uint256 mask = (1 << bitLength) - 1;\n        // bytes32 clearedWord = bytes32(uint256(word) & ~(mask << offset));\n        // result = clearedWord | bytes32(value << offset);\n        assembly {\n            let mask := sub(shl(bitLength, 1), 1)\n            let clearedWord := and(word, not(shl(offset, mask)))\n            result := or(clearedWord, shl(offset, value))\n        }\n    }\n\n    /**\n     * @dev Inserts a signed integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n     * the new word.\n     *\n     * Assumes `value` can be represented using `bitLength` bits.\n     */\n    function insertInt(\n        bytes32 word,\n        int256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (bytes32) {\n        _validateEncodingParams(value, offset, bitLength);\n\n        uint256 mask = (1 << bitLength) - 1;\n        bytes32 clearedWord = bytes32(uint256(word) & ~(mask << offset));\n        // Integer values need masking to remove the upper bits of negative values.\n        return clearedWord | bytes32((uint256(value) & mask) << offset);\n    }\n\n    // Encoding\n\n    /**\n     * @dev Encodes an unsigned integer shifted by an offset. Ensures value fits within\n     * `bitLength` bits.\n     *\n     * The return value can be ORed bitwise with other encoded values to form a 256 bit word.\n     */\n    function encodeUint(\n        uint256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (bytes32) {\n        _validateEncodingParams(value, offset, bitLength);\n\n        return bytes32(value << offset);\n    }\n\n    /**\n     * @dev Encodes a signed integer shifted by an offset.\n     *\n     * The return value can be ORed bitwise with other encoded values to form a 256 bit word.\n     */\n    function encodeInt(\n        int256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (bytes32) {\n        _validateEncodingParams(value, offset, bitLength);\n\n        uint256 mask = (1 << bitLength) - 1;\n        // Integer values need masking to remove the upper bits of negative values.\n        return bytes32((uint256(value) & mask) << offset);\n    }\n\n    // Decoding\n\n    /**\n     * @dev Decodes and returns an unsigned integer with `bitLength` bits, shifted by an offset, from a 256 bit word.\n     */\n    function decodeUint(\n        bytes32 word,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (uint256 result) {\n        // Equivalent to:\n        // result = uint256(word >> offset) & ((1 << bitLength) - 1);\n        assembly {\n            result := and(shr(offset, word), sub(shl(bitLength, 1), 1))\n        }\n    }\n\n    /**\n     * @dev Decodes and returns a signed integer with `bitLength` bits, shifted by an offset, from a 256 bit word.\n     */\n    function decodeInt(\n        bytes32 word,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (int256 result) {\n        int256 maxInt = int256((1 << (bitLength - 1)) - 1);\n        uint256 mask = (1 << bitLength) - 1;\n\n        int256 value = int256(uint256(word >> offset) & mask);\n        // In case the decoded value is greater than the max positive integer that can be represented with bitLength\n        // bits, we know it was originally a negative integer. Therefore, we mask it to restore the sign in the 256 bit\n        // representation.\n        //\n        // Equivalent to:\n        // result = value > maxInt ? (value | int256(~mask)) : value;\n        assembly {\n            result := or(mul(gt(value, maxInt), not(mask)), value)\n        }\n    }\n\n    // Special cases\n\n    /**\n     * @dev Decodes and returns a boolean shifted by an offset from a 256 bit word.\n     */\n    function decodeBool(bytes32 word, uint256 offset) internal pure returns (bool result) {\n        // Equivalent to:\n        // result = (uint256(word >> offset) & 1) == 1;\n        assembly {\n            result := and(shr(offset, word), 1)\n        }\n    }\n\n    /**\n     * @dev Inserts a 192 bit value shifted by an offset into a 256 bit word, replacing the old value.\n     * Returns the new word.\n     *\n     * Assumes `value` can be represented using 192 bits.\n     */\n    function insertBits192(\n        bytes32 word,\n        bytes32 value,\n        uint256 offset\n    ) internal pure returns (bytes32) {\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_192 << offset));\n        return clearedWord | bytes32((uint256(value) & _MASK_192) << offset);\n    }\n\n    /**\n     * @dev Inserts a boolean value shifted by an offset into a 256 bit word, replacing the old value. Returns the new\n     * word.\n     */\n    function insertBool(\n        bytes32 word,\n        bool value,\n        uint256 offset\n    ) internal pure returns (bytes32 result) {\n        // Equivalent to:\n        // bytes32 clearedWord = bytes32(uint256(word) & ~(1 << offset));\n        // bytes32 referenceInsertBool = clearedWord | bytes32(uint256(value ? 1 : 0) << offset);\n        assembly {\n            let clearedWord := and(word, not(shl(offset, 1)))\n            result := or(clearedWord, shl(offset, value))\n        }\n    }\n\n    // Helpers\n\n    function _validateEncodingParams(\n        uint256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) private pure {\n        _require(offset < 256, Errors.OUT_OF_BOUNDS);\n        // We never accept 256 bit values (which would make the codec pointless), and the larger the offset the smaller\n        // the maximum bit length.\n        _require(bitLength >= 1 && bitLength <= Math.min(255, 256 - offset), Errors.OUT_OF_BOUNDS);\n\n        // Testing unsigned values for size is straightforward: their upper bits must be cleared.\n        _require(value >> bitLength == 0, Errors.CODEC_OVERFLOW);\n    }\n\n    function _validateEncodingParams(\n        int256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) private pure {\n        _require(offset < 256, Errors.OUT_OF_BOUNDS);\n        // We never accept 256 bit values (which would make the codec pointless), and the larger the offset the smaller\n        // the maximum bit length.\n        _require(bitLength >= 1 && bitLength <= Math.min(255, 256 - offset), Errors.OUT_OF_BOUNDS);\n\n        // Testing signed values for size is a bit more involved.\n        if (value >= 0) {\n            // For positive values, we can simply check that the upper bits are clear. Notice we remove one bit from the\n            // length for the sign bit.\n            _require(value >> (bitLength - 1) == 0, Errors.CODEC_OVERFLOW);\n        } else {\n            // Negative values can receive the same treatment by making them positive, with the caveat that the range\n            // for negative values in two's complement supports one more value than for the positive case.\n            _require(Math.abs(value + 1) >> (bitLength - 1) == 0, Errors.CODEC_OVERFLOW);\n        }\n    }\n}\n"},"contracts/helpers/WordCodecHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nlibrary WordCodecHelpers {\n    function clearWordAtPosition(\n        bytes32 word,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (bytes32 clearedWord) {\n        uint256 mask = (1 << bitLength) - 1;\n        clearedWord = bytes32(uint256(word) & ~(mask << offset));\n    }\n\n    function isOtherStateUnchanged(\n        bytes32 oldPoolState,\n        bytes32 newPoolState,\n        uint256 offset,\n        uint256 bitLength\n    ) internal pure returns (bool) {\n        bytes32 clearedOldState = clearWordAtPosition(oldPoolState, offset, bitLength);\n        bytes32 clearedNewState = clearWordAtPosition(newPoolState, offset, bitLength);\n\n        return clearedNewState == clearedOldState;\n    }\n}\n"},"contracts/math/FixedPoint.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\nimport \"./LogExpMath.sol\";\n\n/* solhint-disable private-vars-leading-underscore */\n\nlibrary FixedPoint {\n    // solhint-disable no-inline-assembly\n\n    uint256 internal constant ONE = 1e18; // 18 decimal places\n    uint256 internal constant TWO = 2 * ONE;\n    uint256 internal constant FOUR = 4 * ONE;\n    uint256 internal constant MAX_POW_RELATIVE_ERROR = 10000; // 10^(-14)\n\n    // Minimum base for the power function when the exponent is 'free' (larger than ONE).\n    uint256 internal constant MIN_POW_BASE_FREE_EXPONENT = 0.7e18;\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Fixed Point addition is the same as regular checked addition\n\n        uint256 c = a + b;\n        _require(c >= a, Errors.ADD_OVERFLOW);\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Fixed Point addition is the same as regular checked addition\n\n        _require(b <= a, Errors.SUB_OVERFLOW);\n        uint256 c = a - b;\n        return c;\n    }\n\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 product = a * b;\n        _require(a == 0 || product / a == b, Errors.MUL_OVERFLOW);\n\n        return product / ONE;\n    }\n\n    function mulUp(uint256 a, uint256 b) internal pure returns (uint256 result) {\n        uint256 product = a * b;\n        _require(a == 0 || product / a == b, Errors.MUL_OVERFLOW);\n\n        // The traditional divUp formula is:\n        // divUp(x, y) := (x + y - 1) / y\n        // To avoid intermediate overflow in the addition, we distribute the division and get:\n        // divUp(x, y) := (x - 1) / y + 1\n        // Note that this requires x != 0, if x == 0 then the result is zero\n        //\n        // Equivalent to:\n        // result = product == 0 ? 0 : ((product - 1) / FixedPoint.ONE) + 1;\n        assembly {\n            result := mul(iszero(iszero(product)), add(div(sub(product, 1), ONE), 1))\n        }\n    }\n\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        _require(b != 0, Errors.ZERO_DIVISION);\n\n        uint256 aInflated = a * ONE;\n        _require(a == 0 || aInflated / a == ONE, Errors.DIV_INTERNAL); // mul overflow\n\n        return aInflated / b;\n    }\n\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256 result) {\n        _require(b != 0, Errors.ZERO_DIVISION);\n\n        uint256 aInflated = a * ONE;\n        _require(a == 0 || aInflated / a == ONE, Errors.DIV_INTERNAL); // mul overflow\n\n        // The traditional divUp formula is:\n        // divUp(x, y) := (x + y - 1) / y\n        // To avoid intermediate overflow in the addition, we distribute the division and get:\n        // divUp(x, y) := (x - 1) / y + 1\n        // Note that this requires x != 0, if x == 0 then the result is zero\n        //\n        // Equivalent to:\n        // result = a == 0 ? 0 : (a * FixedPoint.ONE - 1) / b + 1;\n        assembly {\n            result := mul(iszero(iszero(aInflated)), add(div(sub(aInflated, 1), b), 1))\n        }\n    }\n\n    /**\n     * @dev Returns x^y, assuming both are fixed point numbers, rounding down. The result is guaranteed to not be above\n     * the true value (that is, the error function expected - actual is always positive).\n     */\n    function powDown(uint256 x, uint256 y) internal pure returns (uint256) {\n        // Optimize for when y equals 1.0, 2.0 or 4.0, as those are very simple to implement and occur often in 50/50\n        // and 80/20 Weighted Pools\n        if (y == ONE) {\n            return x;\n        } else if (y == TWO) {\n            return mulDown(x, x);\n        } else if (y == FOUR) {\n            uint256 square = mulDown(x, x);\n            return mulDown(square, square);\n        } else {\n            uint256 raw = LogExpMath.pow(x, y);\n            uint256 maxError = add(mulUp(raw, MAX_POW_RELATIVE_ERROR), 1);\n\n            if (raw < maxError) {\n                return 0;\n            } else {\n                return sub(raw, maxError);\n            }\n        }\n    }\n\n    /**\n     * @dev Returns x^y, assuming both are fixed point numbers, rounding up. The result is guaranteed to not be below\n     * the true value (that is, the error function expected - actual is always negative).\n     */\n    function powUp(uint256 x, uint256 y) internal pure returns (uint256) {\n        // Optimize for when y equals 1.0, 2.0 or 4.0, as those are very simple to implement and occur often in 50/50\n        // and 80/20 Weighted Pools\n        if (y == ONE) {\n            return x;\n        } else if (y == TWO) {\n            return mulUp(x, x);\n        } else if (y == FOUR) {\n            uint256 square = mulUp(x, x);\n            return mulUp(square, square);\n        } else {\n            uint256 raw = LogExpMath.pow(x, y);\n            uint256 maxError = add(mulUp(raw, MAX_POW_RELATIVE_ERROR), 1);\n\n            return add(raw, maxError);\n        }\n    }\n\n    /**\n     * @dev Returns the complement of a value (1 - x), capped to 0 if x is larger than 1.\n     *\n     * Useful when computing the complement for values with some level of relative error, as it strips this error and\n     * prevents intermediate negative values.\n     */\n    function complement(uint256 x) internal pure returns (uint256 result) {\n        // Equivalent to:\n        // result = (x < ONE) ? (ONE - x) : 0;\n        assembly {\n            result := mul(lt(x, ONE), sub(ONE, x))\n        }\n    }\n}\n"},"contracts/math/LogExpMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files (the “Software”), to deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n// Software.\n\n// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n// WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/* solhint-disable */\n\n/**\n * @dev Exponentiation and logarithm functions for 18 decimal fixed point numbers (both base and exponent/argument).\n *\n * Exponentiation and logarithm with arbitrary bases (x^y and log_x(y)) are implemented by conversion to natural\n * exponentiation and logarithm (where the base is Euler's number).\n *\n * @author Fernando Martinelli - @fernandomartinelli\n * @author Sergio Yuhjtman - @sergioyuhjtman\n * @author Daniel Fernandez - @dmf7z\n */\nlibrary LogExpMath {\n    // All fixed point multiplications and divisions are inlined. This means we need to divide by ONE when multiplying\n    // two numbers, and multiply by ONE when dividing them.\n\n    // All arguments and return values are 18 decimal fixed point numbers.\n    int256 constant ONE_18 = 1e18;\n\n    // Internally, intermediate values are computed with higher precision as 20 decimal fixed point numbers, and in the\n    // case of ln36, 36 decimals.\n    int256 constant ONE_20 = 1e20;\n    int256 constant ONE_36 = 1e36;\n\n    // The domain of natural exponentiation is bound by the word size and number of decimals used.\n    //\n    // Because internally the result will be stored using 20 decimals, the largest possible result is\n    // (2^255 - 1) / 10^20, which makes the largest exponent ln((2^255 - 1) / 10^20) = 130.700829182905140221.\n    // The smallest possible result is 10^(-18), which makes largest negative argument\n    // ln(10^(-18)) = -41.446531673892822312.\n    // We use 130.0 and -41.0 to have some safety margin.\n    int256 constant MAX_NATURAL_EXPONENT = 130e18;\n    int256 constant MIN_NATURAL_EXPONENT = -41e18;\n\n    // Bounds for ln_36's argument. Both ln(0.9) and ln(1.1) can be represented with 36 decimal places in a fixed point\n    // 256 bit integer.\n    int256 constant LN_36_LOWER_BOUND = ONE_18 - 1e17;\n    int256 constant LN_36_UPPER_BOUND = ONE_18 + 1e17;\n\n    uint256 constant MILD_EXPONENT_BOUND = 2**254 / uint256(ONE_20);\n\n    // 18 decimal constants\n    int256 constant x0 = 128000000000000000000; // 2ˆ7\n    int256 constant a0 = 38877084059945950922200000000000000000000000000000000000; // eˆ(x0) (no decimals)\n    int256 constant x1 = 64000000000000000000; // 2ˆ6\n    int256 constant a1 = 6235149080811616882910000000; // eˆ(x1) (no decimals)\n\n    // 20 decimal constants\n    int256 constant x2 = 3200000000000000000000; // 2ˆ5\n    int256 constant a2 = 7896296018268069516100000000000000; // eˆ(x2)\n    int256 constant x3 = 1600000000000000000000; // 2ˆ4\n    int256 constant a3 = 888611052050787263676000000; // eˆ(x3)\n    int256 constant x4 = 800000000000000000000; // 2ˆ3\n    int256 constant a4 = 298095798704172827474000; // eˆ(x4)\n    int256 constant x5 = 400000000000000000000; // 2ˆ2\n    int256 constant a5 = 5459815003314423907810; // eˆ(x5)\n    int256 constant x6 = 200000000000000000000; // 2ˆ1\n    int256 constant a6 = 738905609893065022723; // eˆ(x6)\n    int256 constant x7 = 100000000000000000000; // 2ˆ0\n    int256 constant a7 = 271828182845904523536; // eˆ(x7)\n    int256 constant x8 = 50000000000000000000; // 2ˆ-1\n    int256 constant a8 = 164872127070012814685; // eˆ(x8)\n    int256 constant x9 = 25000000000000000000; // 2ˆ-2\n    int256 constant a9 = 128402541668774148407; // eˆ(x9)\n    int256 constant x10 = 12500000000000000000; // 2ˆ-3\n    int256 constant a10 = 113314845306682631683; // eˆ(x10)\n    int256 constant x11 = 6250000000000000000; // 2ˆ-4\n    int256 constant a11 = 106449445891785942956; // eˆ(x11)\n\n    /**\n     * @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\n     *\n     * Reverts if ln(x) * y is smaller than `MIN_NATURAL_EXPONENT`, or larger than `MAX_NATURAL_EXPONENT`.\n     */\n    function pow(uint256 x, uint256 y) internal pure returns (uint256) {\n        if (y == 0) {\n            // We solve the 0^0 indetermination by making it equal one.\n            return uint256(ONE_18);\n        }\n\n        if (x == 0) {\n            return 0;\n        }\n\n        // Instead of computing x^y directly, we instead rely on the properties of logarithms and exponentiation to\n        // arrive at that result. In particular, exp(ln(x)) = x, and ln(x^y) = y * ln(x). This means\n        // x^y = exp(y * ln(x)).\n\n        // The ln function takes a signed value, so we need to make sure x fits in the signed 256 bit range.\n        _require(x >> 255 == 0, Errors.X_OUT_OF_BOUNDS);\n        int256 x_int256 = int256(x);\n\n        // We will compute y * ln(x) in a single step. Depending on the value of x, we can either use ln or ln_36. In\n        // both cases, we leave the division by ONE_18 (due to fixed point multiplication) to the end.\n\n        // This prevents y * ln(x) from overflowing, and at the same time guarantees y fits in the signed 256 bit range.\n        _require(y < MILD_EXPONENT_BOUND, Errors.Y_OUT_OF_BOUNDS);\n        int256 y_int256 = int256(y);\n\n        int256 logx_times_y;\n        if (LN_36_LOWER_BOUND < x_int256 && x_int256 < LN_36_UPPER_BOUND) {\n            int256 ln_36_x = _ln_36(x_int256);\n\n            // ln_36_x has 36 decimal places, so multiplying by y_int256 isn't as straightforward, since we can't just\n            // bring y_int256 to 36 decimal places, as it might overflow. Instead, we perform two 18 decimal\n            // multiplications and add the results: one with the first 18 decimals of ln_36_x, and one with the\n            // (downscaled) last 18 decimals.\n            logx_times_y = ((ln_36_x / ONE_18) * y_int256 + ((ln_36_x % ONE_18) * y_int256) / ONE_18);\n        } else {\n            logx_times_y = _ln(x_int256) * y_int256;\n        }\n        logx_times_y /= ONE_18;\n\n        // Finally, we compute exp(y * ln(x)) to arrive at x^y\n        _require(\n            MIN_NATURAL_EXPONENT <= logx_times_y && logx_times_y <= MAX_NATURAL_EXPONENT,\n            Errors.PRODUCT_OUT_OF_BOUNDS\n        );\n\n        return uint256(exp(logx_times_y));\n    }\n\n    /**\n     * @dev Natural exponentiation (e^x) with signed 18 decimal fixed point exponent.\n     *\n     * Reverts if `x` is smaller than MIN_NATURAL_EXPONENT, or larger than `MAX_NATURAL_EXPONENT`.\n     */\n    function exp(int256 x) internal pure returns (int256) {\n        _require(x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT, Errors.INVALID_EXPONENT);\n\n        if (x < 0) {\n            // We only handle positive exponents: e^(-x) is computed as 1 / e^x. We can safely make x positive since it\n            // fits in the signed 256 bit range (as it is larger than MIN_NATURAL_EXPONENT).\n            // Fixed point division requires multiplying by ONE_18.\n            return ((ONE_18 * ONE_18) / exp(-x));\n        }\n\n        // First, we use the fact that e^(x+y) = e^x * e^y to decompose x into a sum of powers of two, which we call x_n,\n        // where x_n == 2^(7 - n), and e^x_n = a_n has been precomputed. We choose the first x_n, x0, to equal 2^7\n        // because all larger powers are larger than MAX_NATURAL_EXPONENT, and therefore not present in the\n        // decomposition.\n        // At the end of this process we will have the product of all e^x_n = a_n that apply, and the remainder of this\n        // decomposition, which will be lower than the smallest x_n.\n        // exp(x) = k_0 * a_0 * k_1 * a_1 * ... + k_n * a_n * exp(remainder), where each k_n equals either 0 or 1.\n        // We mutate x by subtracting x_n, making it the remainder of the decomposition.\n\n        // The first two a_n (e^(2^7) and e^(2^6)) are too large if stored as 18 decimal numbers, and could cause\n        // intermediate overflows. Instead we store them as plain integers, with 0 decimals.\n        // Additionally, x0 + x1 is larger than MAX_NATURAL_EXPONENT, which means they will not both be present in the\n        // decomposition.\n\n        // For each x_n, we test if that term is present in the decomposition (if x is larger than it), and if so deduct\n        // it and compute the accumulated product.\n\n        int256 firstAN;\n        if (x >= x0) {\n            x -= x0;\n            firstAN = a0;\n        } else if (x >= x1) {\n            x -= x1;\n            firstAN = a1;\n        } else {\n            firstAN = 1; // One with no decimal places\n        }\n\n        // We now transform x into a 20 decimal fixed point number, to have enhanced precision when computing the\n        // smaller terms.\n        x *= 100;\n\n        // `product` is the accumulated product of all a_n (except a0 and a1), which starts at 20 decimal fixed point\n        // one. Recall that fixed point multiplication requires dividing by ONE_20.\n        int256 product = ONE_20;\n\n        if (x >= x2) {\n            x -= x2;\n            product = (product * a2) / ONE_20;\n        }\n        if (x >= x3) {\n            x -= x3;\n            product = (product * a3) / ONE_20;\n        }\n        if (x >= x4) {\n            x -= x4;\n            product = (product * a4) / ONE_20;\n        }\n        if (x >= x5) {\n            x -= x5;\n            product = (product * a5) / ONE_20;\n        }\n        if (x >= x6) {\n            x -= x6;\n            product = (product * a6) / ONE_20;\n        }\n        if (x >= x7) {\n            x -= x7;\n            product = (product * a7) / ONE_20;\n        }\n        if (x >= x8) {\n            x -= x8;\n            product = (product * a8) / ONE_20;\n        }\n        if (x >= x9) {\n            x -= x9;\n            product = (product * a9) / ONE_20;\n        }\n\n        // x10 and x11 are unnecessary here since we have high enough precision already.\n\n        // Now we need to compute e^x, where x is small (in particular, it is smaller than x9). We use the Taylor series\n        // expansion for e^x: 1 + x + (x^2 / 2!) + (x^3 / 3!) + ... + (x^n / n!).\n\n        int256 seriesSum = ONE_20; // The initial one in the sum, with 20 decimal places.\n        int256 term; // Each term in the sum, where the nth term is (x^n / n!).\n\n        // The first term is simply x.\n        term = x;\n        seriesSum += term;\n\n        // Each term (x^n / n!) equals the previous one times x, divided by n. Since x is a fixed point number,\n        // multiplying by it requires dividing by ONE_20, but dividing by the non-fixed point n values does not.\n\n        term = ((term * x) / ONE_20) / 2;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 3;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 4;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 5;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 6;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 7;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 8;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 9;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 10;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 11;\n        seriesSum += term;\n\n        term = ((term * x) / ONE_20) / 12;\n        seriesSum += term;\n\n        // 12 Taylor terms are sufficient for 18 decimal precision.\n\n        // We now have the first a_n (with no decimals), and the product of all other a_n present, and the Taylor\n        // approximation of the exponentiation of the remainder (both with 20 decimals). All that remains is to multiply\n        // all three (one 20 decimal fixed point multiplication, dividing by ONE_20, and one integer multiplication),\n        // and then drop two digits to return an 18 decimal value.\n\n        return (((product * seriesSum) / ONE_20) * firstAN) / 100;\n    }\n\n    /**\n     * @dev Logarithm (log(arg, base), with signed 18 decimal fixed point base and argument.\n     */\n    function log(int256 arg, int256 base) internal pure returns (int256) {\n        // This performs a simple base change: log(arg, base) = ln(arg) / ln(base).\n\n        // Both logBase and logArg are computed as 36 decimal fixed point numbers, either by using ln_36, or by\n        // upscaling.\n\n        int256 logBase;\n        if (LN_36_LOWER_BOUND < base && base < LN_36_UPPER_BOUND) {\n            logBase = _ln_36(base);\n        } else {\n            logBase = _ln(base) * ONE_18;\n        }\n\n        int256 logArg;\n        if (LN_36_LOWER_BOUND < arg && arg < LN_36_UPPER_BOUND) {\n            logArg = _ln_36(arg);\n        } else {\n            logArg = _ln(arg) * ONE_18;\n        }\n\n        // When dividing, we multiply by ONE_18 to arrive at a result with 18 decimal places\n        return (logArg * ONE_18) / logBase;\n    }\n\n    /**\n     * @dev Natural logarithm (ln(a)) with signed 18 decimal fixed point argument.\n     */\n    function ln(int256 a) internal pure returns (int256) {\n        // The real natural logarithm is not defined for negative numbers or zero.\n        _require(a > 0, Errors.OUT_OF_BOUNDS);\n        if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {\n            return _ln_36(a) / ONE_18;\n        } else {\n            return _ln(a);\n        }\n    }\n\n    /**\n     * @dev Internal natural logarithm (ln(a)) with signed 18 decimal fixed point argument.\n     */\n    function _ln(int256 a) private pure returns (int256) {\n        if (a < ONE_18) {\n            // Since ln(a^k) = k * ln(a), we can compute ln(a) as ln(a) = ln((1/a)^(-1)) = - ln((1/a)). If a is less\n            // than one, 1/a will be greater than one, and this if statement will not be entered in the recursive call.\n            // Fixed point division requires multiplying by ONE_18.\n            return (-_ln((ONE_18 * ONE_18) / a));\n        }\n\n        // First, we use the fact that ln^(a * b) = ln(a) + ln(b) to decompose ln(a) into a sum of powers of two, which\n        // we call x_n, where x_n == 2^(7 - n), which are the natural logarithm of precomputed quantities a_n (that is,\n        // ln(a_n) = x_n). We choose the first x_n, x0, to equal 2^7 because the exponential of all larger powers cannot\n        // be represented as 18 fixed point decimal numbers in 256 bits, and are therefore larger than a.\n        // At the end of this process we will have the sum of all x_n = ln(a_n) that apply, and the remainder of this\n        // decomposition, which will be lower than the smallest a_n.\n        // ln(a) = k_0 * x_0 + k_1 * x_1 + ... + k_n * x_n + ln(remainder), where each k_n equals either 0 or 1.\n        // We mutate a by subtracting a_n, making it the remainder of the decomposition.\n\n        // For reasons related to how `exp` works, the first two a_n (e^(2^7) and e^(2^6)) are not stored as fixed point\n        // numbers with 18 decimals, but instead as plain integers with 0 decimals, so we need to multiply them by\n        // ONE_18 to convert them to fixed point.\n        // For each a_n, we test if that term is present in the decomposition (if a is larger than it), and if so divide\n        // by it and compute the accumulated sum.\n\n        int256 sum = 0;\n        if (a >= a0 * ONE_18) {\n            a /= a0; // Integer, not fixed point division\n            sum += x0;\n        }\n\n        if (a >= a1 * ONE_18) {\n            a /= a1; // Integer, not fixed point division\n            sum += x1;\n        }\n\n        // All other a_n and x_n are stored as 20 digit fixed point numbers, so we convert the sum and a to this format.\n        sum *= 100;\n        a *= 100;\n\n        // Because further a_n are  20 digit fixed point numbers, we multiply by ONE_20 when dividing by them.\n\n        if (a >= a2) {\n            a = (a * ONE_20) / a2;\n            sum += x2;\n        }\n\n        if (a >= a3) {\n            a = (a * ONE_20) / a3;\n            sum += x3;\n        }\n\n        if (a >= a4) {\n            a = (a * ONE_20) / a4;\n            sum += x4;\n        }\n\n        if (a >= a5) {\n            a = (a * ONE_20) / a5;\n            sum += x5;\n        }\n\n        if (a >= a6) {\n            a = (a * ONE_20) / a6;\n            sum += x6;\n        }\n\n        if (a >= a7) {\n            a = (a * ONE_20) / a7;\n            sum += x7;\n        }\n\n        if (a >= a8) {\n            a = (a * ONE_20) / a8;\n            sum += x8;\n        }\n\n        if (a >= a9) {\n            a = (a * ONE_20) / a9;\n            sum += x9;\n        }\n\n        if (a >= a10) {\n            a = (a * ONE_20) / a10;\n            sum += x10;\n        }\n\n        if (a >= a11) {\n            a = (a * ONE_20) / a11;\n            sum += x11;\n        }\n\n        // a is now a small number (smaller than a_11, which roughly equals 1.06). This means we can use a Taylor series\n        // that converges rapidly for values of `a` close to one - the same one used in ln_36.\n        // Let z = (a - 1) / (a + 1).\n        // ln(a) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n\n        // Recall that 20 digit fixed point division requires multiplying by ONE_20, and multiplication requires\n        // division by ONE_20.\n        int256 z = ((a - ONE_20) * ONE_20) / (a + ONE_20);\n        int256 z_squared = (z * z) / ONE_20;\n\n        // num is the numerator of the series: the z^(2 * n + 1) term\n        int256 num = z;\n\n        // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n        int256 seriesSum = num;\n\n        // In each step, the numerator is multiplied by z^2\n        num = (num * z_squared) / ONE_20;\n        seriesSum += num / 3;\n\n        num = (num * z_squared) / ONE_20;\n        seriesSum += num / 5;\n\n        num = (num * z_squared) / ONE_20;\n        seriesSum += num / 7;\n\n        num = (num * z_squared) / ONE_20;\n        seriesSum += num / 9;\n\n        num = (num * z_squared) / ONE_20;\n        seriesSum += num / 11;\n\n        // 6 Taylor terms are sufficient for 36 decimal precision.\n\n        // Finally, we multiply by 2 (non fixed point) to compute ln(remainder)\n        seriesSum *= 2;\n\n        // We now have the sum of all x_n present, and the Taylor approximation of the logarithm of the remainder (both\n        // with 20 decimals). All that remains is to sum these two, and then drop two digits to return a 18 decimal\n        // value.\n\n        return (sum + seriesSum) / 100;\n    }\n\n    /**\n     * @dev Intrnal high precision (36 decimal places) natural logarithm (ln(x)) with signed 18 decimal fixed point argument,\n     * for x close to one.\n     *\n     * Should only be used if x is between LN_36_LOWER_BOUND and LN_36_UPPER_BOUND.\n     */\n    function _ln_36(int256 x) private pure returns (int256) {\n        // Since ln(1) = 0, a value of x close to one will yield a very small result, which makes using 36 digits\n        // worthwhile.\n\n        // First, we transform x to a 36 digit fixed point value.\n        x *= ONE_18;\n\n        // We will use the following Taylor expansion, which converges very rapidly. Let z = (x - 1) / (x + 1).\n        // ln(x) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n\n        // Recall that 36 digit fixed point division requires multiplying by ONE_36, and multiplication requires\n        // division by ONE_36.\n        int256 z = ((x - ONE_36) * ONE_36) / (x + ONE_36);\n        int256 z_squared = (z * z) / ONE_36;\n\n        // num is the numerator of the series: the z^(2 * n + 1) term\n        int256 num = z;\n\n        // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n        int256 seriesSum = num;\n\n        // In each step, the numerator is multiplied by z^2\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 3;\n\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 5;\n\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 7;\n\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 9;\n\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 11;\n\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 13;\n\n        num = (num * z_squared) / ONE_36;\n        seriesSum += num / 15;\n\n        // 8 Taylor terms are sufficient for 36 decimal precision.\n\n        // All that remains is multiplying by 2 (non fixed point).\n        return seriesSum * 2;\n    }\n}\n"},"contracts/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow checks.\n * Adapted from OpenZeppelin's SafeMath library.\n */\nlibrary Math {\n    // solhint-disable no-inline-assembly\n\n    /**\n     * @dev Returns the absolute value of a signed integer.\n     */\n    function abs(int256 a) internal pure returns (uint256 result) {\n        // Equivalent to:\n        // result = a > 0 ? uint256(a) : uint256(-a)\n        assembly {\n            let s := sar(255, a)\n            result := sub(xor(a, s), s)\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers of 256 bits, reverting on overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        _require(c >= a, Errors.ADD_OVERFLOW);\n        return c;\n    }\n\n    /**\n     * @dev Returns the addition of two signed integers, reverting on overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a + b;\n        _require((b >= 0 && c >= a) || (b < 0 && c < a), Errors.ADD_OVERFLOW);\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers of 256 bits, reverting on overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        _require(b <= a, Errors.SUB_OVERFLOW);\n        uint256 c = a - b;\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two signed integers, reverting on overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        int256 c = a - b;\n        _require((b >= 0 && c <= a) || (b < 0 && c > a), Errors.SUB_OVERFLOW);\n        return c;\n    }\n\n    /**\n     * @dev Returns the largest of two numbers of 256 bits.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256 result) {\n        // Equivalent to:\n        // result = (a < b) ? b : a;\n        assembly {\n            result := sub(a, mul(sub(a, b), lt(a, b)))\n        }\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers of 256 bits.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256 result) {\n        // Equivalent to `result = (a < b) ? a : b`\n        assembly {\n            result := sub(a, mul(sub(a, b), gt(a, b)))\n        }\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a * b;\n        _require(a == 0 || c / a == b, Errors.MUL_OVERFLOW);\n        return c;\n    }\n\n    function div(\n        uint256 a,\n        uint256 b,\n        bool roundUp\n    ) internal pure returns (uint256) {\n        return roundUp ? divUp(a, b) : divDown(a, b);\n    }\n\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        _require(b != 0, Errors.ZERO_DIVISION);\n        return a / b;\n    }\n\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256 result) {\n        _require(b != 0, Errors.ZERO_DIVISION);\n\n        // Equivalent to:\n        // result = a == 0 ? 0 : 1 + (a - 1) / b;\n        assembly {\n            result := mul(iszero(iszero(a)), add(1, div(sub(a, 1), b)))\n        }\n    }\n}\n"},"contracts/openzeppelin/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Based on the Address library from OpenZeppelin Contracts, altered by removing the `isContract` checks on\n// `functionCall` and `functionDelegateCall` in order to save gas, as the recipients are known to be contracts.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    // solhint-disable max-line-length\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        _require(address(this).balance >= amount, Errors.ADDRESS_INSUFFICIENT_BALANCE);\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        _require(success, Errors.ADDRESS_CANNOT_SEND_VALUE);\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call(data);\n        return verifyCallResult(success, returndata);\n    }\n\n    // solhint-enable max-line-length\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but passing some native ETH as msg.value to the call.\n     *\n     * _Available since v3.4._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return verifyCallResult(success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling up the\n     * revert reason or using the one provided.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                _revert(Errors.LOW_LEVEL_CALL_FAILED);\n            }\n        }\n    }\n}\n"},"contracts/openzeppelin/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(\n        uint256 amount,\n        bytes32 salt,\n        bytes memory bytecode\n    ) internal returns (address) {\n        address addr;\n        require(address(this).balance >= amount, \"CREATE2_INSUFFICIENT_BALANCE\");\n        require(bytecode.length != 0, \"CREATE2_BYTECODE_ZERO\");\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"CREATE2_DEPLOY_FAILED\");\n        return addr;\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(\n        bytes32 salt,\n        bytes32 bytecodeHash,\n        address deployer\n    ) internal pure returns (address) {\n        bytes32 _data = keccak256(abi.encodePacked(bytes1(0xff), deployer, salt, bytecodeHash));\n        return address(uint256(_data));\n    }\n}\n"},"contracts/openzeppelin/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _HASHED_NAME = keccak256(bytes(name));\n        _HASHED_VERSION = keccak256(bytes(version));\n        _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view virtual returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION, _getChainId(), address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", _domainSeparatorV4(), structHash));\n    }\n\n    // solc-ignore-next-line func-mutability\n    function _getChainId() private view returns (uint256 chainId) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            chainId := chainid()\n        }\n    }\n}\n"},"contracts/openzeppelin/EnumerableMap.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Based on the EnumerableMap library from OpenZeppelin Contracts, altered to include the following:\n//  * a map from IERC20 to bytes32\n//  * entries are stored in mappings instead of arrays, reducing implicit storage reads for out-of-bounds checks\n//  * unchecked_at and unchecked_valueAt, which allow for more gas efficient data reads in some scenarios\n//  * indexOf, unchecked_indexOf and unchecked_setAt, which allow for more gas efficient data writes in some scenarios\n//\n// Additionally, the base private functions that work on bytes32 were removed and replaced with a native implementation\n// for IERC20 keys, to reduce bytecode size and runtime costs.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n */\nlibrary EnumerableMap {\n    // The original OpenZeppelin implementation uses a generic Map type with bytes32 keys: this was replaced with\n    // IERC20ToBytes32Map and IERC20ToUint256Map, resulting in more dense bytecode (as long as each contract only uses\n    // one of these - there'll otherwise be duplicated code).\n\n    // IERC20ToBytes32Map\n\n    // solhint-disable func-name-mixedcase\n\n    struct IERC20ToBytes32MapEntry {\n        IERC20 _key;\n        bytes32 _value;\n    }\n\n    struct IERC20ToBytes32Map {\n        // Number of entries in the map\n        uint256 _length;\n        // Storage of map keys and values\n        mapping(uint256 => IERC20ToBytes32MapEntry) _entries;\n        // Position of the entry defined by a key in the `entries` array, plus 1\n        // because index 0 means a key is not in the map.\n        mapping(IERC20 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        IERC20ToBytes32Map storage map,\n        IERC20 key,\n        bytes32 value\n    ) internal returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        // Equivalent to !contains(map, key)\n        if (keyIndex == 0) {\n            uint256 previousLength = map._length;\n            map._entries[previousLength] = IERC20ToBytes32MapEntry({ _key: key, _value: value });\n            map._length = previousLength + 1;\n\n            // The entry is stored at previousLength, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            map._indexes[key] = previousLength + 1;\n            return true;\n        } else {\n            map._entries[keyIndex - 1]._value = value;\n            return false;\n        }\n    }\n\n    /**\n     * @dev Updates the value for an entry, given its key's index. The key index can be retrieved via\n     * {unchecked_indexOf}, and it should be noted that key indices may change when calling {set} or {remove}. O(1).\n     *\n     * This function performs one less storage read than {set}, but it should only be used when `index` is known to be\n     * within bounds.\n     */\n    function unchecked_setAt(\n        IERC20ToBytes32Map storage map,\n        uint256 index,\n        bytes32 value\n    ) internal {\n        map._entries[index]._value = value;\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(IERC20ToBytes32Map storage map, IERC20 key) internal returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        // Equivalent to contains(map, key)\n        if (keyIndex != 0) {\n            // To delete a key-value pair from the _entries pseudo-array in O(1), we swap the entry to delete with the\n            // one at the highest index, and then remove this last entry (sometimes called as 'swap and pop').\n            // This modifies the order of the pseudo-array, as noted in {at}.\n\n            uint256 toDeleteIndex = keyIndex - 1;\n            uint256 lastIndex = map._length - 1;\n\n            // The swap is only necessary if we're not removing the last element\n            if (toDeleteIndex != lastIndex) {\n                IERC20ToBytes32MapEntry storage lastEntry = map._entries[lastIndex];\n\n                // Move the last entry to the index where the entry to delete is\n                map._entries[toDeleteIndex] = lastEntry;\n                // Update the index for the moved entry\n                map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\n            }\n\n            // Delete the slot where the moved entry was stored\n            delete map._entries[lastIndex];\n            map._length = lastIndex;\n\n            // Delete the index for the deleted slot\n            delete map._indexes[key];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(IERC20ToBytes32Map storage map, IERC20 key) internal view returns (bool) {\n        return map._indexes[key] != 0;\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(IERC20ToBytes32Map storage map) internal view returns (uint256) {\n        return map._length;\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(IERC20ToBytes32Map storage map, uint256 index) internal view returns (IERC20, bytes32) {\n        _require(map._length > index, Errors.OUT_OF_BOUNDS);\n        return unchecked_at(map, index);\n    }\n\n    /**\n     * @dev Same as {at}, except this doesn't revert if `index` it outside of the map (i.e. if it is equal or larger\n     * than {length}). O(1).\n     *\n     * This function performs one less storage read than {at}, but should only be used when `index` is known to be\n     * within bounds.\n     */\n    function unchecked_at(IERC20ToBytes32Map storage map, uint256 index) internal view returns (IERC20, bytes32) {\n        IERC20ToBytes32MapEntry storage entry = map._entries[index];\n        return (entry._key, entry._value);\n    }\n\n    /**\n     * @dev Same as {unchecked_At}, except it only returns the value and not the key (performing one less storage\n     * read). O(1).\n     */\n    function unchecked_valueAt(IERC20ToBytes32Map storage map, uint256 index) internal view returns (bytes32) {\n        return map._entries[index]._value;\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map. Reverts with `errorCode` otherwise.\n     */\n    function get(\n        IERC20ToBytes32Map storage map,\n        IERC20 key,\n        uint256 errorCode\n    ) internal view returns (bytes32) {\n        uint256 index = map._indexes[key];\n        _require(index > 0, errorCode);\n        return unchecked_valueAt(map, index - 1);\n    }\n\n    /**\n     * @dev Returns the index for `key`.\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function indexOf(\n        IERC20ToBytes32Map storage map,\n        IERC20 key,\n        uint256 errorCode\n    ) internal view returns (uint256) {\n        uint256 uncheckedIndex = unchecked_indexOf(map, key);\n        _require(uncheckedIndex != 0, errorCode);\n        return uncheckedIndex - 1;\n    }\n\n    /**\n     * @dev Returns the index for `key` **plus one**. Does not revert if the key is not in the map, and returns 0\n     * instead.\n     */\n    function unchecked_indexOf(IERC20ToBytes32Map storage map, IERC20 key) internal view returns (uint256) {\n        return map._indexes[key];\n    }\n\n    // IERC20ToUint256Map\n\n    struct IERC20ToUint256MapEntry {\n        IERC20 _key;\n        uint256 _value;\n    }\n\n    struct IERC20ToUint256Map {\n        // Number of entries in the map\n        uint256 _length;\n        // Storage of map keys and values\n        mapping(uint256 => IERC20ToUint256MapEntry) _entries;\n        // Position of the entry defined by a key in the `entries` array, plus 1\n        // because index 0 means a key is not in the map.\n        mapping(IERC20 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        IERC20ToUint256Map storage map,\n        IERC20 key,\n        uint256 value\n    ) internal returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        // Equivalent to !contains(map, key)\n        if (keyIndex == 0) {\n            uint256 previousLength = map._length;\n            map._entries[previousLength] = IERC20ToUint256MapEntry({ _key: key, _value: value });\n            map._length = previousLength + 1;\n\n            // The entry is stored at previousLength, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            map._indexes[key] = previousLength + 1;\n            return true;\n        } else {\n            map._entries[keyIndex - 1]._value = value;\n            return false;\n        }\n    }\n\n    /**\n     * @dev Updates the value for an entry, given its key's index. The key index can be retrieved via\n     * {unchecked_indexOf}, and it should be noted that key indices may change when calling {set} or {remove}. O(1).\n     *\n     * This function performs one less storage read than {set}, but it should only be used when `index` is known to be\n     * within bounds.\n     */\n    function unchecked_setAt(\n        IERC20ToUint256Map storage map,\n        uint256 index,\n        uint256 value\n    ) internal {\n        map._entries[index]._value = value;\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(IERC20ToUint256Map storage map, IERC20 key) internal returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        // Equivalent to contains(map, key)\n        if (keyIndex != 0) {\n            // To delete a key-value pair from the _entries pseudo-array in O(1), we swap the entry to delete with the\n            // one at the highest index, and then remove this last entry (sometimes called as 'swap and pop').\n            // This modifies the order of the pseudo-array, as noted in {at}.\n\n            uint256 toDeleteIndex = keyIndex - 1;\n            uint256 lastIndex = map._length - 1;\n\n            // The swap is only necessary if we're not removing the last element\n            if (toDeleteIndex != lastIndex) {\n                IERC20ToUint256MapEntry storage lastEntry = map._entries[lastIndex];\n\n                // Move the last entry to the index where the entry to delete is\n                map._entries[toDeleteIndex] = lastEntry;\n                // Update the index for the moved entry\n                map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\n            }\n\n            // Delete the slot where the moved entry was stored\n            delete map._entries[lastIndex];\n            map._length = lastIndex;\n\n            // Delete the index for the deleted slot\n            delete map._indexes[key];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(IERC20ToUint256Map storage map, IERC20 key) internal view returns (bool) {\n        return map._indexes[key] != 0;\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(IERC20ToUint256Map storage map) internal view returns (uint256) {\n        return map._length;\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(IERC20ToUint256Map storage map, uint256 index) internal view returns (IERC20, uint256) {\n        _require(map._length > index, Errors.OUT_OF_BOUNDS);\n        return unchecked_at(map, index);\n    }\n\n    /**\n     * @dev Same as {at}, except this doesn't revert if `index` it outside of the map (i.e. if it is equal or larger\n     * than {length}). O(1).\n     *\n     * This function performs one less storage read than {at}, but should only be used when `index` is known to be\n     * within bounds.\n     */\n    function unchecked_at(IERC20ToUint256Map storage map, uint256 index) internal view returns (IERC20, uint256) {\n        IERC20ToUint256MapEntry storage entry = map._entries[index];\n        return (entry._key, entry._value);\n    }\n\n    /**\n     * @dev Same as {unchecked_At}, except it only returns the value and not the key (performing one less storage\n     * read). O(1).\n     */\n    function unchecked_valueAt(IERC20ToUint256Map storage map, uint256 index) internal view returns (uint256) {\n        return map._entries[index]._value;\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map. Reverts with `errorCode` otherwise.\n     */\n    function get(\n        IERC20ToUint256Map storage map,\n        IERC20 key,\n        uint256 errorCode\n    ) internal view returns (uint256) {\n        uint256 index = map._indexes[key];\n        _require(index > 0, errorCode);\n        return unchecked_valueAt(map, index - 1);\n    }\n\n    /**\n     * @dev Returns the index for `key`.\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function indexOf(\n        IERC20ToUint256Map storage map,\n        IERC20 key,\n        uint256 errorCode\n    ) internal view returns (uint256) {\n        uint256 uncheckedIndex = unchecked_indexOf(map, key);\n        _require(uncheckedIndex != 0, errorCode);\n        return uncheckedIndex - 1;\n    }\n\n    /**\n     * @dev Returns the index for `key` **plus one**. Does not revert if the key is not in the map, and returns 0\n     * instead.\n     */\n    function unchecked_indexOf(IERC20ToUint256Map storage map, IERC20 key) internal view returns (uint256) {\n        return map._indexes[key];\n    }\n}\n"},"contracts/openzeppelin/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Based on the EnumerableSet library from OpenZeppelin Contracts, altered to remove the base private functions that\n// work on bytes32, replacing them with a native implementation for address and bytes32 values, to reduce bytecode\n// size and runtime costs.\n// The `unchecked_at` function was also added, which allows for more gas efficient data reads in some scenarios.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // The original OpenZeppelin implementation uses a generic Set type with bytes32 values: this was replaced with\n    // AddressSet, which uses address keys natively, resulting in more dense bytecode.\n\n    struct AddressSet {\n        // Storage of set values\n        address[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(address => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, if it was not already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        if (!contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // The swap is only necessary if we're not removing the last element\n            if (toDeleteIndex != lastIndex) {\n                address lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        _require(set._values.length > index, Errors.OUT_OF_BOUNDS);\n        return unchecked_at(set, index);\n    }\n\n    /**\n     * @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\n     * than {length}). O(1).\n     *\n     * This function performs one less storage read than {at}, but should only be used when `index` is known to be\n     * within bounds.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function unchecked_at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return set._values[index];\n    }\n\n    function rawIndexOf(AddressSet storage set, address value) internal view returns (uint256) {\n        return set._indexes[value] - 1;\n    }\n\n    struct Bytes32Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        if (!contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // The swap is only necessary if we're not removing the last element\n            if (toDeleteIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        _require(set._values.length > index, Errors.OUT_OF_BOUNDS);\n        return unchecked_at(set, index);\n    }\n\n    /**\n     * @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\n     * than {length}). O(1).\n     *\n     * This function performs one less storage read than {at}, but should only be used when `index` is known to be\n     * within bounds.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function unchecked_at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return set._values[index];\n    }\n\n    function rawIndexOf(Bytes32Set storage set, bytes32 value) internal view returns (uint256) {\n        return set._indexes[value] - 1;\n    }\n}\n"},"contracts/openzeppelin/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"./SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is IERC20 {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}. The total supply should only be read using this function\n     *\n     * Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other\n     * storage values).\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Sets a new value for the total supply. It should only be set using this function.\n     *\n     * * Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other\n     * storage values).\n     */\n    function _setTotalSupply(uint256 value) internal virtual {\n        _totalSupply = value;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            _allowances[sender][msg.sender].sub(amount, Errors.ERC20_TRANSFER_EXCEEDS_ALLOWANCE)\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(\n            msg.sender,\n            spender,\n            _allowances[msg.sender][spender].sub(subtractedValue, Errors.ERC20_DECREASED_ALLOWANCE_BELOW_ZERO)\n        );\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        _require(sender != address(0), Errors.ERC20_TRANSFER_FROM_ZERO_ADDRESS);\n        _require(recipient != address(0), Errors.ERC20_TRANSFER_TO_ZERO_ADDRESS);\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, Errors.ERC20_TRANSFER_EXCEEDS_BALANCE);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _setTotalSupply(totalSupply().add(amount));\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        _require(account != address(0), Errors.ERC20_BURN_FROM_ZERO_ADDRESS);\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, Errors.ERC20_BURN_EXCEEDS_BALANCE);\n        _setTotalSupply(totalSupply().sub(amount));\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n"},"contracts/openzeppelin/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is ERC20 {\n    using SafeMath for uint256;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(msg.sender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 decreasedAllowance = allowance(account, msg.sender).sub(amount, Errors.ERC20_BURN_EXCEEDS_ALLOWANCE);\n\n        _approve(account, msg.sender, decreasedAllowance);\n        _burn(account, amount);\n    }\n}\n"},"contracts/openzeppelin/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol\";\n\nimport \"./ERC20.sol\";\nimport \"../helpers/EOASignaturesValidator.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EOASignaturesValidator {\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH = keccak256(\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n    );\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        bytes32 structHash = keccak256(\n            abi.encode(_PERMIT_TYPEHASH, owner, spender, value, getNextNonce(owner), deadline)\n        );\n\n        _ensureValidSignature(owner, structHash, _toArraySignature(v, r, s), deadline, Errors.INVALID_SIGNATURE);\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return getNextNonce(owner);\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return getDomainSeparator();\n    }\n}\n"},"contracts/openzeppelin/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Based on the Ownable library from OpenZeppelin Contracts, altered to reduce runtime gas by dropping\n// support for the GSN.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(msg.sender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _require(owner() == msg.sender, Errors.CALLER_IS_NOT_OWNER);\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        _require(newOwner != address(0), Errors.NEW_OWNER_IS_ZERO);\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"contracts/openzeppelin/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Based on the ReentrancyGuard library from OpenZeppelin Contracts, altered to reduce bytecode size.\n// Modifier code is inlined by the compiler, which causes its code to appear multiple times in the codebase. By using\n// private functions, we achieve the same end result with slightly higher runtime gas costs, but reduced bytecode size.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _enterNonReentrant();\n        _;\n        _exitNonReentrant();\n    }\n\n    function _enterNonReentrant() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        _require(_status != _ENTERED, Errors.REENTRANCY);\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _exitNonReentrant() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"contracts/openzeppelin/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        _require(value >> 255 == 0, Errors.SAFE_CAST_VALUE_CANT_FIT_INT256);\n        return int256(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into an unsigned uint64.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxUint64.\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        _require(value <= type(uint64).max, Errors.SAFE_CAST_VALUE_CANT_FIT_UINT64);\n        return uint64(value);\n    }\n}\n"},"contracts/openzeppelin/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// Based on the ReentrancyGuard library from OpenZeppelin Contracts, altered to reduce gas costs.\n// The `safeTransfer` and `safeTransferFrom` functions assume that `token` is a contract (an account with code), and\n// work differently from the OpenZeppelin version if it is not.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n\n    function safeApprove(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        // Some contracts need their allowance reduced to 0 before setting it to an arbitrary amount.\n        if (value != 0 && token.allowance(address(this), address(to)) != 0) {\n            _callOptionalReturn(address(token), abi.encodeWithSelector(token.approve.selector, to, 0));\n        }\n\n        _callOptionalReturn(address(token), abi.encodeWithSelector(token.approve.selector, to, value));\n    }\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(address(token), abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(address(token), abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     *\n     * WARNING: `token` is assumed to be a contract: calls to EOAs will *not* revert.\n     */\n    function _callOptionalReturn(address token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = token.call(data);\n\n        // If the low-level call didn't succeed we return whatever was returned from it.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            if eq(success, 0) {\n                returndatacopy(0, 0, returndatasize())\n                revert(0, returndatasize())\n            }\n        }\n\n        // Finally we check the returndata size is either zero or true - note that this check will always pass for EOAs\n        _require(returndata.length == 0 || abi.decode(returndata, (bool)), Errors.SAFE_ERC20_CALL_FAILED);\n    }\n}\n"},"contracts/openzeppelin/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        _require(c >= a, Errors.ADD_OVERFLOW);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, Errors.SUB_OVERFLOW);\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        uint256 errorCode\n    ) internal pure returns (uint256) {\n        _require(b <= a, errorCode);\n        uint256 c = a - b;\n\n        return c;\n    }\n}\n"},"contracts/test/BalancerErrorsMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\ncontract BalancerErrorsMock {\n    function fail(uint256 code) external pure {\n        _revert(code);\n    }\n\n    function failWithPrefix(uint256 code, bytes3 prefix) external pure {\n        _revert(code, prefix);\n    }\n}\n"},"contracts/test/BreakableERC20Mock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20.sol\";\n\n/**\n * @dev ERC20 with a modified approve, transfer and transferFrom functions, which revert according to a preset.\n */\ncontract BreakableERC20Mock is ERC20 {\n    bool public isBroken;\n\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function setIsBroken(bool _isBroken) external {\n        isBroken = _isBroken;\n    }\n\n    function mint(address recipient, uint256 amount) external {\n        _mint(recipient, amount);\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        require(!isBroken, 'BROKEN_TOKEN');\n        return super.approve(spender, amount);\n    }\n\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(!isBroken, 'BROKEN_TOKEN');\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        require(!isBroken, 'BROKEN_TOKEN');\n        return super.transferFrom(sender, recipient, amount);\n    }\n}\n"},"contracts/test/BrokenERC20Mock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20.sol\";\n\n/**\n * @dev ERC20 with a modified `approve` function, which always reverts.\n */\ncontract BrokenERC20Mock is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function approve(address, uint256) public virtual override returns (bool) {\n        revert('BROKEN_TOKEN');\n    }\n}\n"},"contracts/test/CodeDeployerFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/CodeDeployer.sol\";\n\ncontract CodeDeployerFactory {\n    event CodeDeployed(address destination);\n\n    function deploy(bytes memory data, bool preventExecution) external {\n        address destination = CodeDeployer.deploy(data, preventExecution);\n        emit CodeDeployed(destination);\n    }\n}\n"},"contracts/test/EnumerableMapMock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"../openzeppelin/EnumerableMap.sol\";\n\n\n// solhint-disable func-name-mixedcase\n\ncontract EnumerableIERC20ToBytes32MapMock {\n    using EnumerableMap for EnumerableMap.IERC20ToBytes32Map;\n\n    event OperationResult(bool result);\n\n    EnumerableMap.IERC20ToBytes32Map private _map;\n\n    function contains(IERC20 key) public view returns (bool) {\n        return _map.contains(key);\n    }\n\n    function set(IERC20 key, bytes32 value) public {\n        bool result = _map.set(key, value);\n        emit OperationResult(result);\n    }\n\n    function unchecked_indexOf(IERC20 key) public view returns (uint256) {\n        return _map.unchecked_indexOf(key);\n    }\n\n    function indexOf(IERC20 key, uint256 errorCode) public view returns (uint256) {\n        return _map.indexOf(key, errorCode);\n    }\n\n    function unchecked_setAt(uint256 index, bytes32 value) public {\n        _map.unchecked_setAt(index, value);\n    }\n\n    function remove(IERC20 key) public {\n        bool result = _map.remove(key);\n        emit OperationResult(result);\n    }\n\n    function length() public view returns (uint256) {\n        return _map.length();\n    }\n\n    function at(uint256 index) public view returns (IERC20 key, bytes32 value) {\n        return _map.at(index);\n    }\n\n    function unchecked_at(uint256 index) public view returns (IERC20 key, bytes32 value) {\n        return _map.unchecked_at(index);\n    }\n\n    function unchecked_valueAt(uint256 index) public view returns (bytes32 value) {\n        return _map.unchecked_valueAt(index);\n    }\n\n    function get(IERC20 key, uint256 errorCode) public view returns (bytes32) {\n        return _map.get(key, errorCode);\n    }\n}\n\ncontract EnumerableIERC20ToUint256MapMock {\n    using EnumerableMap for EnumerableMap.IERC20ToUint256Map;\n\n    event OperationResult(bool result);\n\n    EnumerableMap.IERC20ToUint256Map private _map;\n\n    function contains(IERC20 key) public view returns (bool) {\n        return _map.contains(key);\n    }\n\n    function set(IERC20 key, uint256 value) public {\n        bool result = _map.set(key, value);\n        emit OperationResult(result);\n    }\n\n    function unchecked_indexOf(IERC20 key) public view returns (uint256) {\n        return _map.unchecked_indexOf(key);\n    }\n\n    function indexOf(IERC20 key, uint256 errorCode) public view returns (uint256) {\n        return _map.indexOf(key, errorCode);\n    }\n\n    function unchecked_setAt(uint256 index, uint256 value) public {\n        _map.unchecked_setAt(index, value);\n    }\n\n    function remove(IERC20 key) public {\n        bool result = _map.remove(key);\n        emit OperationResult(result);\n    }\n\n    function length() public view returns (uint256) {\n        return _map.length();\n    }\n\n    function at(uint256 index) public view returns (IERC20 key, uint256 value) {\n        return _map.at(index);\n    }\n\n    function unchecked_at(uint256 index) public view returns (IERC20 key, uint256 value) {\n        return _map.unchecked_at(index);\n    }\n\n    function unchecked_valueAt(uint256 index) public view returns (uint256 value) {\n        return _map.unchecked_valueAt(index);\n    }\n\n    function get(IERC20 key, uint256 errorCode) public view returns (uint256) {\n        return _map.get(key, errorCode);\n    }\n}\n"},"contracts/test/EOASignaturesValidatorMock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/EOASignaturesValidator.sol\";\n\ncontract EOASignaturesValidatorMock is EOASignaturesValidator {\n    event Authenticated();\n\n    bytes32 public constant MOCK_AUTHENTICATE_TYPEHASH = keccak256(\"Authenticate(uint256 amount,uint256 nonce)\");\n\n    constructor() EIP712(\"EOA Signatures Validator Mock\", \"1\") {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function authenticatedCall(\n        address user,\n        uint256 amount,\n        bytes memory signature\n    ) external {\n        bytes32 structHash = keccak256(abi.encode(MOCK_AUTHENTICATE_TYPEHASH, amount, getNextNonce(user)));\n\n        _ensureValidSignature(user, structHash, signature, Errors.INVALID_SIGNATURE);\n        emit Authenticated();\n    }\n\n    function authenticatedCallWithDeadline(\n        address user,\n        uint256 amount,\n        bytes memory signature,\n        uint256 deadline\n    ) external {\n        // Note that the deadline should be included in a real signing scheme - we keep it out here for simplicity.\n        bytes32 structHash = keccak256(abi.encode(MOCK_AUTHENTICATE_TYPEHASH, amount, getNextNonce(user)));\n\n        _ensureValidSignature(user, structHash, signature, deadline, Errors.INVALID_SIGNATURE);\n        emit Authenticated();\n    }\n\n    function increaseNonce(address user) external {\n        _nextNonce[user]++;\n    }\n}\n"},"contracts/test/ERC1271Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\";\n\ncontract ERC1271Mock is IERC1271 {\n    mapping(bytes32 => bool) private _approved;\n    bool private _revert;\n\n    function setApproved(bytes32 key) external {\n        _approved[key] = true;\n    }\n\n    function setRevert(bool newRevert) external {\n        _revert = newRevert;\n    }\n\n    function getKey(bytes32 digest, bytes memory signature) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(digest, signature));\n    }\n\n    function isValidSignature(bytes32 digest, bytes memory signature) external view override returns (bytes4) {\n        require(!_revert, \"ERC1271_MOCK_REVERT\");\n\n        return _approved[getKey(digest, signature)] ? IERC1271.isValidSignature.selector : bytes4(0);\n    }\n}\n"},"contracts/test/ERC20FalseApprovalMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20.sol\";\n\n/**\n * @dev ERC20 with a modified `approve` function, which always returns false.\n */\ncontract ERC20FalseApprovalMock is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(msg.sender, spender, amount);\n        return false;\n    }\n}\n"},"contracts/test/ERC20Mock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20.sol\";\n\ncontract ERC20Mock is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function mint(address recipient, uint256 amount) external {\n        _mint(recipient, amount);\n    }\n\n    function burn(address sender, uint256 amount) external {\n        _burn(sender, amount);\n    }\n}\n"},"contracts/test/ERC20PermitMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20Permit.sol\";\n\ncontract ERC20PermitMock is ERC20, ERC20Permit {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) ERC20Permit(name) {}\n\n    function mint(address recipient, uint256 amount) external {\n        _mint(recipient, amount);\n    }\n\n    function burn(address sender, uint256 amount) external {\n        _burn(sender, amount);\n    }\n}\n"},"contracts/test/ExtraCalldataEOASignaturesValidatorMock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/ExtraCalldataEOASignaturesValidator.sol\";\n\ncontract ExtraCalldataEOASignaturesValidatorMock is ExtraCalldataEOASignaturesValidator {\n    bytes32 internal constant AUTH_TYPE_HASH = keccak256(\n        \"Authorization(bytes calldata,address sender,uint256 nonce,uint256 deadline)\"\n    );\n\n    event Authenticated(address user, address sender);\n    event CalldataDecoded(bytes data, uint256 deadline, bytes signature);\n\n    constructor() EIP712(\"Balancer V2 Vault\", \"1\") {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function decodeCalldata() external {\n        _decodeCalldata();\n    }\n\n    function authenticateCall(address user) external {\n        _validateExtraCalldataSignature(user, Errors.INVALID_SIGNATURE);\n        _decodeCalldata();\n        emit Authenticated(user, msg.sender);\n    }\n\n    function anotherFunction(address user) external {\n        // do nothing\n    }\n\n    function increaseNonce(address user) external {\n        _nextNonce[user]++;\n    }\n\n    function _decodeCalldata() internal {\n        emit CalldataDecoded(_calldata(), _deadline(), _signature());\n    }\n\n    function _entrypointTypeHash() internal pure override returns (bytes32) {\n        return AUTH_TYPE_HASH;\n    }\n}\n"},"contracts/test/FixedPointMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../math/FixedPoint.sol\";\n\ncontract FixedPointMock {\n    function powDown(uint256 x, uint256 y) public pure returns (uint256) {\n        return FixedPoint.powDown(x, y);\n    }\n\n    function powUp(uint256 x, uint256 y) public pure returns (uint256) {\n        return FixedPoint.powUp(x, y);\n    }\n}\n"},"contracts/test/LogExpMathMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../math/LogExpMath.sol\";\n\ncontract LogExpMathMock {\n    function pow(uint256 x, uint256 y) public pure returns (uint256) {\n        return LogExpMath.pow(x, y);\n    }\n}\n"},"contracts/test/MathMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../math/Math.sol\";\n\ncontract MathMock {\n    function abs(int256 a) public pure returns (uint256) {\n        return Math.abs(a);\n    }\n}\n"},"contracts/test/MockBasicAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol\";\n\nimport \"../openzeppelin/EnumerableSet.sol\";\nimport \"../helpers/InputHelpers.sol\";\n\ncontract MockBasicAuthorizer is IBasicAuthorizer {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    bytes32 public constant override DEFAULT_ADMIN_ROLE = 0x00;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address\n    ) external view override returns (bool) {\n        return hasRole(actionId, account);\n    }\n\n    function getRoleMemberCount(bytes32 role) external view override returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    function getRoleMember(bytes32 role, uint256 index) external view override returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    function getRoleAdmin(bytes32 role) external view override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    function grantRolesToMany(bytes32[] memory roles, address[] memory accounts) external {\n        InputHelpers.ensureInputLengthMatch(roles.length, accounts.length);\n        for (uint256 i = 0; i < roles.length; i++) {\n            grantRole(roles[i], accounts[i]);\n        }\n    }\n\n    function grantRole(bytes32 role, address account) public {\n        _require(hasRole(_roles[role].adminRole, msg.sender), Errors.GRANT_SENDER_NOT_ADMIN);\n        _grantRole(role, account);\n    }\n\n    function revokeRole(bytes32 role, address account) public virtual {\n        _require(hasRole(_roles[role].adminRole, msg.sender), Errors.REVOKE_SENDER_NOT_ADMIN);\n\n        _revokeRole(role, account);\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        _roles[role].members.add(account);\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        _roles[role].members.remove(account);\n    }\n}\n"},"contracts/test/MockScalingHelpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"../helpers/ScalingHelpers.sol\";\n\ncontract MockScalingHelpers {\n    function upscale(uint256 amount, uint256 scalingFactor) external pure returns (uint256) {\n        return _upscale(amount, scalingFactor);\n    }\n\n    function upscaleArray(uint256[] memory amounts, uint256[] memory scalingFactors)\n        external\n        pure\n        returns (uint256[] memory)\n    {\n        _upscaleArray(amounts, scalingFactors);\n        return amounts;\n    }\n\n    function downscaleDown(uint256 amount, uint256 scalingFactor) external pure returns (uint256) {\n        return _downscaleDown(amount, scalingFactor);\n    }\n\n    function downscaleDownArray(uint256[] memory amounts, uint256[] memory scalingFactors)\n        external\n        pure\n        returns (uint256[] memory)\n    {\n        _downscaleDownArray(amounts, scalingFactors);\n        return amounts;\n    }\n\n    function downscaleUp(uint256 amount, uint256 scalingFactor) external pure returns (uint256) {\n        return _downscaleUp(amount, scalingFactor);\n    }\n\n    function downscaleUpArray(uint256[] memory amounts, uint256[] memory scalingFactors)\n        external\n        pure\n        returns (uint256[] memory)\n    {\n        _downscaleUpArray(amounts, scalingFactors);\n        return amounts;\n    }\n}\n"},"contracts/test/MockSplitCodeFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/BaseSplitCodeFactory.sol\";\n\ncontract MockFactoryCreatedContract {\n    bytes32 private _id;\n\n    constructor(bytes32 id) {\n        require(id != 0, \"NON_ZERO_ID\");\n        _id = id;\n    }\n\n    function getId() external view returns (bytes32) {\n        return _id;\n    }\n}\n\ncontract MockSplitCodeFactory is BaseSplitCodeFactory {\n    event ContractCreated(address destination);\n\n    constructor() BaseSplitCodeFactory(type(MockFactoryCreatedContract).creationCode) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function create(bytes32 id, bytes32 salt) external returns (address) {\n        address destination = _create(abi.encode(id), salt);\n        emit ContractCreated(destination);\n\n        return destination;\n    }\n}\n"},"contracts/test/MockWordCodec.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/WordCodec.sol\";\nimport \"../helpers/WordCodecHelpers.sol\";\n\ncontract MockWordCodec {\n    function insertUint(\n        bytes32 word,\n        uint256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (bytes32) {\n        return WordCodec.insertUint(word, value, offset, bitLength);\n    }\n\n    function insertInt(\n        bytes32 word,\n        int256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (bytes32) {\n        return WordCodec.insertInt(word, value, offset, bitLength);\n    }\n\n    function encodeUint(\n        uint256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (bytes32) {\n        return WordCodec.encodeUint(value, offset, bitLength);\n    }\n\n    function encodeInt(\n        int256 value,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (bytes32) {\n        return WordCodec.encodeInt(value, offset, bitLength);\n    }\n\n    function decodeUint(\n        bytes32 value,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (uint256) {\n        return WordCodec.decodeUint(value, offset, bitLength);\n    }\n\n    function decodeInt(\n        bytes32 value,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (int256) {\n        return WordCodec.decodeInt(value, offset, bitLength);\n    }\n\n    function clearWordAtPosition(\n        bytes32 word,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (bytes32) {\n        return WordCodecHelpers.clearWordAtPosition(word, offset, bitLength);\n    }\n\n    function isOtherStateUnchanged(\n        bytes32 oldPoolState,\n        bytes32 newPoolState,\n        uint256 offset,\n        uint256 bitLength\n    ) external pure returns (bool) {\n        return WordCodecHelpers.isOtherStateUnchanged(oldPoolState, newPoolState, offset, bitLength);\n    }\n}\n"},"contracts/test/OptionalOnlyCallerMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/OptionalOnlyCaller.sol\";\n\n/**\n * @dev Mock with an external method that affects an address.\n *\n * The user can opt in to a verification, so that the method becomes callable\n * only by their address.\n */\ncontract OptionalOnlyCallerMock is OptionalOnlyCaller {\n    constructor() EIP712(\"OptionalOnlyCallerMock\", \"1\") {}\n\n    event CheckFunctionCalled();\n\n    function checkFunction(address user) external optionalOnlyCaller(user) {\n        emit CheckFunctionCalled();\n    }\n}\n"},"contracts/test/ReentrancyAttack.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\ncontract ReentrancyAttack {\n    function callSender(bytes4 data) public {\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, ) = msg.sender.call(abi.encodeWithSelector(data));\n        require(success, \"REENTRANCY_ATTACK\");\n    }\n}\n"},"contracts/test/ReentrancyMock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ReentrancyGuard.sol\";\n\nimport \"./ReentrancyAttack.sol\";\n\ncontract ReentrancyMock is ReentrancyGuard {\n    uint256 public counter;\n\n    constructor() {\n        counter = 0;\n    }\n\n    function callback() external nonReentrant {\n        _count();\n    }\n\n    function countLocalRecursive(uint256 n) public nonReentrant {\n        if (n > 0) {\n            _count();\n            countLocalRecursive(n - 1);\n        }\n    }\n\n    function countThisRecursive(uint256 n) public nonReentrant {\n        if (n > 0) {\n            _count();\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success, ) = address(this).call(abi.encodeWithSignature(\"countThisRecursive(uint256)\", n - 1));\n            require(success, \"REENTRANCY_MOCK\");\n        }\n    }\n\n    function countAndCall(ReentrancyAttack attacker) public nonReentrant {\n        _count();\n        bytes4 func = bytes4(keccak256(\"callback()\"));\n        attacker.callSender(func);\n    }\n\n    function _count() private {\n        counter += 1;\n    }\n}\n"},"contracts/test/SafeERC20Mock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"../openzeppelin/SafeERC20.sol\";\n\ncontract SafeERC20Mock {\n    using SafeERC20 for IERC20;\n\n    constructor() {}\n\n    function safeApprove(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) external {\n        token.safeApprove(to, value);\n    }    \n}\n"},"contracts/test/SignaturesValidatorMock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/SignaturesValidator.sol\";\n\ncontract SignaturesValidatorMock is SignaturesValidator {\n    event Authenticated();\n\n    bytes32 public constant MOCK_AUTHENTICATE_TYPEHASH = keccak256(\"Authenticate(uint256 amount,uint256 nonce)\");\n\n    constructor() EIP712(\"EOA Signatures Validator Mock\", \"1\") {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function getStructHash(uint256 amount, uint256 nonce) public pure returns (bytes32) {\n        return keccak256(abi.encode(MOCK_AUTHENTICATE_TYPEHASH, amount, nonce));\n    }\n\n    function getDigest(uint256 amount, uint256 nonce) public view returns (bytes32) {\n        return _hashTypedDataV4(getStructHash(amount, nonce));\n    }\n\n    function authenticatedCall(\n        address user,\n        uint256 amount,\n        bytes memory signature\n    ) external {\n        _ensureValidSignature(user, getStructHash(amount, getNextNonce(user)), signature, Errors.INVALID_SIGNATURE);\n        emit Authenticated();\n    }\n\n    function authenticatedCallWithDeadline(\n        address user,\n        uint256 amount,\n        bytes memory signature,\n        uint256 deadline\n    ) external {\n        // Note that the deadline should be included in a real signing scheme - we keep it out here for simplicity.\n        _ensureValidSignature(\n            user,\n            getStructHash(amount, getNextNonce(user)),\n            signature,\n            deadline,\n            Errors.INVALID_SIGNATURE\n        );\n        emit Authenticated();\n    }\n\n    function increaseNonce(address user) external {\n        _nextNonce[user]++;\n    }\n}\n"},"contracts/test/SingletonAuthenticationMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\n\nimport \"../helpers/SingletonAuthentication.sol\";\n\ncontract SingletonAuthenticationMock is SingletonAuthentication {\n    constructor(IVault vault) SingletonAuthentication(vault) {\n      // solhint-disable-previous-line no-empty-blocks\n    }\n}\n"},"contracts/test/TemporarilyPausableMock.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../helpers/TemporarilyPausable.sol\";\n\ncontract TemporarilyPausableMock is TemporarilyPausable {\n    constructor(uint256 pauseWindowDuration, uint256 bufferPeriodDuration)\n        TemporarilyPausable(pauseWindowDuration, bufferPeriodDuration)\n    {}\n\n    function setPaused(bool paused) external {\n        _setPaused(paused);\n    }\n\n    function getMaxPauseWindowDuration() external pure returns (uint256) {\n        return PausableConstants.MAX_PAUSE_WINDOW_DURATION;\n    }\n\n    function getMaxBufferPeriodDuration() external pure returns (uint256) {\n        return PausableConstants.MAX_BUFFER_PERIOD_DURATION;\n    }\n}\n"},"contracts/test/TestToken.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\nimport \"../openzeppelin/ERC20Burnable.sol\";\nimport \"../openzeppelin/ERC20Permit.sol\";\nimport \"../openzeppelin/ERC20.sol\";\n\ncontract TestToken is ERC20, ERC20Burnable, ERC20Permit {\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals\n    ) ERC20(name, symbol) ERC20Permit(name) {\n        _setupDecimals(decimals);\n    }\n\n    function mint(address recipient, uint256 amount) external {\n        _mint(recipient, amount);\n    }\n\n    // burnWithoutAllowance was created to allow burn of token without approval. Example of use:\n    //\n    // MockGearboxVault.sol can't use burnFrom function (from ERC20Burnable) in unit tests, since\n    // MockGearboxVault doesn't have permission to burn relayer wrapped tokens and relayer is not a Signer\n    function burnWithoutAllowance(address sender, uint256 amount) external {\n        _burn(sender, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":9999},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/FixedPoint.sol:34:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1582,"file":"contracts/math/FixedPoint.sol","start":1343},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/FixedPoint.sol:42:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1827,"file":"contracts/math/FixedPoint.sol","start":1588},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/FixedPoint.sol:34:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1582,"file":"contracts/math/FixedPoint.sol","start":1343},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/FixedPoint.sol:42:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1827,"file":"contracts/math/FixedPoint.sol","start":1588},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/FixedPoint.sol:34:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1582,"file":"contracts/math/FixedPoint.sol","start":1343},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/FixedPoint.sol:42:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1827,"file":"contracts/math/FixedPoint.sol","start":1588},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:29:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":960,"file":"contracts/math/Math.sol","start":794},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:38:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1256,"file":"contracts/math/Math.sol","start":1062},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:89:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function div(\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2814,"file":"contracts/math/Math.sol","start":2642},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:83:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2636,"file":"contracts/math/Math.sol","start":2456},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:47:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1541,"file":"contracts/math/Math.sol","start":1375},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:56:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1840,"file":"contracts/math/Math.sol","start":1646},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:29:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":960,"file":"contracts/math/Math.sol","start":794},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:38:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1256,"file":"contracts/math/Math.sol","start":1062},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:89:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function div(\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2814,"file":"contracts/math/Math.sol","start":2642},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:83:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2636,"file":"contracts/math/Math.sol","start":2456},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:47:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1541,"file":"contracts/math/Math.sol","start":1375},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:56:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1840,"file":"contracts/math/Math.sol","start":1646},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:29:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":960,"file":"contracts/math/Math.sol","start":794},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:38:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1256,"file":"contracts/math/Math.sol","start":1062},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:89:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function div(\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2814,"file":"contracts/math/Math.sol","start":2642},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:83:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2636,"file":"contracts/math/Math.sol","start":2456},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:47:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1541,"file":"contracts/math/Math.sol","start":1375},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:56:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1840,"file":"contracts/math/Math.sol","start":1646},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:29:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":960,"file":"contracts/math/Math.sol","start":794},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:38:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function add(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1256,"file":"contracts/math/Math.sol","start":1062},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:89:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function div(\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2814,"file":"contracts/math/Math.sol","start":2642},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:83:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":2636,"file":"contracts/math/Math.sol","start":2456},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:47:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1541,"file":"contracts/math/Math.sol","start":1375},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/math/Math.sol:56:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":1840,"file":"contracts/math/Math.sol","start":1646},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"contracts/openzeppelin/EIP712.sol:77:5: Warning: Function state mutability can be restricted to pure\n    function _getChainId() private view returns (uint256 chainId) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":3620,"file":"contracts/openzeppelin/EIP712.sol","start":3433},"type":"Warning"}],"sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","exportedSymbols":{"Errors":[573],"_require":[17,36],"_revert":[48,68]},"id":574,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.7",".1","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:0"},{"body":{"id":16,"nodeType":"Block","src":"984:43:0","statements":[{"condition":{"id":10,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"994:10:0","subExpression":{"id":9,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"995:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15,"nodeType":"IfStatement","src":"990:34:0","trueBody":{"expression":{"arguments":[{"id":12,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1014:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":48,"src":"1006:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1006:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":14,"nodeType":"ExpressionStatement","src":"1006:18:0"}}]},"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"741:184:0","text":" @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n supported.\n Uses the default 'BAL' prefix for the error code"},"id":17,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_require","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":17,"src":"944:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3,"name":"bool","nodeType":"ElementaryTypeName","src":"944:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":17,"src":"960:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"943:35:0"},"returnParameters":{"id":8,"nodeType":"ParameterList","parameters":[],"src":"984:0:0"},"scope":574,"src":"926:101:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":35,"nodeType":"Block","src":"1249:51:0","statements":[{"condition":{"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1259:10:0","subExpression":{"id":27,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"1260:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":34,"nodeType":"IfStatement","src":"1255:42:0","trueBody":{"expression":{"arguments":[{"id":30,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"1279:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":31,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"1290:6:0","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":29,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":68,"src":"1271:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bytes3_$returns$__$","typeString":"function (uint256,bytes3) pure"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1271:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"1271:26:0"}}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"1029:132:0","text":" @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n supported."},"id":36,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_require","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":36,"src":"1185:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":19,"name":"bool","nodeType":"ElementaryTypeName","src":"1185:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":36,"src":"1205:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"prefix","nodeType":"VariableDeclaration","scope":36,"src":"1228:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":23,"name":"bytes3","nodeType":"ElementaryTypeName","src":"1228:6:0","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"}],"src":"1179:64:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"1249:0:0"},"scope":574,"src":"1162:138:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":47,"nodeType":"Block","src":"1500:85:0","statements":[{"expression":{"arguments":[{"id":43,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1514:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3078343234313463","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:8:0","typeDescriptions":{"typeIdentifier":"t_rational_4342092_by_1","typeString":"int_const 4342092"},"value":"0x42414c"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_4342092_by_1","typeString":"int_const 4342092"}],"id":42,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":68,"src":"1506:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bytes3_$returns$__$","typeString":"function (uint256,bytes3) pure"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1506:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":46,"nodeType":"ExpressionStatement","src":"1506:28:0"}]},"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1302:156:0","text":" @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\n Uses the default 'BAL' prefix for the error code"},"id":48,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":48,"src":"1476:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1475:19:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"1500:0:0"},"scope":574,"src":"1459:126:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1748:3322:0","statements":[{"assignments":[57],"declarations":[{"constant":false,"id":57,"mutability":"mutable","name":"prefixUint","nodeType":"VariableDeclaration","scope":67,"src":"1754:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":65,"initialValue":{"arguments":[{"arguments":[{"id":62,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1790:6:0","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":61,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1783:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":60,"name":"uint24","nodeType":"ElementaryTypeName","src":"1783:6:0","typeDescriptions":{}}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1783:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":59,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1775:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"1775:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1775:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1754:44:0"},{"AST":{"nodeType":"YulBlock","src":"2587:2481:0","statements":[{"nodeType":"YulVariableDeclaration","src":"2861:42:0","value":{"arguments":[{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"2882:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"2893:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2878:3:0"},"nodeType":"YulFunctionCall","src":"2878:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"2898:4:0","type":"","value":"0x30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2874:3:0"},"nodeType":"YulFunctionCall","src":"2874:29:0"},"variables":[{"name":"units","nodeType":"YulTypedName","src":"2865:5:0","type":""}]},{"nodeType":"YulAssignment","src":"2913:31:0","value":{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"2930:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:2:0","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2926:3:0"},"nodeType":"YulFunctionCall","src":"2926:18:0"},"variableNames":[{"name":"errorCode","nodeType":"YulIdentifier","src":"2913:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"2953:43:0","value":{"arguments":[{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"2975:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"2986:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2971:3:0"},"nodeType":"YulFunctionCall","src":"2971:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"2991:4:0","type":"","value":"0x30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:0"},"nodeType":"YulFunctionCall","src":"2967:29:0"},"variables":[{"name":"tenths","nodeType":"YulTypedName","src":"2957:6:0","type":""}]},{"nodeType":"YulAssignment","src":"3006:31:0","value":{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"3023:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"3034:2:0","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3019:3:0"},"nodeType":"YulFunctionCall","src":"3019:18:0"},"variableNames":[{"name":"errorCode","nodeType":"YulIdentifier","src":"3006:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"3046:45:0","value":{"arguments":[{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"3070:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3066:3:0"},"nodeType":"YulFunctionCall","src":"3066:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"3086:4:0","type":"","value":"0x30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3062:3:0"},"nodeType":"YulFunctionCall","src":"3062:29:0"},"variables":[{"name":"hundreds","nodeType":"YulTypedName","src":"3050:8:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3724:61:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3751:2:0","type":"","value":"24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3759:4:0","type":"","value":"0x23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3769:1:0","type":"","value":"8"},{"name":"prefixUint","nodeType":"YulIdentifier","src":"3772:10:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3765:3:0"},"nodeType":"YulFunctionCall","src":"3765:18:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3755:3:0"},"nodeType":"YulFunctionCall","src":"3755:29:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3747:3:0"},"nodeType":"YulFunctionCall","src":"3747:38:0"},"variables":[{"name":"formattedPrefix","nodeType":"YulTypedName","src":"3728:15:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3795:102:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3819:3:0","type":"","value":"200"},{"arguments":[{"name":"formattedPrefix","nodeType":"YulIdentifier","src":"3828:15:0"},{"arguments":[{"arguments":[{"name":"units","nodeType":"YulIdentifier","src":"3853:5:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3864:1:0","type":"","value":"8"},{"name":"tenths","nodeType":"YulIdentifier","src":"3867:6:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3860:3:0"},"nodeType":"YulFunctionCall","src":"3860:14:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3849:3:0"},"nodeType":"YulFunctionCall","src":"3849:26:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3881:2:0","type":"","value":"16"},{"name":"hundreds","nodeType":"YulIdentifier","src":"3885:8:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3877:3:0"},"nodeType":"YulFunctionCall","src":"3877:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3845:3:0"},"nodeType":"YulFunctionCall","src":"3845:50:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:0"},"nodeType":"YulFunctionCall","src":"3824:72:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3815:3:0"},"nodeType":"YulFunctionCall","src":"3815:82:0"},"variables":[{"name":"revertReason","nodeType":"YulTypedName","src":"3799:12:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4412:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"4417:66:0","type":"","value":"0x08c379a000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4405:6:0"},"nodeType":"YulFunctionCall","src":"4405:79:0"},"nodeType":"YulExpressionStatement","src":"4405:79:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4617:4:0","type":"","value":"0x04"},{"kind":"number","nodeType":"YulLiteral","src":"4623:66:0","type":"","value":"0x0000000000000000000000000000000000000000000000000000000000000020"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4610:6:0"},"nodeType":"YulFunctionCall","src":"4610:80:0"},"nodeType":"YulExpressionStatement","src":"4610:80:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4759:4:0","type":"","value":"0x24"},{"kind":"number","nodeType":"YulLiteral","src":"4765:1:0","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4752:6:0"},"nodeType":"YulFunctionCall","src":"4752:15:0"},"nodeType":"YulExpressionStatement","src":"4752:15:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4832:4:0","type":"","value":"0x44"},{"name":"revertReason","nodeType":"YulIdentifier","src":"4838:12:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4825:6:0"},"nodeType":"YulFunctionCall","src":"4825:26:0"},"nodeType":"YulExpressionStatement","src":"4825:26:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5055:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5058:3:0","type":"","value":"100"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5048:6:0"},"nodeType":"YulFunctionCall","src":"5048:14:0"},"nodeType":"YulExpressionStatement","src":"5048:14:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":51,"isOffset":false,"isSlot":false,"src":"2882:9:0","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"2913:9:0","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"2930:9:0","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"2975:9:0","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"3006:9:0","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"3023:9:0","valueSize":1},{"declaration":51,"isOffset":false,"isSlot":false,"src":"3070:9:0","valueSize":1},{"declaration":57,"isOffset":false,"isSlot":false,"src":"3772:10:0","valueSize":1}],"id":66,"nodeType":"InlineAssembly","src":"2578:2490:0"}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1587:104:0","text":" @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported."},"id":68,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":68,"src":"1709:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"prefix","nodeType":"VariableDeclaration","scope":68,"src":"1728:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":52,"name":"bytes3","nodeType":"ElementaryTypeName","src":"1728:6:0","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"}],"src":"1708:34:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"1748:0:0"},"scope":574,"src":"1692:3378:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":573,"linearizedBaseContracts":[573],"name":"Errors","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":71,"mutability":"constant","name":"ADD_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"5105:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"5105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5146:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":74,"mutability":"constant","name":"SUB_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"5153:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"5153:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5194:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":77,"mutability":"constant","name":"SUB_UNDERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"5201:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"5201:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5243:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":80,"mutability":"constant","name":"MUL_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"5250:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5291:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":83,"mutability":"constant","name":"ZERO_DIVISION","nodeType":"VariableDeclaration","scope":573,"src":"5298:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"5298:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5340:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":86,"mutability":"constant","name":"DIV_INTERNAL","nodeType":"VariableDeclaration","scope":573,"src":"5347:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"5347:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":85,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5388:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"internal"},{"constant":true,"id":89,"mutability":"constant","name":"X_OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":573,"src":"5395:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"5395:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"36","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5439:1:0","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"internal"},{"constant":true,"id":92,"mutability":"constant","name":"Y_OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":573,"src":"5446:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"5446:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5490:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"internal"},{"constant":true,"id":95,"mutability":"constant","name":"PRODUCT_OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":573,"src":"5497:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"constant":true,"id":98,"mutability":"constant","name":"INVALID_EXPONENT","nodeType":"VariableDeclaration","scope":573,"src":"5554:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"5554:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"39","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5599:1:0","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"visibility":"internal"},{"constant":true,"id":101,"mutability":"constant","name":"OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":573,"src":"5620:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5662:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":104,"mutability":"constant","name":"UNSORTED_ARRAY","nodeType":"VariableDeclaration","scope":573,"src":"5671:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"5671:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313031","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5714:3:0","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"id":107,"mutability":"constant","name":"UNSORTED_TOKENS","nodeType":"VariableDeclaration","scope":573,"src":"5723:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313032","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:3:0","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"id":110,"mutability":"constant","name":"INPUT_LENGTH_MISMATCH","nodeType":"VariableDeclaration","scope":573,"src":"5776:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313033","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5826:3:0","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"id":113,"mutability":"constant","name":"ZERO_TOKEN","nodeType":"VariableDeclaration","scope":573,"src":"5835:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"5835:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313034","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5874:3:0","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"},{"constant":true,"id":116,"mutability":"constant","name":"INSUFFICIENT_DATA","nodeType":"VariableDeclaration","scope":573,"src":"5883:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313035","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5929:3:0","typeDescriptions":{"typeIdentifier":"t_rational_105_by_1","typeString":"int_const 105"},"value":"105"},"visibility":"internal"},{"constant":true,"id":119,"mutability":"constant","name":"MIN_TOKENS","nodeType":"VariableDeclaration","scope":573,"src":"5959:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5959:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5998:3:0","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"internal"},{"constant":true,"id":122,"mutability":"constant","name":"MAX_TOKENS","nodeType":"VariableDeclaration","scope":573,"src":"6007:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323031","id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:3:0","typeDescriptions":{"typeIdentifier":"t_rational_201_by_1","typeString":"int_const 201"},"value":"201"},"visibility":"internal"},{"constant":true,"id":125,"mutability":"constant","name":"MAX_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":573,"src":"6055:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"6055:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323032","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6107:3:0","typeDescriptions":{"typeIdentifier":"t_rational_202_by_1","typeString":"int_const 202"},"value":"202"},"visibility":"internal"},{"constant":true,"id":128,"mutability":"constant","name":"MIN_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":573,"src":"6116:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"6116:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323033","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6168:3:0","typeDescriptions":{"typeIdentifier":"t_rational_203_by_1","typeString":"int_const 203"},"value":"203"},"visibility":"internal"},{"constant":true,"id":131,"mutability":"constant","name":"MINIMUM_BPT","nodeType":"VariableDeclaration","scope":573,"src":"6177:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323034","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:3:0","typeDescriptions":{"typeIdentifier":"t_rational_204_by_1","typeString":"int_const 204"},"value":"204"},"visibility":"internal"},{"constant":true,"id":134,"mutability":"constant","name":"CALLER_NOT_VAULT","nodeType":"VariableDeclaration","scope":573,"src":"6226:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323035","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6271:3:0","typeDescriptions":{"typeIdentifier":"t_rational_205_by_1","typeString":"int_const 205"},"value":"205"},"visibility":"internal"},{"constant":true,"id":137,"mutability":"constant","name":"UNINITIALIZED","nodeType":"VariableDeclaration","scope":573,"src":"6280:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"6280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323036","id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6322:3:0","typeDescriptions":{"typeIdentifier":"t_rational_206_by_1","typeString":"int_const 206"},"value":"206"},"visibility":"internal"},{"constant":true,"id":140,"mutability":"constant","name":"BPT_IN_MAX_AMOUNT","nodeType":"VariableDeclaration","scope":573,"src":"6331:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6331:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323037","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6377:3:0","typeDescriptions":{"typeIdentifier":"t_rational_207_by_1","typeString":"int_const 207"},"value":"207"},"visibility":"internal"},{"constant":true,"id":143,"mutability":"constant","name":"BPT_OUT_MIN_AMOUNT","nodeType":"VariableDeclaration","scope":573,"src":"6386:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"6386:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323038","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6433:3:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},"visibility":"internal"},{"constant":true,"id":146,"mutability":"constant","name":"EXPIRED_PERMIT","nodeType":"VariableDeclaration","scope":573,"src":"6442:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"6442:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323039","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6485:3:0","typeDescriptions":{"typeIdentifier":"t_rational_209_by_1","typeString":"int_const 209"},"value":"209"},"visibility":"internal"},{"constant":true,"id":149,"mutability":"constant","name":"NOT_TWO_TOKENS","nodeType":"VariableDeclaration","scope":573,"src":"6494:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323130","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6537:3:0","typeDescriptions":{"typeIdentifier":"t_rational_210_by_1","typeString":"int_const 210"},"value":"210"},"visibility":"internal"},{"constant":true,"id":152,"mutability":"constant","name":"DISABLED","nodeType":"VariableDeclaration","scope":573,"src":"6546:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323131","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6583:3:0","typeDescriptions":{"typeIdentifier":"t_rational_211_by_1","typeString":"int_const 211"},"value":"211"},"visibility":"internal"},{"constant":true,"id":155,"mutability":"constant","name":"MIN_AMP","nodeType":"VariableDeclaration","scope":573,"src":"6606:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"6606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:3:0","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"internal"},{"constant":true,"id":158,"mutability":"constant","name":"MAX_AMP","nodeType":"VariableDeclaration","scope":573,"src":"6651:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6651:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333031","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6687:3:0","typeDescriptions":{"typeIdentifier":"t_rational_301_by_1","typeString":"int_const 301"},"value":"301"},"visibility":"internal"},{"constant":true,"id":161,"mutability":"constant","name":"MIN_WEIGHT","nodeType":"VariableDeclaration","scope":573,"src":"6696:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"6696:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333032","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6735:3:0","typeDescriptions":{"typeIdentifier":"t_rational_302_by_1","typeString":"int_const 302"},"value":"302"},"visibility":"internal"},{"constant":true,"id":164,"mutability":"constant","name":"MAX_STABLE_TOKENS","nodeType":"VariableDeclaration","scope":573,"src":"6744:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"6744:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333033","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6790:3:0","typeDescriptions":{"typeIdentifier":"t_rational_303_by_1","typeString":"int_const 303"},"value":"303"},"visibility":"internal"},{"constant":true,"id":167,"mutability":"constant","name":"MAX_IN_RATIO","nodeType":"VariableDeclaration","scope":573,"src":"6799:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6799:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333034","id":166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6840:3:0","typeDescriptions":{"typeIdentifier":"t_rational_304_by_1","typeString":"int_const 304"},"value":"304"},"visibility":"internal"},{"constant":true,"id":170,"mutability":"constant","name":"MAX_OUT_RATIO","nodeType":"VariableDeclaration","scope":573,"src":"6849:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6849:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333035","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:3:0","typeDescriptions":{"typeIdentifier":"t_rational_305_by_1","typeString":"int_const 305"},"value":"305"},"visibility":"internal"},{"constant":true,"id":173,"mutability":"constant","name":"MIN_BPT_IN_FOR_TOKEN_OUT","nodeType":"VariableDeclaration","scope":573,"src":"6900:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6900:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333036","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6953:3:0","typeDescriptions":{"typeIdentifier":"t_rational_306_by_1","typeString":"int_const 306"},"value":"306"},"visibility":"internal"},{"constant":true,"id":176,"mutability":"constant","name":"MAX_OUT_BPT_FOR_TOKEN_IN","nodeType":"VariableDeclaration","scope":573,"src":"6962:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333037","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7015:3:0","typeDescriptions":{"typeIdentifier":"t_rational_307_by_1","typeString":"int_const 307"},"value":"307"},"visibility":"internal"},{"constant":true,"id":179,"mutability":"constant","name":"NORMALIZED_WEIGHT_INVARIANT","nodeType":"VariableDeclaration","scope":573,"src":"7024:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7024:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333038","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7080:3:0","typeDescriptions":{"typeIdentifier":"t_rational_308_by_1","typeString":"int_const 308"},"value":"308"},"visibility":"internal"},{"constant":true,"id":182,"mutability":"constant","name":"INVALID_TOKEN","nodeType":"VariableDeclaration","scope":573,"src":"7089:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333039","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7131:3:0","typeDescriptions":{"typeIdentifier":"t_rational_309_by_1","typeString":"int_const 309"},"value":"309"},"visibility":"internal"},{"constant":true,"id":185,"mutability":"constant","name":"UNHANDLED_JOIN_KIND","nodeType":"VariableDeclaration","scope":573,"src":"7140:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333130","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7188:3:0","typeDescriptions":{"typeIdentifier":"t_rational_310_by_1","typeString":"int_const 310"},"value":"310"},"visibility":"internal"},{"constant":true,"id":188,"mutability":"constant","name":"ZERO_INVARIANT","nodeType":"VariableDeclaration","scope":573,"src":"7197:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"7197:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333131","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7240:3:0","typeDescriptions":{"typeIdentifier":"t_rational_311_by_1","typeString":"int_const 311"},"value":"311"},"visibility":"internal"},{"constant":true,"id":191,"mutability":"constant","name":"ORACLE_INVALID_SECONDS_QUERY","nodeType":"VariableDeclaration","scope":573,"src":"7249:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"7249:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333132","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7306:3:0","typeDescriptions":{"typeIdentifier":"t_rational_312_by_1","typeString":"int_const 312"},"value":"312"},"visibility":"internal"},{"constant":true,"id":194,"mutability":"constant","name":"ORACLE_NOT_INITIALIZED","nodeType":"VariableDeclaration","scope":573,"src":"7315:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"7315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333133","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:3:0","typeDescriptions":{"typeIdentifier":"t_rational_313_by_1","typeString":"int_const 313"},"value":"313"},"visibility":"internal"},{"constant":true,"id":197,"mutability":"constant","name":"ORACLE_QUERY_TOO_OLD","nodeType":"VariableDeclaration","scope":573,"src":"7375:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333134","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7424:3:0","typeDescriptions":{"typeIdentifier":"t_rational_314_by_1","typeString":"int_const 314"},"value":"314"},"visibility":"internal"},{"constant":true,"id":200,"mutability":"constant","name":"ORACLE_INVALID_INDEX","nodeType":"VariableDeclaration","scope":573,"src":"7433:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"7433:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333135","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7482:3:0","typeDescriptions":{"typeIdentifier":"t_rational_315_by_1","typeString":"int_const 315"},"value":"315"},"visibility":"internal"},{"constant":true,"id":203,"mutability":"constant","name":"ORACLE_BAD_SECS","nodeType":"VariableDeclaration","scope":573,"src":"7491:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"7491:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333136","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7535:3:0","typeDescriptions":{"typeIdentifier":"t_rational_316_by_1","typeString":"int_const 316"},"value":"316"},"visibility":"internal"},{"constant":true,"id":206,"mutability":"constant","name":"AMP_END_TIME_TOO_CLOSE","nodeType":"VariableDeclaration","scope":573,"src":"7544:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333137","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7595:3:0","typeDescriptions":{"typeIdentifier":"t_rational_317_by_1","typeString":"int_const 317"},"value":"317"},"visibility":"internal"},{"constant":true,"id":209,"mutability":"constant","name":"AMP_ONGOING_UPDATE","nodeType":"VariableDeclaration","scope":573,"src":"7604:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333138","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7651:3:0","typeDescriptions":{"typeIdentifier":"t_rational_318_by_1","typeString":"int_const 318"},"value":"318"},"visibility":"internal"},{"constant":true,"id":212,"mutability":"constant","name":"AMP_RATE_TOO_HIGH","nodeType":"VariableDeclaration","scope":573,"src":"7660:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"7660:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333139","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7706:3:0","typeDescriptions":{"typeIdentifier":"t_rational_319_by_1","typeString":"int_const 319"},"value":"319"},"visibility":"internal"},{"constant":true,"id":215,"mutability":"constant","name":"AMP_NO_ONGOING_UPDATE","nodeType":"VariableDeclaration","scope":573,"src":"7715:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"7715:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333230","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7765:3:0","typeDescriptions":{"typeIdentifier":"t_rational_320_by_1","typeString":"int_const 320"},"value":"320"},"visibility":"internal"},{"constant":true,"id":218,"mutability":"constant","name":"STABLE_INVARIANT_DIDNT_CONVERGE","nodeType":"VariableDeclaration","scope":573,"src":"7774:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"7774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333231","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7834:3:0","typeDescriptions":{"typeIdentifier":"t_rational_321_by_1","typeString":"int_const 321"},"value":"321"},"visibility":"internal"},{"constant":true,"id":221,"mutability":"constant","name":"STABLE_GET_BALANCE_DIDNT_CONVERGE","nodeType":"VariableDeclaration","scope":573,"src":"7843:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"7843:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333232","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7905:3:0","typeDescriptions":{"typeIdentifier":"t_rational_322_by_1","typeString":"int_const 322"},"value":"322"},"visibility":"internal"},{"constant":true,"id":224,"mutability":"constant","name":"RELAYER_NOT_CONTRACT","nodeType":"VariableDeclaration","scope":573,"src":"7914:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"7914:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333233","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:3:0","typeDescriptions":{"typeIdentifier":"t_rational_323_by_1","typeString":"int_const 323"},"value":"323"},"visibility":"internal"},{"constant":true,"id":227,"mutability":"constant","name":"BASE_POOL_RELAYER_NOT_CALLED","nodeType":"VariableDeclaration","scope":573,"src":"7972:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"7972:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333234","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:3:0","typeDescriptions":{"typeIdentifier":"t_rational_324_by_1","typeString":"int_const 324"},"value":"324"},"visibility":"internal"},{"constant":true,"id":230,"mutability":"constant","name":"REBALANCING_RELAYER_REENTERED","nodeType":"VariableDeclaration","scope":573,"src":"8038:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"8038:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333235","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8096:3:0","typeDescriptions":{"typeIdentifier":"t_rational_325_by_1","typeString":"int_const 325"},"value":"325"},"visibility":"internal"},{"constant":true,"id":233,"mutability":"constant","name":"GRADUAL_UPDATE_TIME_TRAVEL","nodeType":"VariableDeclaration","scope":573,"src":"8105:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"8105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333236","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8160:3:0","typeDescriptions":{"typeIdentifier":"t_rational_326_by_1","typeString":"int_const 326"},"value":"326"},"visibility":"internal"},{"constant":true,"id":236,"mutability":"constant","name":"SWAPS_DISABLED","nodeType":"VariableDeclaration","scope":573,"src":"8169:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333237","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8212:3:0","typeDescriptions":{"typeIdentifier":"t_rational_327_by_1","typeString":"int_const 327"},"value":"327"},"visibility":"internal"},{"constant":true,"id":239,"mutability":"constant","name":"CALLER_IS_NOT_LBP_OWNER","nodeType":"VariableDeclaration","scope":573,"src":"8221:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8221:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333238","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8273:3:0","typeDescriptions":{"typeIdentifier":"t_rational_328_by_1","typeString":"int_const 328"},"value":"328"},"visibility":"internal"},{"constant":true,"id":242,"mutability":"constant","name":"PRICE_RATE_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"8282:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"8282:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333239","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8330:3:0","typeDescriptions":{"typeIdentifier":"t_rational_329_by_1","typeString":"int_const 329"},"value":"329"},"visibility":"internal"},{"constant":true,"id":245,"mutability":"constant","name":"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED","nodeType":"VariableDeclaration","scope":573,"src":"8339:75:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333330","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8411:3:0","typeDescriptions":{"typeIdentifier":"t_rational_330_by_1","typeString":"int_const 330"},"value":"330"},"visibility":"internal"},{"constant":true,"id":248,"mutability":"constant","name":"WEIGHT_CHANGE_TOO_FAST","nodeType":"VariableDeclaration","scope":573,"src":"8420:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"8420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333331","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:3:0","typeDescriptions":{"typeIdentifier":"t_rational_331_by_1","typeString":"int_const 331"},"value":"331"},"visibility":"internal"},{"constant":true,"id":251,"mutability":"constant","name":"LOWER_GREATER_THAN_UPPER_TARGET","nodeType":"VariableDeclaration","scope":573,"src":"8480:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"8480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333332","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8540:3:0","typeDescriptions":{"typeIdentifier":"t_rational_332_by_1","typeString":"int_const 332"},"value":"332"},"visibility":"internal"},{"constant":true,"id":254,"mutability":"constant","name":"UPPER_TARGET_TOO_HIGH","nodeType":"VariableDeclaration","scope":573,"src":"8549:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"8549:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333333","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8599:3:0","typeDescriptions":{"typeIdentifier":"t_rational_333_by_1","typeString":"int_const 333"},"value":"333"},"visibility":"internal"},{"constant":true,"id":257,"mutability":"constant","name":"UNHANDLED_BY_LINEAR_POOL","nodeType":"VariableDeclaration","scope":573,"src":"8608:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"8608:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333334","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:0","typeDescriptions":{"typeIdentifier":"t_rational_334_by_1","typeString":"int_const 334"},"value":"334"},"visibility":"internal"},{"constant":true,"id":260,"mutability":"constant","name":"OUT_OF_TARGET_RANGE","nodeType":"VariableDeclaration","scope":573,"src":"8670:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"8670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333335","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8718:3:0","typeDescriptions":{"typeIdentifier":"t_rational_335_by_1","typeString":"int_const 335"},"value":"335"},"visibility":"internal"},{"constant":true,"id":263,"mutability":"constant","name":"UNHANDLED_EXIT_KIND","nodeType":"VariableDeclaration","scope":573,"src":"8727:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"8727:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333336","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:3:0","typeDescriptions":{"typeIdentifier":"t_rational_336_by_1","typeString":"int_const 336"},"value":"336"},"visibility":"internal"},{"constant":true,"id":266,"mutability":"constant","name":"UNAUTHORIZED_EXIT","nodeType":"VariableDeclaration","scope":573,"src":"8784:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"8784:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333337","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8830:3:0","typeDescriptions":{"typeIdentifier":"t_rational_337_by_1","typeString":"int_const 337"},"value":"337"},"visibility":"internal"},{"constant":true,"id":269,"mutability":"constant","name":"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":573,"src":"8839:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"8839:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333338","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8902:3:0","typeDescriptions":{"typeIdentifier":"t_rational_338_by_1","typeString":"int_const 338"},"value":"338"},"visibility":"internal"},{"constant":true,"id":272,"mutability":"constant","name":"UNHANDLED_BY_MANAGED_POOL","nodeType":"VariableDeclaration","scope":573,"src":"8911:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"8911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333339","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8965:3:0","typeDescriptions":{"typeIdentifier":"t_rational_339_by_1","typeString":"int_const 339"},"value":"339"},"visibility":"internal"},{"constant":true,"id":275,"mutability":"constant","name":"UNHANDLED_BY_PHANTOM_POOL","nodeType":"VariableDeclaration","scope":573,"src":"8974:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"8974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333430","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:3:0","typeDescriptions":{"typeIdentifier":"t_rational_340_by_1","typeString":"int_const 340"},"value":"340"},"visibility":"internal"},{"constant":true,"id":278,"mutability":"constant","name":"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER","nodeType":"VariableDeclaration","scope":573,"src":"9037:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"9037:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333431","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:3:0","typeDescriptions":{"typeIdentifier":"t_rational_341_by_1","typeString":"int_const 341"},"value":"341"},"visibility":"internal"},{"constant":true,"id":281,"mutability":"constant","name":"INVALID_INITIALIZATION","nodeType":"VariableDeclaration","scope":573,"src":"9108:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"9108:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333432","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9159:3:0","typeDescriptions":{"typeIdentifier":"t_rational_342_by_1","typeString":"int_const 342"},"value":"342"},"visibility":"internal"},{"constant":true,"id":284,"mutability":"constant","name":"OUT_OF_NEW_TARGET_RANGE","nodeType":"VariableDeclaration","scope":573,"src":"9168:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"9168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333433","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9220:3:0","typeDescriptions":{"typeIdentifier":"t_rational_343_by_1","typeString":"int_const 343"},"value":"343"},"visibility":"internal"},{"constant":true,"id":287,"mutability":"constant","name":"FEATURE_DISABLED","nodeType":"VariableDeclaration","scope":573,"src":"9229:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"9229:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333434","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9274:3:0","typeDescriptions":{"typeIdentifier":"t_rational_344_by_1","typeString":"int_const 344"},"value":"344"},"visibility":"internal"},{"constant":true,"id":290,"mutability":"constant","name":"UNINITIALIZED_POOL_CONTROLLER","nodeType":"VariableDeclaration","scope":573,"src":"9283:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333435","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9341:3:0","typeDescriptions":{"typeIdentifier":"t_rational_345_by_1","typeString":"int_const 345"},"value":"345"},"visibility":"internal"},{"constant":true,"id":293,"mutability":"constant","name":"SET_SWAP_FEE_DURING_FEE_CHANGE","nodeType":"VariableDeclaration","scope":573,"src":"9350:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"9350:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333436","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9409:3:0","typeDescriptions":{"typeIdentifier":"t_rational_346_by_1","typeString":"int_const 346"},"value":"346"},"visibility":"internal"},{"constant":true,"id":296,"mutability":"constant","name":"SET_SWAP_FEE_PENDING_FEE_CHANGE","nodeType":"VariableDeclaration","scope":573,"src":"9418:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"9418:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333437","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9478:3:0","typeDescriptions":{"typeIdentifier":"t_rational_347_by_1","typeString":"int_const 347"},"value":"347"},"visibility":"internal"},{"constant":true,"id":299,"mutability":"constant","name":"CHANGE_TOKENS_DURING_WEIGHT_CHANGE","nodeType":"VariableDeclaration","scope":573,"src":"9487:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9487:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333438","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9550:3:0","typeDescriptions":{"typeIdentifier":"t_rational_348_by_1","typeString":"int_const 348"},"value":"348"},"visibility":"internal"},{"constant":true,"id":302,"mutability":"constant","name":"CHANGE_TOKENS_PENDING_WEIGHT_CHANGE","nodeType":"VariableDeclaration","scope":573,"src":"9559:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"9559:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333439","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9623:3:0","typeDescriptions":{"typeIdentifier":"t_rational_349_by_1","typeString":"int_const 349"},"value":"349"},"visibility":"internal"},{"constant":true,"id":305,"mutability":"constant","name":"MAX_WEIGHT","nodeType":"VariableDeclaration","scope":573,"src":"9632:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"9632:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333530","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9671:3:0","typeDescriptions":{"typeIdentifier":"t_rational_350_by_1","typeString":"int_const 350"},"value":"350"},"visibility":"internal"},{"constant":true,"id":308,"mutability":"constant","name":"UNAUTHORIZED_JOIN","nodeType":"VariableDeclaration","scope":573,"src":"9680:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"9680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333531","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9726:3:0","typeDescriptions":{"typeIdentifier":"t_rational_351_by_1","typeString":"int_const 351"},"value":"351"},"visibility":"internal"},{"constant":true,"id":311,"mutability":"constant","name":"MAX_MANAGEMENT_AUM_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":573,"src":"9735:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"9735:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333532","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9797:3:0","typeDescriptions":{"typeIdentifier":"t_rational_352_by_1","typeString":"int_const 352"},"value":"352"},"visibility":"internal"},{"constant":true,"id":314,"mutability":"constant","name":"FRACTIONAL_TARGET","nodeType":"VariableDeclaration","scope":573,"src":"9806:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"9806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333533","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9852:3:0","typeDescriptions":{"typeIdentifier":"t_rational_353_by_1","typeString":"int_const 353"},"value":"353"},"visibility":"internal"},{"constant":true,"id":317,"mutability":"constant","name":"ADD_OR_REMOVE_BPT","nodeType":"VariableDeclaration","scope":573,"src":"9861:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"9861:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333534","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9907:3:0","typeDescriptions":{"typeIdentifier":"t_rational_354_by_1","typeString":"int_const 354"},"value":"354"},"visibility":"internal"},{"constant":true,"id":320,"mutability":"constant","name":"INVALID_CIRCUIT_BREAKER_BOUNDS","nodeType":"VariableDeclaration","scope":573,"src":"9916:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"9916:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333535","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9975:3:0","typeDescriptions":{"typeIdentifier":"t_rational_355_by_1","typeString":"int_const 355"},"value":"355"},"visibility":"internal"},{"constant":true,"id":323,"mutability":"constant","name":"CIRCUIT_BREAKER_TRIPPED","nodeType":"VariableDeclaration","scope":573,"src":"9984:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333536","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:3:0","typeDescriptions":{"typeIdentifier":"t_rational_356_by_1","typeString":"int_const 356"},"value":"356"},"visibility":"internal"},{"constant":true,"id":326,"mutability":"constant","name":"MALICIOUS_QUERY_REVERT","nodeType":"VariableDeclaration","scope":573,"src":"10045:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"10045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333537","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10096:3:0","typeDescriptions":{"typeIdentifier":"t_rational_357_by_1","typeString":"int_const 357"},"value":"357"},"visibility":"internal"},{"constant":true,"id":329,"mutability":"constant","name":"JOINS_EXITS_DISABLED","nodeType":"VariableDeclaration","scope":573,"src":"10105:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"10105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333538","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10154:3:0","typeDescriptions":{"typeIdentifier":"t_rational_358_by_1","typeString":"int_const 358"},"value":"358"},"visibility":"internal"},{"constant":true,"id":332,"mutability":"constant","name":"REENTRANCY","nodeType":"VariableDeclaration","scope":573,"src":"10175:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"10175:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343030","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10214:3:0","typeDescriptions":{"typeIdentifier":"t_rational_400_by_1","typeString":"int_const 400"},"value":"400"},"visibility":"internal"},{"constant":true,"id":335,"mutability":"constant","name":"SENDER_NOT_ALLOWED","nodeType":"VariableDeclaration","scope":573,"src":"10223:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"10223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343031","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10270:3:0","typeDescriptions":{"typeIdentifier":"t_rational_401_by_1","typeString":"int_const 401"},"value":"401"},"visibility":"internal"},{"constant":true,"id":338,"mutability":"constant","name":"PAUSED","nodeType":"VariableDeclaration","scope":573,"src":"10279:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"10279:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343032","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10314:3:0","typeDescriptions":{"typeIdentifier":"t_rational_402_by_1","typeString":"int_const 402"},"value":"402"},"visibility":"internal"},{"constant":true,"id":341,"mutability":"constant","name":"PAUSE_WINDOW_EXPIRED","nodeType":"VariableDeclaration","scope":573,"src":"10323:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"10323:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343033","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10372:3:0","typeDescriptions":{"typeIdentifier":"t_rational_403_by_1","typeString":"int_const 403"},"value":"403"},"visibility":"internal"},{"constant":true,"id":344,"mutability":"constant","name":"MAX_PAUSE_WINDOW_DURATION","nodeType":"VariableDeclaration","scope":573,"src":"10381:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"10381:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343034","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:3:0","typeDescriptions":{"typeIdentifier":"t_rational_404_by_1","typeString":"int_const 404"},"value":"404"},"visibility":"internal"},{"constant":true,"id":347,"mutability":"constant","name":"MAX_BUFFER_PERIOD_DURATION","nodeType":"VariableDeclaration","scope":573,"src":"10444:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10444:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343035","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10499:3:0","typeDescriptions":{"typeIdentifier":"t_rational_405_by_1","typeString":"int_const 405"},"value":"405"},"visibility":"internal"},{"constant":true,"id":350,"mutability":"constant","name":"INSUFFICIENT_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"10508:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343036","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10557:3:0","typeDescriptions":{"typeIdentifier":"t_rational_406_by_1","typeString":"int_const 406"},"value":"406"},"visibility":"internal"},{"constant":true,"id":353,"mutability":"constant","name":"INSUFFICIENT_ALLOWANCE","nodeType":"VariableDeclaration","scope":573,"src":"10566:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"10566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343037","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10617:3:0","typeDescriptions":{"typeIdentifier":"t_rational_407_by_1","typeString":"int_const 407"},"value":"407"},"visibility":"internal"},{"constant":true,"id":356,"mutability":"constant","name":"ERC20_TRANSFER_FROM_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":573,"src":"10626:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"10626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343038","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10687:3:0","typeDescriptions":{"typeIdentifier":"t_rational_408_by_1","typeString":"int_const 408"},"value":"408"},"visibility":"internal"},{"constant":true,"id":359,"mutability":"constant","name":"ERC20_TRANSFER_TO_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":573,"src":"10696:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"10696:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343039","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10755:3:0","typeDescriptions":{"typeIdentifier":"t_rational_409_by_1","typeString":"int_const 409"},"value":"409"},"visibility":"internal"},{"constant":true,"id":362,"mutability":"constant","name":"ERC20_MINT_TO_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":573,"src":"10764:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"10764:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343130","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:3:0","typeDescriptions":{"typeIdentifier":"t_rational_410_by_1","typeString":"int_const 410"},"value":"410"},"visibility":"internal"},{"constant":true,"id":365,"mutability":"constant","name":"ERC20_BURN_FROM_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":573,"src":"10828:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"10828:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343131","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10885:3:0","typeDescriptions":{"typeIdentifier":"t_rational_411_by_1","typeString":"int_const 411"},"value":"411"},"visibility":"internal"},{"constant":true,"id":368,"mutability":"constant","name":"ERC20_APPROVE_FROM_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":573,"src":"10894:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"10894:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343132","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10954:3:0","typeDescriptions":{"typeIdentifier":"t_rational_412_by_1","typeString":"int_const 412"},"value":"412"},"visibility":"internal"},{"constant":true,"id":371,"mutability":"constant","name":"ERC20_APPROVE_TO_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":573,"src":"10963:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"10963:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343133","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11021:3:0","typeDescriptions":{"typeIdentifier":"t_rational_413_by_1","typeString":"int_const 413"},"value":"413"},"visibility":"internal"},{"constant":true,"id":374,"mutability":"constant","name":"ERC20_TRANSFER_EXCEEDS_ALLOWANCE","nodeType":"VariableDeclaration","scope":573,"src":"11030:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"11030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343134","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11091:3:0","typeDescriptions":{"typeIdentifier":"t_rational_414_by_1","typeString":"int_const 414"},"value":"414"},"visibility":"internal"},{"constant":true,"id":377,"mutability":"constant","name":"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO","nodeType":"VariableDeclaration","scope":573,"src":"11100:68:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"11100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343135","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:3:0","typeDescriptions":{"typeIdentifier":"t_rational_415_by_1","typeString":"int_const 415"},"value":"415"},"visibility":"internal"},{"constant":true,"id":380,"mutability":"constant","name":"ERC20_TRANSFER_EXCEEDS_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"11174:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11174:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343136","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11233:3:0","typeDescriptions":{"typeIdentifier":"t_rational_416_by_1","typeString":"int_const 416"},"value":"416"},"visibility":"internal"},{"constant":true,"id":383,"mutability":"constant","name":"ERC20_BURN_EXCEEDS_ALLOWANCE","nodeType":"VariableDeclaration","scope":573,"src":"11242:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"11242:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343137","id":382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11299:3:0","typeDescriptions":{"typeIdentifier":"t_rational_417_by_1","typeString":"int_const 417"},"value":"417"},"visibility":"internal"},{"constant":true,"id":386,"mutability":"constant","name":"SAFE_ERC20_CALL_FAILED","nodeType":"VariableDeclaration","scope":573,"src":"11308:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"11308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11359:3:0","typeDescriptions":{"typeIdentifier":"t_rational_418_by_1","typeString":"int_const 418"},"value":"418"},"visibility":"internal"},{"constant":true,"id":389,"mutability":"constant","name":"ADDRESS_INSUFFICIENT_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"11368:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"11368:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343139","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11425:3:0","typeDescriptions":{"typeIdentifier":"t_rational_419_by_1","typeString":"int_const 419"},"value":"419"},"visibility":"internal"},{"constant":true,"id":392,"mutability":"constant","name":"ADDRESS_CANNOT_SEND_VALUE","nodeType":"VariableDeclaration","scope":573,"src":"11434:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"11434:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343230","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11488:3:0","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"internal"},{"constant":true,"id":395,"mutability":"constant","name":"SAFE_CAST_VALUE_CANT_FIT_INT256","nodeType":"VariableDeclaration","scope":573,"src":"11497:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"11497:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343231","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11557:3:0","typeDescriptions":{"typeIdentifier":"t_rational_421_by_1","typeString":"int_const 421"},"value":"421"},"visibility":"internal"},{"constant":true,"id":398,"mutability":"constant","name":"GRANT_SENDER_NOT_ADMIN","nodeType":"VariableDeclaration","scope":573,"src":"11566:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"11566:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343232","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11617:3:0","typeDescriptions":{"typeIdentifier":"t_rational_422_by_1","typeString":"int_const 422"},"value":"422"},"visibility":"internal"},{"constant":true,"id":401,"mutability":"constant","name":"REVOKE_SENDER_NOT_ADMIN","nodeType":"VariableDeclaration","scope":573,"src":"11626:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"11626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343233","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:3:0","typeDescriptions":{"typeIdentifier":"t_rational_423_by_1","typeString":"int_const 423"},"value":"423"},"visibility":"internal"},{"constant":true,"id":404,"mutability":"constant","name":"RENOUNCE_SENDER_NOT_ALLOWED","nodeType":"VariableDeclaration","scope":573,"src":"11687:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"11687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343234","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11743:3:0","typeDescriptions":{"typeIdentifier":"t_rational_424_by_1","typeString":"int_const 424"},"value":"424"},"visibility":"internal"},{"constant":true,"id":407,"mutability":"constant","name":"BUFFER_PERIOD_EXPIRED","nodeType":"VariableDeclaration","scope":573,"src":"11752:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343235","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11802:3:0","typeDescriptions":{"typeIdentifier":"t_rational_425_by_1","typeString":"int_const 425"},"value":"425"},"visibility":"internal"},{"constant":true,"id":410,"mutability":"constant","name":"CALLER_IS_NOT_OWNER","nodeType":"VariableDeclaration","scope":573,"src":"11811:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11811:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343236","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:3:0","typeDescriptions":{"typeIdentifier":"t_rational_426_by_1","typeString":"int_const 426"},"value":"426"},"visibility":"internal"},{"constant":true,"id":413,"mutability":"constant","name":"NEW_OWNER_IS_ZERO","nodeType":"VariableDeclaration","scope":573,"src":"11868:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"11868:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343237","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:3:0","typeDescriptions":{"typeIdentifier":"t_rational_427_by_1","typeString":"int_const 427"},"value":"427"},"visibility":"internal"},{"constant":true,"id":416,"mutability":"constant","name":"CODE_DEPLOYMENT_FAILED","nodeType":"VariableDeclaration","scope":573,"src":"11923:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"11923:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343238","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11974:3:0","typeDescriptions":{"typeIdentifier":"t_rational_428_by_1","typeString":"int_const 428"},"value":"428"},"visibility":"internal"},{"constant":true,"id":419,"mutability":"constant","name":"CALL_TO_NON_CONTRACT","nodeType":"VariableDeclaration","scope":573,"src":"11983:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"11983:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343239","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12032:3:0","typeDescriptions":{"typeIdentifier":"t_rational_429_by_1","typeString":"int_const 429"},"value":"429"},"visibility":"internal"},{"constant":true,"id":422,"mutability":"constant","name":"LOW_LEVEL_CALL_FAILED","nodeType":"VariableDeclaration","scope":573,"src":"12041:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"12041:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343330","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:3:0","typeDescriptions":{"typeIdentifier":"t_rational_430_by_1","typeString":"int_const 430"},"value":"430"},"visibility":"internal"},{"constant":true,"id":425,"mutability":"constant","name":"NOT_PAUSED","nodeType":"VariableDeclaration","scope":573,"src":"12100:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343331","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12139:3:0","typeDescriptions":{"typeIdentifier":"t_rational_431_by_1","typeString":"int_const 431"},"value":"431"},"visibility":"internal"},{"constant":true,"id":428,"mutability":"constant","name":"ADDRESS_ALREADY_ALLOWLISTED","nodeType":"VariableDeclaration","scope":573,"src":"12148:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343332","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12204:3:0","typeDescriptions":{"typeIdentifier":"t_rational_432_by_1","typeString":"int_const 432"},"value":"432"},"visibility":"internal"},{"constant":true,"id":431,"mutability":"constant","name":"ADDRESS_NOT_ALLOWLISTED","nodeType":"VariableDeclaration","scope":573,"src":"12213:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"12213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343333","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12265:3:0","typeDescriptions":{"typeIdentifier":"t_rational_433_by_1","typeString":"int_const 433"},"value":"433"},"visibility":"internal"},{"constant":true,"id":434,"mutability":"constant","name":"ERC20_BURN_EXCEEDS_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"12274:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"12274:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343334","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12329:3:0","typeDescriptions":{"typeIdentifier":"t_rational_434_by_1","typeString":"int_const 434"},"value":"434"},"visibility":"internal"},{"constant":true,"id":437,"mutability":"constant","name":"INVALID_OPERATION","nodeType":"VariableDeclaration","scope":573,"src":"12338:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"12338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343335","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12384:3:0","typeDescriptions":{"typeIdentifier":"t_rational_435_by_1","typeString":"int_const 435"},"value":"435"},"visibility":"internal"},{"constant":true,"id":440,"mutability":"constant","name":"CODEC_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"12393:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"12393:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343336","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12436:3:0","typeDescriptions":{"typeIdentifier":"t_rational_436_by_1","typeString":"int_const 436"},"value":"436"},"visibility":"internal"},{"constant":true,"id":443,"mutability":"constant","name":"IN_RECOVERY_MODE","nodeType":"VariableDeclaration","scope":573,"src":"12445:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"12445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343337","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12490:3:0","typeDescriptions":{"typeIdentifier":"t_rational_437_by_1","typeString":"int_const 437"},"value":"437"},"visibility":"internal"},{"constant":true,"id":446,"mutability":"constant","name":"NOT_IN_RECOVERY_MODE","nodeType":"VariableDeclaration","scope":573,"src":"12499:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"12499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343338","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12548:3:0","typeDescriptions":{"typeIdentifier":"t_rational_438_by_1","typeString":"int_const 438"},"value":"438"},"visibility":"internal"},{"constant":true,"id":449,"mutability":"constant","name":"INDUCED_FAILURE","nodeType":"VariableDeclaration","scope":573,"src":"12557:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"12557:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343339","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12601:3:0","typeDescriptions":{"typeIdentifier":"t_rational_439_by_1","typeString":"int_const 439"},"value":"439"},"visibility":"internal"},{"constant":true,"id":452,"mutability":"constant","name":"EXPIRED_SIGNATURE","nodeType":"VariableDeclaration","scope":573,"src":"12610:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343430","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:3:0","typeDescriptions":{"typeIdentifier":"t_rational_440_by_1","typeString":"int_const 440"},"value":"440"},"visibility":"internal"},{"constant":true,"id":455,"mutability":"constant","name":"MALFORMED_SIGNATURE","nodeType":"VariableDeclaration","scope":573,"src":"12665:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"12665:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343431","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12713:3:0","typeDescriptions":{"typeIdentifier":"t_rational_441_by_1","typeString":"int_const 441"},"value":"441"},"visibility":"internal"},{"constant":true,"id":458,"mutability":"constant","name":"SAFE_CAST_VALUE_CANT_FIT_UINT64","nodeType":"VariableDeclaration","scope":573,"src":"12722:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343432","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12782:3:0","typeDescriptions":{"typeIdentifier":"t_rational_442_by_1","typeString":"int_const 442"},"value":"442"},"visibility":"internal"},{"constant":true,"id":461,"mutability":"constant","name":"UNHANDLED_FEE_TYPE","nodeType":"VariableDeclaration","scope":573,"src":"12791:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"12791:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343433","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:3:0","typeDescriptions":{"typeIdentifier":"t_rational_443_by_1","typeString":"int_const 443"},"value":"443"},"visibility":"internal"},{"constant":true,"id":464,"mutability":"constant","name":"BURN_FROM_ZERO","nodeType":"VariableDeclaration","scope":573,"src":"12847:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343434","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12890:3:0","typeDescriptions":{"typeIdentifier":"t_rational_444_by_1","typeString":"int_const 444"},"value":"444"},"visibility":"internal"},{"constant":true,"id":467,"mutability":"constant","name":"INVALID_POOL_ID","nodeType":"VariableDeclaration","scope":573,"src":"12913:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"12913:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12957:3:0","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"internal"},{"constant":true,"id":470,"mutability":"constant","name":"CALLER_NOT_POOL","nodeType":"VariableDeclaration","scope":573,"src":"12966:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"12966:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353031","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13010:3:0","typeDescriptions":{"typeIdentifier":"t_rational_501_by_1","typeString":"int_const 501"},"value":"501"},"visibility":"internal"},{"constant":true,"id":473,"mutability":"constant","name":"SENDER_NOT_ASSET_MANAGER","nodeType":"VariableDeclaration","scope":573,"src":"13019:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"13019:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353032","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13072:3:0","typeDescriptions":{"typeIdentifier":"t_rational_502_by_1","typeString":"int_const 502"},"value":"502"},"visibility":"internal"},{"constant":true,"id":476,"mutability":"constant","name":"USER_DOESNT_ALLOW_RELAYER","nodeType":"VariableDeclaration","scope":573,"src":"13081:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"13081:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353033","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13135:3:0","typeDescriptions":{"typeIdentifier":"t_rational_503_by_1","typeString":"int_const 503"},"value":"503"},"visibility":"internal"},{"constant":true,"id":479,"mutability":"constant","name":"INVALID_SIGNATURE","nodeType":"VariableDeclaration","scope":573,"src":"13144:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"13144:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353034","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:3:0","typeDescriptions":{"typeIdentifier":"t_rational_504_by_1","typeString":"int_const 504"},"value":"504"},"visibility":"internal"},{"constant":true,"id":482,"mutability":"constant","name":"EXIT_BELOW_MIN","nodeType":"VariableDeclaration","scope":573,"src":"13199:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"13199:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353035","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13242:3:0","typeDescriptions":{"typeIdentifier":"t_rational_505_by_1","typeString":"int_const 505"},"value":"505"},"visibility":"internal"},{"constant":true,"id":485,"mutability":"constant","name":"JOIN_ABOVE_MAX","nodeType":"VariableDeclaration","scope":573,"src":"13251:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"13251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353036","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13294:3:0","typeDescriptions":{"typeIdentifier":"t_rational_506_by_1","typeString":"int_const 506"},"value":"506"},"visibility":"internal"},{"constant":true,"id":488,"mutability":"constant","name":"SWAP_LIMIT","nodeType":"VariableDeclaration","scope":573,"src":"13303:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"13303:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353037","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13342:3:0","typeDescriptions":{"typeIdentifier":"t_rational_507_by_1","typeString":"int_const 507"},"value":"507"},"visibility":"internal"},{"constant":true,"id":491,"mutability":"constant","name":"SWAP_DEADLINE","nodeType":"VariableDeclaration","scope":573,"src":"13351:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"13351:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353038","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13393:3:0","typeDescriptions":{"typeIdentifier":"t_rational_508_by_1","typeString":"int_const 508"},"value":"508"},"visibility":"internal"},{"constant":true,"id":494,"mutability":"constant","name":"CANNOT_SWAP_SAME_TOKEN","nodeType":"VariableDeclaration","scope":573,"src":"13402:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"13402:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353039","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13453:3:0","typeDescriptions":{"typeIdentifier":"t_rational_509_by_1","typeString":"int_const 509"},"value":"509"},"visibility":"internal"},{"constant":true,"id":497,"mutability":"constant","name":"UNKNOWN_AMOUNT_IN_FIRST_SWAP","nodeType":"VariableDeclaration","scope":573,"src":"13462:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"13462:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353130","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13519:3:0","typeDescriptions":{"typeIdentifier":"t_rational_510_by_1","typeString":"int_const 510"},"value":"510"},"visibility":"internal"},{"constant":true,"id":500,"mutability":"constant","name":"MALCONSTRUCTED_MULTIHOP_SWAP","nodeType":"VariableDeclaration","scope":573,"src":"13528:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"13528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353131","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13585:3:0","typeDescriptions":{"typeIdentifier":"t_rational_511_by_1","typeString":"int_const 511"},"value":"511"},"visibility":"internal"},{"constant":true,"id":503,"mutability":"constant","name":"INTERNAL_BALANCE_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"13594:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"13594:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353132","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13648:3:0","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"512"},"visibility":"internal"},{"constant":true,"id":506,"mutability":"constant","name":"INSUFFICIENT_INTERNAL_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"13657:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"13657:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353133","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13715:3:0","typeDescriptions":{"typeIdentifier":"t_rational_513_by_1","typeString":"int_const 513"},"value":"513"},"visibility":"internal"},{"constant":true,"id":509,"mutability":"constant","name":"INVALID_ETH_INTERNAL_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"13724:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"13724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353134","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13781:3:0","typeDescriptions":{"typeIdentifier":"t_rational_514_by_1","typeString":"int_const 514"},"value":"514"},"visibility":"internal"},{"constant":true,"id":512,"mutability":"constant","name":"INVALID_POST_LOAN_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"13790:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"13790:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353135","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13844:3:0","typeDescriptions":{"typeIdentifier":"t_rational_515_by_1","typeString":"int_const 515"},"value":"515"},"visibility":"internal"},{"constant":true,"id":515,"mutability":"constant","name":"INSUFFICIENT_ETH","nodeType":"VariableDeclaration","scope":573,"src":"13853:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"13853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353136","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13898:3:0","typeDescriptions":{"typeIdentifier":"t_rational_516_by_1","typeString":"int_const 516"},"value":"516"},"visibility":"internal"},{"constant":true,"id":518,"mutability":"constant","name":"UNALLOCATED_ETH","nodeType":"VariableDeclaration","scope":573,"src":"13907:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"13907:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353137","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13951:3:0","typeDescriptions":{"typeIdentifier":"t_rational_517_by_1","typeString":"int_const 517"},"value":"517"},"visibility":"internal"},{"constant":true,"id":521,"mutability":"constant","name":"ETH_TRANSFER","nodeType":"VariableDeclaration","scope":573,"src":"13960:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"13960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353138","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14001:3:0","typeDescriptions":{"typeIdentifier":"t_rational_518_by_1","typeString":"int_const 518"},"value":"518"},"visibility":"internal"},{"constant":true,"id":524,"mutability":"constant","name":"CANNOT_USE_ETH_SENTINEL","nodeType":"VariableDeclaration","scope":573,"src":"14010:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"14010:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353139","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14062:3:0","typeDescriptions":{"typeIdentifier":"t_rational_519_by_1","typeString":"int_const 519"},"value":"519"},"visibility":"internal"},{"constant":true,"id":527,"mutability":"constant","name":"TOKENS_MISMATCH","nodeType":"VariableDeclaration","scope":573,"src":"14071:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"14071:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353230","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14115:3:0","typeDescriptions":{"typeIdentifier":"t_rational_520_by_1","typeString":"int_const 520"},"value":"520"},"visibility":"internal"},{"constant":true,"id":530,"mutability":"constant","name":"TOKEN_NOT_REGISTERED","nodeType":"VariableDeclaration","scope":573,"src":"14124:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"14124:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353231","id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14173:3:0","typeDescriptions":{"typeIdentifier":"t_rational_521_by_1","typeString":"int_const 521"},"value":"521"},"visibility":"internal"},{"constant":true,"id":533,"mutability":"constant","name":"TOKEN_ALREADY_REGISTERED","nodeType":"VariableDeclaration","scope":573,"src":"14182:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"14182:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353232","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14235:3:0","typeDescriptions":{"typeIdentifier":"t_rational_522_by_1","typeString":"int_const 522"},"value":"522"},"visibility":"internal"},{"constant":true,"id":536,"mutability":"constant","name":"TOKENS_ALREADY_SET","nodeType":"VariableDeclaration","scope":573,"src":"14244:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"14244:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353233","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14291:3:0","typeDescriptions":{"typeIdentifier":"t_rational_523_by_1","typeString":"int_const 523"},"value":"523"},"visibility":"internal"},{"constant":true,"id":539,"mutability":"constant","name":"TOKENS_LENGTH_MUST_BE_2","nodeType":"VariableDeclaration","scope":573,"src":"14300:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"14300:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353234","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14352:3:0","typeDescriptions":{"typeIdentifier":"t_rational_524_by_1","typeString":"int_const 524"},"value":"524"},"visibility":"internal"},{"constant":true,"id":542,"mutability":"constant","name":"NONZERO_TOKEN_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"14361:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"14361:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353235","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14411:3:0","typeDescriptions":{"typeIdentifier":"t_rational_525_by_1","typeString":"int_const 525"},"value":"525"},"visibility":"internal"},{"constant":true,"id":545,"mutability":"constant","name":"BALANCE_TOTAL_OVERFLOW","nodeType":"VariableDeclaration","scope":573,"src":"14420:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"14420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353236","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14471:3:0","typeDescriptions":{"typeIdentifier":"t_rational_526_by_1","typeString":"int_const 526"},"value":"526"},"visibility":"internal"},{"constant":true,"id":548,"mutability":"constant","name":"POOL_NO_TOKENS","nodeType":"VariableDeclaration","scope":573,"src":"14480:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"14480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353237","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14523:3:0","typeDescriptions":{"typeIdentifier":"t_rational_527_by_1","typeString":"int_const 527"},"value":"527"},"visibility":"internal"},{"constant":true,"id":551,"mutability":"constant","name":"INSUFFICIENT_FLASH_LOAN_BALANCE","nodeType":"VariableDeclaration","scope":573,"src":"14532:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"14532:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353238","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14592:3:0","typeDescriptions":{"typeIdentifier":"t_rational_528_by_1","typeString":"int_const 528"},"value":"528"},"visibility":"internal"},{"constant":true,"id":554,"mutability":"constant","name":"SWAP_FEE_PERCENTAGE_TOO_HIGH","nodeType":"VariableDeclaration","scope":573,"src":"14614:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"14614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363030","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14671:3:0","typeDescriptions":{"typeIdentifier":"t_rational_600_by_1","typeString":"int_const 600"},"value":"600"},"visibility":"internal"},{"constant":true,"id":557,"mutability":"constant","name":"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH","nodeType":"VariableDeclaration","scope":573,"src":"14680:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"14680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363031","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14743:3:0","typeDescriptions":{"typeIdentifier":"t_rational_601_by_1","typeString":"int_const 601"},"value":"601"},"visibility":"internal"},{"constant":true,"id":560,"mutability":"constant","name":"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT","nodeType":"VariableDeclaration","scope":573,"src":"14752:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"14752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363032","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14815:3:0","typeDescriptions":{"typeIdentifier":"t_rational_602_by_1","typeString":"int_const 602"},"value":"602"},"visibility":"internal"},{"constant":true,"id":563,"mutability":"constant","name":"AUM_FEE_PERCENTAGE_TOO_HIGH","nodeType":"VariableDeclaration","scope":573,"src":"14824:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363033","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14880:3:0","typeDescriptions":{"typeIdentifier":"t_rational_603_by_1","typeString":"int_const 603"},"value":"603"},"visibility":"internal"},{"constant":true,"id":566,"mutability":"constant","name":"SPLITTER_FEE_PERCENTAGE_TOO_HIGH","nodeType":"VariableDeclaration","scope":573,"src":"14909:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"14909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"373030","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14970:3:0","typeDescriptions":{"typeIdentifier":"t_rational_700_by_1","typeString":"int_const 700"},"value":"700"},"visibility":"internal"},{"constant":true,"id":569,"mutability":"constant","name":"UNIMPLEMENTED","nodeType":"VariableDeclaration","scope":573,"src":"14992:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"14992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"393938","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15034:3:0","typeDescriptions":{"typeIdentifier":"t_rational_998_by_1","typeString":"int_const 998"},"value":"998"},"visibility":"internal"},{"constant":true,"id":572,"mutability":"constant","name":"SHOULD_NOT_HAPPEN","nodeType":"VariableDeclaration","scope":573,"src":"15043:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"15043:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"393939","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15089:3:0","typeDescriptions":{"typeIdentifier":"t_rational_999_by_1","typeString":"int_const 999"},"value":"999"},"visibility":"internal"}],"scope":574,"src":"5072:10023:0"}],"src":"688:14408:0"},"id":0},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","exportedSymbols":{"IAuthentication":[584]},"id":585,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":575,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":584,"linearizedBaseContracts":[584],"name":"IAuthentication","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"753:116:1","text":" @dev Returns the action identifier associated with the external function described by `selector`."},"functionSelector":"851c1bb3","id":583,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"selector","nodeType":"VariableDeclaration","scope":583,"src":"895:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":577,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"894:17:1"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":583,"src":"935:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"934:9:1"},"scope":584,"src":"874:70:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":585,"src":"721:225:1"}],"src":"688:259:1"},"id":1},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol","exportedSymbols":{"IOptionalOnlyCaller":[618]},"id":619,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":586,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"721:178:2","text":" @dev Interface for the OptionalOnlyCaller helper, used to opt in to a caller\n verification for a given address to methods that are otherwise callable by any address."},"fullyImplemented":false,"id":618,"linearizedBaseContracts":[618],"name":"IOptionalOnlyCaller","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"936:72:2","text":" @dev Emitted every time setOnlyCallerCheck is called."},"id":594,"name":"OnlyCallerOptIn","nodeType":"EventDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":594,"src":"1035:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"indexed":false,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":594,"src":"1049:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":591,"name":"bool","nodeType":"ElementaryTypeName","src":"1049:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1034:28:2"},"src":"1013:50:2"},{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"1069:164:2","text":" @dev Enables / disables verification mechanism for caller.\n @param enabled - True if caller verification shall be enabled, false otherwise."},"functionSelector":"e811f44b","id":600,"implemented":false,"kind":"function","modifiers":[],"name":"setOnlyCallerCheck","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":600,"src":"1266:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":596,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:14:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"1288:0:2"},"scope":618,"src":"1238:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fcaa54ee","id":609,"implemented":false,"kind":"function","modifiers":[],"name":"setOnlyCallerCheckWithSignature","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":609,"src":"1345:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":609,"src":"1367:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":603,"name":"bool","nodeType":"ElementaryTypeName","src":"1367:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":609,"src":"1389:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":605,"name":"bytes","nodeType":"ElementaryTypeName","src":"1389:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1335:82:2"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"1426:0:2"},"scope":618,"src":"1295:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"1433:107:2","text":" @dev Returns true if caller verification is enabled for the given user, false otherwise."},"functionSelector":"a1648aa5","id":617,"implemented":false,"kind":"function","modifiers":[],"name":"isOnlyCallerEnabled","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":617,"src":"1574:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"1574:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1573:14:2"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":617,"src":"1611:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"1611:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1610:6:2"},"scope":618,"src":"1545:72:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":619,"src":"900:719:2"}],"src":"688:932:2"},"id":2},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","exportedSymbols":{"ISignaturesValidator":[636]},"id":637,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":620,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"721:95:3","text":" @dev Interface for the SignatureValidator helper, used to support meta-transactions."},"fullyImplemented":false,"id":636,"linearizedBaseContracts":[636],"name":"ISignaturesValidator","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"854:60:3","text":" @dev Returns the EIP712 domain separator."},"functionSelector":"ed24911d","id":627,"implemented":false,"kind":"function","modifiers":[],"name":"getDomainSeparator","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"946:2:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":627,"src":"972:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"971:9:3"},"scope":636,"src":"919:62:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"987:83:3","text":" @dev Returns the next nonce used by an address to sign messages."},"functionSelector":"90193b7c","id":635,"implemented":false,"kind":"function","modifiers":[],"name":"getNextNonce","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":635,"src":"1097:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1096:14:3"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":635,"src":"1134:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:3"},"scope":636,"src":"1075:68:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":637,"src":"817:328:3"}],"src":"688:458:3"},"id":3},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","exportedSymbols":{"ITemporarilyPausable":[655]},"id":656,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":638,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"721:61:4","text":" @dev Interface for the TemporarilyPausable helper."},"fullyImplemented":false,"id":655,"linearizedBaseContracts":[655],"name":"ITemporarilyPausable","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"820:83:4","text":" @dev Emitted every time the pause state changes by `_setPaused`."},"id":644,"name":"PausedStateChanged","nodeType":"EventDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"indexed":false,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":644,"src":"933:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":641,"name":"bool","nodeType":"ElementaryTypeName","src":"933:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"932:13:4"},"src":"908:38:4"},{"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"952:57:4","text":" @dev Returns the current paused state."},"functionSelector":"1c0de051","id":654,"implemented":false,"kind":"function","modifiers":[],"name":"getPausedState","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"1037:2:4"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":654,"src":"1100:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"pauseWindowEndTime","nodeType":"VariableDeclaration","scope":654,"src":"1125:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"bufferPeriodEndTime","nodeType":"VariableDeclaration","scope":654,"src":"1165:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1086:116:4"},"scope":655,"src":"1014:189:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":656,"src":"783:422:4"}],"src":"688:518:4"},"id":4},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","exportedSymbols":{"IWETH":[670]},"id":671,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":657,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:5"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../openzeppelin/IERC20.sol","id":658,"nodeType":"ImportDirective","scope":671,"sourceUnit":763,"src":"721:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":660,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"929:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":661,"nodeType":"InheritanceSpecifier","src":"929:6:5"}],"contractDependencies":[762],"contractKind":"interface","documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"759:150:5","text":" @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":670,"linearizedBaseContracts":[670,762],"name":"IWETH","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":664,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"958:2:5"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"977:0:5"},"scope":670,"src":"942:36:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":669,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":669,"src":"1002:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:16:5"},"returnParameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1026:0:5"},"scope":670,"src":"984:43:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":671,"src":"910:119:5"}],"src":"688:342:5"},"id":5},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol","exportedSymbols":{"IERC1271":[684]},"id":685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":672,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"92:31:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"125:189:6","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":684,"linearizedBaseContracts":[684],"name":"IERC1271","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"340:220:6","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":683,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":683,"src":"591:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"591:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":683,"src":"605:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":677,"name":"bytes","nodeType":"ElementaryTypeName","src":"605:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"590:38:6"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"magicValue","nodeType":"VariableDeclaration","scope":683,"src":"652:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":680,"name":"bytes4","nodeType":"ElementaryTypeName","src":"652:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"651:19:6"},"scope":684,"src":"565:106:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":685,"src":"315:358:6"}],"src":"92:582:6"},"id":6},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","exportedSymbols":{"IERC20":[762]},"id":763,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":686,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"66:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":762,"linearizedBaseContracts":[762],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"160:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"251:2:7"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":693,"src":"277:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:7"},"scope":762,"src":"231:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"292:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":701,"src":"388:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:7"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":701,"src":"428:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:7"},"scope":762,"src":"369:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"443:209:7","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":711,"src":"675:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":711,"src":"694:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:7"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":711,"src":"728:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":708,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:7"},"scope":762,"src":"657:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"740:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":721,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":721,"src":"1028:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":721,"src":"1043:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:7"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":721,"src":"1083:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:7"},"scope":762,"src":"1009:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1098:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":731,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":731,"src":"1762:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":731,"src":"1779:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:7"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":731,"src":"1813:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":728,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:7"},"scope":762,"src":"1745:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1825:296:7","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":743,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":743,"src":"2157:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":743,"src":"2181:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":743,"src":"2208:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:81:7"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":743,"src":"2247:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":740,"name":"bool","nodeType":"ElementaryTypeName","src":"2247:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2246:6:7"},"scope":762,"src":"2126:127:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"2259:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":752,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":752,"src":"2437:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":752,"src":"2459:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":752,"src":"2479:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2436:57:7"},"src":"2422:72:7"},{"anonymous":false,"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"2500:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":761,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":761,"src":"2668:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":761,"src":"2691:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":761,"src":"2716:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:63:7"},"src":"2653:78:7"}],"scope":763,"src":"137:2596:7"}],"src":"33:2701:7"},"id":7},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":764,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"66:482:8","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":798,"linearizedBaseContracts":[798],"name":"IERC20Permit","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"578:788:8","text":" @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":783,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":783,"src":"1396:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":783,"src":"1419:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":783,"src":"1444:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":783,"src":"1467:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":783,"src":"1493:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":775,"name":"uint8","nodeType":"ElementaryTypeName","src":"1493:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":783,"src":"1510:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1510:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":783,"src":"1529:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1529:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1386:158:8"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[],"src":"1553:0:8"},"scope":798,"src":"1371:183:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"1560:294:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":791,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":791,"src":"1875:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1874:15:8"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":791,"src":"1913:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1913:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1912:9:8"},"scope":798,"src":"1859:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"1928:128:8","text":" @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."},"functionSelector":"3644e515","id":797,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"2139:2:8"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":797,"src":"2165:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2164:9:8"},"scope":798,"src":"2114:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":799,"src":"549:1627:8"}],"src":"33:2144:8"},"id":8},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","exportedSymbols":{"IAsset":[802]},"id":803,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"721:309:9","text":" @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."},"fullyImplemented":true,"id":802,"linearizedBaseContracts":[802],"name":"IAsset","nodeType":"ContractDefinition","nodes":[],"scope":803,"src":"1031:73:9"}],"src":"688:417:9"},"id":9},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[817]},"id":818,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":817,"linearizedBaseContracts":[817],"name":"IAuthorizer","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"749:121:10","text":" @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."},"functionSelector":"9be2a884","id":816,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":816,"src":"904:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":816,"src":"930:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"where","nodeType":"VariableDeclaration","scope":816,"src":"955:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"894:80:10"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":816,"src":"998:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"997:6:10"},"scope":817,"src":"875:129:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":818,"src":"721:285:10"}],"src":"688:319:10"},"id":10},"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol","exportedSymbols":{"IBasicAuthorizer":[851]},"id":852,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":819,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"686:31:11"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":820,"nodeType":"ImportDirective","scope":852,"sourceUnit":818,"src":"719:27:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":821,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":817,"src":"778:11:11","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"id":822,"nodeType":"InheritanceSpecifier","src":"778:11:11"}],"contractDependencies":[817],"contractKind":"interface","fullyImplemented":false,"id":851,"linearizedBaseContracts":[851,817],"name":"IBasicAuthorizer","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a217fddf","id":827,"implemented":false,"kind":"function","modifiers":[],"name":"DEFAULT_ADMIN_ROLE","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"876:2:11"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":827,"src":"897:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"897:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"896:9:11"},"scope":851,"src":"849:57:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"248a9ca3","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":834,"src":"934:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"933:14:11"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":834,"src":"971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"970:9:11"},"scope":851,"src":"912:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9010d07c","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":843,"src":"1009:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1009:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":843,"src":"1023:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1008:29:11"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":843,"src":"1061:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1060:9:11"},"scope":851,"src":"986:84:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca15c873","id":850,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":850,"src":"1104:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1104:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1103:14:11"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":850,"src":"1141:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1140:9:11"},"scope":851,"src":"1076:74:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":852,"src":"748:404:11"}],"src":"686:467:11"},"id":11},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","exportedSymbols":{"IFlashLoanRecipient":[870]},"id":871,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":853,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:12"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":854,"nodeType":"ImportDirective","scope":871,"sourceUnit":763,"src":"773:51:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":870,"linearizedBaseContracts":[870],"name":"IFlashLoanRecipient","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"862:496:12","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":869,"src":"1398:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":856,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1398:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":857,"nodeType":"ArrayTypeName","src":"1398:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":869,"src":"1430:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":860,"nodeType":"ArrayTypeName","src":"1430:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"feeAmounts","nodeType":"VariableDeclaration","scope":869,"src":"1464:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":863,"nodeType":"ArrayTypeName","src":"1464:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":869,"src":"1501:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":865,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1388:140:12"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"1537:0:12"},"scope":870,"src":"1363:175:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":871,"src":"826:714:12"}],"src":"688:853:12"},"id":12},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","exportedSymbols":{"IProtocolFeesCollector":[935]},"id":936,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":872,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:13"},{"id":873,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"720:33:13"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":874,"nodeType":"ImportDirective","scope":936,"sourceUnit":763,"src":"755:51:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"./IVault.sol","id":875,"nodeType":"ImportDirective","scope":936,"sourceUnit":1401,"src":"808:22:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":876,"nodeType":"ImportDirective","scope":936,"sourceUnit":818,"src":"831:27:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":935,"linearizedBaseContracts":[935],"name":"IProtocolFeesCollector","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":880,"name":"SwapFeePercentageChanged","nodeType":"EventDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"indexed":false,"mutability":"mutable","name":"newSwapFeePercentage","nodeType":"VariableDeclaration","scope":880,"src":"930:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:30:13"},"src":"899:61:13"},{"anonymous":false,"id":884,"name":"FlashLoanFeePercentageChanged","nodeType":"EventDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"indexed":false,"mutability":"mutable","name":"newFlashLoanFeePercentage","nodeType":"VariableDeclaration","scope":884,"src":"1001:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:35:13"},"src":"965:71:13"},{"functionSelector":"6daefab6","id":895,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawCollectedFees","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":895,"src":"1082:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":885,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1082:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":886,"nodeType":"ArrayTypeName","src":"1082:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":895,"src":"1116:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"nodeType":"ArrayTypeName","src":"1116:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":895,"src":"1152:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:103:13"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"1184:0:13"},"scope":935,"src":"1042:143:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38e9922e","id":900,"implemented":false,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"newSwapFeePercentage","nodeType":"VariableDeclaration","scope":900,"src":"1221:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:30:13"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"1259:0:13"},"scope":935,"src":"1191:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b6b9f69","id":905,"implemented":false,"kind":"function","modifiers":[],"name":"setFlashLoanFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"newFlashLoanFeePercentage","nodeType":"VariableDeclaration","scope":905,"src":"1301:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:35:13"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"1344:0:13"},"scope":935,"src":"1266:79:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"55c67628","id":910,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[],"src":"1380:2:13"},"returnParameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":910,"src":"1406:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1405:9:13"},"scope":935,"src":"1351:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d877845c","id":915,"implemented":false,"kind":"function","modifiers":[],"name":"getFlashLoanFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"1455:2:13"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":915,"src":"1481:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:9:13"},"scope":935,"src":"1421:69:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e42abf35","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"getCollectedFeeAmounts","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":924,"src":"1528:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":916,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1528:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":917,"nodeType":"ArrayTypeName","src":"1528:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1527:24:13"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"feeAmounts","nodeType":"VariableDeclaration","scope":924,"src":"1575:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1575:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ArrayTypeName","src":"1575:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1574:29:13"},"scope":935,"src":"1496:108:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaabadc5","id":929,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"1632:2:13"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":929,"src":"1658:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"},"typeName":{"id":926,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":817,"src":"1658:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"1657:13:13"},"scope":935,"src":"1610:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbfa77cf","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"1691:2:13"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":934,"src":"1717:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"},"typeName":{"id":931,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":1400,"src":"1717:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1716:8:13"},"scope":935,"src":"1677:48:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":936,"src":"860:867:13"}],"src":"688:1040:13"},"id":13},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","exportedSymbols":{"IVault":[1400]},"id":1401,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":937,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:14"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":938,"nodeType":"ImportDirective","scope":1401,"sourceUnit":763,"src":"723:51:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"../solidity-utils/helpers/IAuthentication.sol","id":939,"nodeType":"ImportDirective","scope":1401,"sourceUnit":585,"src":"775:55:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","file":"../solidity-utils/helpers/ISignaturesValidator.sol","id":940,"nodeType":"ImportDirective","scope":1401,"sourceUnit":637,"src":"831:60:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","file":"../solidity-utils/helpers/ITemporarilyPausable.sol","id":941,"nodeType":"ImportDirective","scope":1401,"sourceUnit":656,"src":"892:60:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","file":"../solidity-utils/misc/IWETH.sol","id":942,"nodeType":"ImportDirective","scope":1401,"sourceUnit":671,"src":"953:42:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"./IAsset.sol","id":943,"nodeType":"ImportDirective","scope":1401,"sourceUnit":803,"src":"997:22:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":944,"nodeType":"ImportDirective","scope":1401,"sourceUnit":818,"src":"1020:27:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"./IFlashLoanRecipient.sol","id":945,"nodeType":"ImportDirective","scope":1401,"sourceUnit":871,"src":"1048:35:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","file":"./IProtocolFeesCollector.sol","id":946,"nodeType":"ImportDirective","scope":1401,"sourceUnit":936,"src":"1084:38:14","symbolAliases":[],"unitAlias":""},{"id":947,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"1124:31:14"},{"abstract":false,"baseContracts":[{"baseName":{"id":949,"name":"ISignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":636,"src":"1349:20:14","typeDescriptions":{"typeIdentifier":"t_contract$_ISignaturesValidator_$636","typeString":"contract ISignaturesValidator"}},"id":950,"nodeType":"InheritanceSpecifier","src":"1349:20:14"},{"baseName":{"id":951,"name":"ITemporarilyPausable","nodeType":"UserDefinedTypeName","referencedDeclaration":655,"src":"1371:20:14","typeDescriptions":{"typeIdentifier":"t_contract$_ITemporarilyPausable_$655","typeString":"contract ITemporarilyPausable"}},"id":952,"nodeType":"InheritanceSpecifier","src":"1371:20:14"},{"baseName":{"id":953,"name":"IAuthentication","nodeType":"UserDefinedTypeName","referencedDeclaration":584,"src":"1393:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthentication_$584","typeString":"contract IAuthentication"}},"id":954,"nodeType":"InheritanceSpecifier","src":"1393:15:14"}],"contractDependencies":[584,636,655],"contractKind":"interface","documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"1157:171:14","text":" @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."},"fullyImplemented":false,"id":1400,"linearizedBaseContracts":[1400,584,655,636],"name":"IVault","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"2906:55:14","text":" @dev Returns the Vault's Authorizer."},"functionSelector":"aaabadc5","id":960,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"2988:2:14"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":960,"src":"3014:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"},"typeName":{"id":957,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":817,"src":"3014:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3013:13:14"},"scope":1400,"src":"2966:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"3033:175:14","text":" @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."},"functionSelector":"058a628f","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"newAuthorizer","nodeType":"VariableDeclaration","scope":966,"src":"3236:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"},"typeName":{"id":962,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":817,"src":"3236:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3235:27:14"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"3271:0:14"},"scope":1400,"src":"3213:59:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"3278:80:14","text":" @dev Emitted when a new authorizer is set by `setAuthorizer`."},"id":971,"name":"AuthorizerChanged","nodeType":"EventDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nodeType":"VariableDeclaration","scope":971,"src":"3387:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"},"typeName":{"id":968,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":817,"src":"3387:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3386:35:14"},"src":"3363:59:14"},{"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"4518:99:14","text":" @dev Returns true if `user` has approved `relayer` to act as a relayer for them."},"functionSelector":"fec90d72","id":981,"implemented":false,"kind":"function","modifiers":[],"name":"hasApprovedRelayer","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":981,"src":"4650:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"relayer","nodeType":"VariableDeclaration","scope":981,"src":"4664:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4664:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4649:31:14"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":981,"src":"4704:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":978,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4703:6:14"},"scope":1400,"src":"4622:88:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"4716:178:14","text":" @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."},"functionSelector":"fa6e671d","id":991,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayerApproval","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":991,"src":"4936:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"relayer","nodeType":"VariableDeclaration","scope":991,"src":"4960:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":991,"src":"4985:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":987,"name":"bool","nodeType":"ElementaryTypeName","src":"4985:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4926:78:14"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"5013:0:14"},"scope":1400,"src":"4899:115:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"5020:104:14","text":" @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."},"id":1000,"name":"RelayerApprovalChanged","nodeType":"EventDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"indexed":true,"mutability":"mutable","name":"relayer","nodeType":"VariableDeclaration","scope":1000,"src":"5158:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1000,"src":"5183:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"indexed":false,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1000,"src":"5207:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":997,"name":"bool","nodeType":"ElementaryTypeName","src":"5207:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5157:64:14"},"src":"5129:93:14"},{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"5930:78:14","text":" @dev Returns `user`'s Internal Balance for a set of tokens."},"functionSelector":"0f5a6efa","id":1012,"implemented":false,"kind":"function","modifiers":[],"name":"getInternalBalance","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1012,"src":"6041:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"6041:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1012,"src":"6055:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1004,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"6055:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1005,"nodeType":"ArrayTypeName","src":"6055:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"6040:38:14"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1012,"src":"6102:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ArrayTypeName","src":"6102:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6101:18:14"},"scope":1400,"src":"6013:107:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"6126:416:14","text":" @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."},"functionSelector":"0e8e3e84","id":1019,"implemented":false,"kind":"function","modifiers":[],"name":"manageUserBalance","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"ops","nodeType":"VariableDeclaration","scope":1019,"src":"6574:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$1030_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.UserBalanceOp[]"},"typeName":{"baseType":{"id":1014,"name":"UserBalanceOp","nodeType":"UserDefinedTypeName","referencedDeclaration":1030,"src":"6574:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalanceOp_$1030_storage_ptr","typeString":"struct IVault.UserBalanceOp"}},"id":1015,"nodeType":"ArrayTypeName","src":"6574:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$1030_storage_$dyn_storage_ptr","typeString":"struct IVault.UserBalanceOp[]"}},"visibility":"internal"}],"src":"6573:28:14"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"6618:0:14"},"scope":1400,"src":"6547:72:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.UserBalanceOp","id":1030,"members":[{"constant":false,"id":1021,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":1030,"src":"6836:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$1035","typeString":"enum IVault.UserBalanceOpKind"},"typeName":{"id":1020,"name":"UserBalanceOpKind","nodeType":"UserDefinedTypeName","referencedDeclaration":1035,"src":"6836:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$1035","typeString":"enum IVault.UserBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":1030,"src":"6868:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"},"typeName":{"id":1022,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"6868:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1030,"src":"6890:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1030,"src":"6914:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"6914:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1030,"src":"6938:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"6938:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"UserBalanceOp","nodeType":"StructDefinition","scope":1400,"src":"6805:165:14","visibility":"public"},{"canonicalName":"IVault.UserBalanceOpKind","id":1035,"members":[{"id":1031,"name":"DEPOSIT_INTERNAL","nodeType":"EnumValue","src":"8608:16:14"},{"id":1032,"name":"WITHDRAW_INTERNAL","nodeType":"EnumValue","src":"8626:17:14"},{"id":1033,"name":"TRANSFER_INTERNAL","nodeType":"EnumValue","src":"8645:17:14"},{"id":1034,"name":"TRANSFER_EXTERNAL","nodeType":"EnumValue","src":"8664:17:14"}],"name":"UserBalanceOpKind","nodeType":"EnumDefinition","src":"8583:100:14"},{"anonymous":false,"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"8689:317:14","text":" @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."},"id":1044,"name":"InternalBalanceChanged","nodeType":"EventDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1044,"src":"9040:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"9040:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1044,"src":"9062:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1039,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"9062:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1042,"indexed":false,"mutability":"mutable","name":"delta","nodeType":"VariableDeclaration","scope":1044,"src":"9084:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1041,"name":"int256","nodeType":"ElementaryTypeName","src":"9084:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9039:58:14"},"src":"9011:87:14"},{"anonymous":false,"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"9104:131:14","text":" @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."},"id":1055,"name":"ExternalBalanceTransfer","nodeType":"EventDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1055,"src":"9270:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1046,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"9270:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1049,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1055,"src":"9292:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9292:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"indexed":false,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1055,"src":"9316:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1055,"src":"9335:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:81:14"},"src":"9240:111:14"},{"canonicalName":"IVault.PoolSpecialization","id":1059,"members":[{"id":1056,"name":"GENERAL","nodeType":"EnumValue","src":"10457:7:14"},{"id":1057,"name":"MINIMAL_SWAP_INFO","nodeType":"EnumValue","src":"10466:17:14"},{"id":1058,"name":"TWO_TOKEN","nodeType":"EnumValue","src":"10485:9:14"}],"name":"PoolSpecialization","nodeType":"EnumDefinition","src":"10431:65:14"},{"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"10502:702:14","text":" @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."},"functionSelector":"09b2760f","id":1067,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"specialization","nodeType":"VariableDeclaration","scope":1067,"src":"11231:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1059","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1061,"name":"PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":1059,"src":"11231:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1059","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11230:35:14"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1067,"src":"11284:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11283:9:14"},"scope":1400,"src":"11209:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"11299:84:14","text":" @dev Emitted when a Pool is registered by calling `registerPool`."},"id":1076,"name":"PoolRegistered","nodeType":"EventDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1076,"src":"11409:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11409:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1072,"indexed":true,"mutability":"mutable","name":"poolAddress","nodeType":"VariableDeclaration","scope":1076,"src":"11433:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"11433:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"indexed":false,"mutability":"mutable","name":"specialization","nodeType":"VariableDeclaration","scope":1076,"src":"11462:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1059","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1073,"name":"PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":1059,"src":"11462:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1059","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11408:88:14"},"src":"11388:109:14"},{"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"11503:85:14","text":" @dev Returns a Pool's contract address and specialization setting."},"functionSelector":"f6c00927","id":1086,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1086,"src":"11610:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11610:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11609:16:14"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1086,"src":"11649:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"11649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1086,"src":"11658:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1059","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1083,"name":"PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":1059,"src":"11658:18:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$1059","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11648:29:14"},"scope":1400,"src":"11593:85:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"11684:1422:14","text":" @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."},"functionSelector":"66a9c7d2","id":1098,"implemented":false,"kind":"function","modifiers":[],"name":"registerTokens","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1098,"src":"13144:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13144:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1098,"src":"13168:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1090,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"13168:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1091,"nodeType":"ArrayTypeName","src":"13168:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"assetManagers","nodeType":"VariableDeclaration","scope":1098,"src":"13200:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"13200:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1094,"nodeType":"ArrayTypeName","src":"13200:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13134:102:14"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"13245:0:14"},"scope":1400,"src":"13111:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"13252:89:14","text":" @dev Emitted when a Pool registers tokens by calling `registerTokens`."},"id":1109,"name":"TokensRegistered","nodeType":"EventDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1109,"src":"13369:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13369:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1104,"indexed":false,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1109,"src":"13393:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1102,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"13393:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1103,"nodeType":"ArrayTypeName","src":"13393:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1107,"indexed":false,"mutability":"mutable","name":"assetManagers","nodeType":"VariableDeclaration","scope":1109,"src":"13410:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"13410:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1106,"nodeType":"ArrayTypeName","src":"13410:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13368:66:14"},"src":"13346:89:14"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"13441:567:14","text":" @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."},"functionSelector":"7d3aeb96","id":1118,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterTokens","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1118,"src":"14039:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14039:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1118,"src":"14055:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1113,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"14055:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1114,"nodeType":"ArrayTypeName","src":"14055:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14038:40:14"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"14087:0:14"},"scope":1400,"src":"14013:75:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"14094:93:14","text":" @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."},"id":1126,"name":"TokensDeregistered","nodeType":"EventDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1126,"src":"14217:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14217:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1124,"indexed":false,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1126,"src":"14241:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1122,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"14241:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1123,"nodeType":"ArrayTypeName","src":"14241:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14216:41:14"},"src":"14192:66:14"},{"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"14264:1043:14","text":" @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."},"functionSelector":"b05f8e48","id":1142,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1142,"src":"15338:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15338:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1142,"src":"15354:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1130,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"15354:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"15337:30:14"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"cash","nodeType":"VariableDeclaration","scope":1142,"src":"15428:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"15428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"managed","nodeType":"VariableDeclaration","scope":1142,"src":"15454:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"15454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":1142,"src":"15483:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"15483:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"assetManager","nodeType":"VariableDeclaration","scope":1142,"src":"15520:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"15520:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15414:136:14"},"scope":1400,"src":"15312:239:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"15557:828:14","text":" @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."},"functionSelector":"f94d4668","id":1156,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1156,"src":"16413:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16412:16:14"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1156,"src":"16489:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1147,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1148,"nodeType":"ArrayTypeName","src":"16489:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":1156,"src":"16525:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"16525:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ArrayTypeName","src":"16525:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":1156,"src":"16564:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16564:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16475:122:14"},"scope":1400,"src":"16390:208:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"16604:2304:14","text":" @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"b95cac28","id":1168,"implemented":false,"kind":"function","modifiers":[],"name":"joinPool","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1168,"src":"18940:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18940:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1168,"src":"18964:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"18964:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1168,"src":"18988:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"18988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":1168,"src":"19015:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$1179_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":1164,"name":"JoinPoolRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":1179,"src":"19015:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$1179_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"src":"18930:121:14"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"19068:0:14"},"scope":1400,"src":"18913:156:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.JoinPoolRequest","id":1179,"members":[{"constant":false,"id":1171,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1179,"src":"19108:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1169,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"19108:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"id":1170,"nodeType":"ArrayTypeName","src":"19108:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"maxAmountsIn","nodeType":"VariableDeclaration","scope":1179,"src":"19133:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"19133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ArrayTypeName","src":"19133:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":1179,"src":"19165:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"19165:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"fromInternalBalance","nodeType":"VariableDeclaration","scope":1179,"src":"19189:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"19189:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"JoinPoolRequest","nodeType":"StructDefinition","scope":1400,"src":"19075:145:14","visibility":"public"},{"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"19226:2489:14","text":" @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"8bdb3913","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"exitPool","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1191,"src":"21747:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1191,"src":"21771:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"21771:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1191,"src":"21795:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"21795:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":1191,"src":"21830:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$1202_memory_ptr","typeString":"struct IVault.ExitPoolRequest"},"typeName":{"id":1187,"name":"ExitPoolRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":1202,"src":"21830:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$1202_storage_ptr","typeString":"struct IVault.ExitPoolRequest"}},"visibility":"internal"}],"src":"21737:129:14"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"21875:0:14"},"scope":1400,"src":"21720:156:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.ExitPoolRequest","id":1202,"members":[{"constant":false,"id":1194,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1202,"src":"21915:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1192,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"21915:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"id":1193,"nodeType":"ArrayTypeName","src":"21915:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"minAmountsOut","nodeType":"VariableDeclaration","scope":1202,"src":"21940:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"21940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1196,"nodeType":"ArrayTypeName","src":"21940:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":1202,"src":"21973:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1198,"name":"bytes","nodeType":"ElementaryTypeName","src":"21973:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"toInternalBalance","nodeType":"VariableDeclaration","scope":1202,"src":"21997:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"21997:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExitPoolRequest","nodeType":"StructDefinition","scope":1400,"src":"21882:144:14","visibility":"public"},{"anonymous":false,"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"22032:116:14","text":" @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."},"id":1218,"name":"PoolBalanceChanged","nodeType":"EventDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1218,"src":"22187:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22187:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1207,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nodeType":"VariableDeclaration","scope":1218,"src":"22219:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"22219:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1210,"indexed":false,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1218,"src":"22262:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1208,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"22262:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1209,"nodeType":"ArrayTypeName","src":"22262:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":false,"mutability":"mutable","name":"deltas","nodeType":"VariableDeclaration","scope":1218,"src":"22287:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1211,"name":"int256","nodeType":"ElementaryTypeName","src":"22287:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1212,"nodeType":"ArrayTypeName","src":"22287:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":1216,"indexed":false,"mutability":"mutable","name":"protocolFeeAmounts","nodeType":"VariableDeclaration","scope":1218,"src":"22312:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"22312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ArrayTypeName","src":"22312:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22177:169:14"},"src":"22153:194:14"},{"canonicalName":"IVault.PoolBalanceChangeKind","id":1221,"members":[{"id":1219,"name":"JOIN","nodeType":"EnumValue","src":"22382:4:14"},{"id":1220,"name":"EXIT","nodeType":"EnumValue","src":"22388:4:14"}],"name":"PoolBalanceChangeKind","nodeType":"EnumDefinition","src":"22353:41:14"},{"canonicalName":"IVault.SwapKind","id":1224,"members":[{"id":1222,"name":"GIVEN_IN","nodeType":"EnumValue","src":"25995:8:14"},{"id":1223,"name":"GIVEN_OUT","nodeType":"EnumValue","src":"26005:9:14"}],"name":"SwapKind","nodeType":"EnumDefinition","src":"25979:37:14"},{"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"26022:587:14","text":" @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."},"functionSelector":"52bbbe29","id":1238,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"singleSwap","nodeType":"VariableDeclaration","scope":1238,"src":"26637:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1251_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":1226,"name":"SingleSwap","nodeType":"UserDefinedTypeName","referencedDeclaration":1251,"src":"26637:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$1251_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"funds","nodeType":"VariableDeclaration","scope":1238,"src":"26675:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1306_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":1228,"name":"FundManagement","nodeType":"UserDefinedTypeName","referencedDeclaration":1306,"src":"26675:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1306_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"limit","nodeType":"VariableDeclaration","scope":1238,"src":"26712:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"26712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":1238,"src":"26735:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"26735:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26627:130:14"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1238,"src":"26784:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"26784:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26783:9:14"},"scope":1400,"src":"26614:179:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.SingleSwap","id":1251,"members":[{"constant":false,"id":1240,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1251,"src":"27377:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27377:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":1251,"src":"27401:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1224","typeString":"enum IVault.SwapKind"},"typeName":{"id":1241,"name":"SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":1224,"src":"27401:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1224","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"assetIn","nodeType":"VariableDeclaration","scope":1251,"src":"27424:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"},"typeName":{"id":1243,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"27424:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"assetOut","nodeType":"VariableDeclaration","scope":1251,"src":"27448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"},"typeName":{"id":1245,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"27448:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1251,"src":"27473:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"27473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":1251,"src":"27497:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1249,"name":"bytes","nodeType":"ElementaryTypeName","src":"27497:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nodeType":"StructDefinition","scope":1400,"src":"27349:169:14","visibility":"public"},{"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"27524:1980:14","text":" @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."},"functionSelector":"945bcec9","id":1273,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":1273,"src":"29537:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1224","typeString":"enum IVault.SwapKind"},"typeName":{"id":1253,"name":"SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":1224,"src":"29537:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1224","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"swaps","nodeType":"VariableDeclaration","scope":1273,"src":"29560:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1284_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":1255,"name":"BatchSwapStep","nodeType":"UserDefinedTypeName","referencedDeclaration":1284,"src":"29560:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$1284_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":1256,"nodeType":"ArrayTypeName","src":"29560:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1284_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1273,"src":"29598:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1258,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"29598:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"id":1259,"nodeType":"ArrayTypeName","src":"29598:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"funds","nodeType":"VariableDeclaration","scope":1273,"src":"29630:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1306_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":1261,"name":"FundManagement","nodeType":"UserDefinedTypeName","referencedDeclaration":1306,"src":"29630:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1306_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"limits","nodeType":"VariableDeclaration","scope":1273,"src":"29667:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1263,"name":"int256","nodeType":"ElementaryTypeName","src":"29667:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1264,"nodeType":"ArrayTypeName","src":"29667:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":1273,"src":"29699:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"29699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29527:194:14"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1273,"src":"29748:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1269,"name":"int256","nodeType":"ElementaryTypeName","src":"29748:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1270,"nodeType":"ArrayTypeName","src":"29748:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"29747:17:14"},"scope":1400,"src":"29509:256:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.BatchSwapStep","id":1284,"members":[{"constant":false,"id":1275,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1284,"src":"30358:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30358:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"assetInIndex","nodeType":"VariableDeclaration","scope":1284,"src":"30382:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"30382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"assetOutIndex","nodeType":"VariableDeclaration","scope":1284,"src":"30412:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"30412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1284,"src":"30443:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"30443:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":1284,"src":"30467:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1282,"name":"bytes","nodeType":"ElementaryTypeName","src":"30467:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nodeType":"StructDefinition","scope":1400,"src":"30327:161:14","visibility":"public"},{"anonymous":false,"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"30494:92:14","text":" @dev Emitted for each individual swap performed by `swap` or `batchSwap`."},"id":1297,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1297,"src":"30611:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30611:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1289,"indexed":true,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":1297,"src":"30643:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1288,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"30643:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1291,"indexed":true,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":1297,"src":"30675:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1290,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"30675:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1293,"indexed":false,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":1297,"src":"30708:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"30708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"indexed":false,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":1297,"src":"30734:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"30734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30601:156:14"},"src":"30591:167:14"},{"canonicalName":"IVault.FundManagement","id":1306,"members":[{"constant":false,"id":1299,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1306,"src":"31721:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"31721:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"fromInternalBalance","nodeType":"VariableDeclaration","scope":1306,"src":"31745:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1300,"name":"bool","nodeType":"ElementaryTypeName","src":"31745:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1306,"src":"31779:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"31779:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"toInternalBalance","nodeType":"VariableDeclaration","scope":1306,"src":"31814:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"31814:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nodeType":"StructDefinition","scope":1400,"src":"31689:154:14","visibility":"public"},{"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"31849:1027:14","text":" @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."},"functionSelector":"f84d066e","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"queryBatchSwap","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":1323,"src":"32914:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1224","typeString":"enum IVault.SwapKind"},"typeName":{"id":1308,"name":"SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":1224,"src":"32914:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$1224","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"swaps","nodeType":"VariableDeclaration","scope":1323,"src":"32937:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1284_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":1310,"name":"BatchSwapStep","nodeType":"UserDefinedTypeName","referencedDeclaration":1284,"src":"32937:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$1284_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":1311,"nodeType":"ArrayTypeName","src":"32937:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$1284_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1323,"src":"32975:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1313,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"32975:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"id":1314,"nodeType":"ArrayTypeName","src":"32975:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"funds","nodeType":"VariableDeclaration","scope":1323,"src":"33007:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1306_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":1316,"name":"FundManagement","nodeType":"UserDefinedTypeName","referencedDeclaration":1306,"src":"33007:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$1306_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"src":"32904:136:14"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"assetDeltas","nodeType":"VariableDeclaration","scope":1323,"src":"33059:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":1319,"name":"int256","nodeType":"ElementaryTypeName","src":"33059:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1320,"nodeType":"ArrayTypeName","src":"33059:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33058:29:14"},"scope":1400,"src":"32881:207:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"33114:604:14","text":" @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."},"functionSelector":"5c38449e","id":1337,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1337,"src":"33751:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$870","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":1325,"name":"IFlashLoanRecipient","nodeType":"UserDefinedTypeName","referencedDeclaration":870,"src":"33751:19:14","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$870","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1337,"src":"33790:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1327,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"33790:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1328,"nodeType":"ArrayTypeName","src":"33790:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":1337,"src":"33822:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"33822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1331,"nodeType":"ArrayTypeName","src":"33822:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":1337,"src":"33856:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1333,"name":"bytes","nodeType":"ElementaryTypeName","src":"33856:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33741:142:14"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"33892:0:14"},"scope":1400,"src":"33723:170:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"33899:88:14","text":" @dev Emitted for each individual flash loan performed by `flashLoan`."},"id":1348,"name":"FlashLoan","nodeType":"EventDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1348,"src":"34008:37:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$870","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":1339,"name":"IFlashLoanRecipient","nodeType":"UserDefinedTypeName","referencedDeclaration":870,"src":"34008:19:14","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$870","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":1342,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1348,"src":"34047:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1341,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"34047:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1344,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1348,"src":"34069:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"34069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1346,"indexed":false,"mutability":"mutable","name":"feeAmount","nodeType":"VariableDeclaration","scope":1348,"src":"34085:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"34085:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34007:96:14"},"src":"33992:112:14"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"35100:434:14","text":" @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."},"functionSelector":"e6c46092","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"managePoolBalance","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"ops","nodeType":"VariableDeclaration","scope":1355,"src":"35566:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$1364_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.PoolBalanceOp[]"},"typeName":{"baseType":{"id":1350,"name":"PoolBalanceOp","nodeType":"UserDefinedTypeName","referencedDeclaration":1364,"src":"35566:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_PoolBalanceOp_$1364_storage_ptr","typeString":"struct IVault.PoolBalanceOp"}},"id":1351,"nodeType":"ArrayTypeName","src":"35566:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$1364_storage_$dyn_storage_ptr","typeString":"struct IVault.PoolBalanceOp[]"}},"visibility":"internal"}],"src":"35565:28:14"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"35602:0:14"},"scope":1400,"src":"35539:64:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.PoolBalanceOp","id":1364,"members":[{"constant":false,"id":1357,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":1364,"src":"35640:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$1368","typeString":"enum IVault.PoolBalanceOpKind"},"typeName":{"id":1356,"name":"PoolBalanceOpKind","nodeType":"UserDefinedTypeName","referencedDeclaration":1368,"src":"35640:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$1368","typeString":"enum IVault.PoolBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1364,"src":"35672:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35672:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1364,"src":"35696:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1360,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"35696:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1364,"src":"35718:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"35718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolBalanceOp","nodeType":"StructDefinition","scope":1400,"src":"35609:130:14","visibility":"public"},{"canonicalName":"IVault.PoolBalanceOpKind","id":1368,"members":[{"id":1365,"name":"WITHDRAW","nodeType":"EnumValue","src":"36261:8:14"},{"id":1366,"name":"DEPOSIT","nodeType":"EnumValue","src":"36271:7:14"},{"id":1367,"name":"UPDATE","nodeType":"EnumValue","src":"36280:6:14"}],"name":"PoolBalanceOpKind","nodeType":"EnumDefinition","src":"36236:52:14"},{"anonymous":false,"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"36294:109:14","text":" @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."},"id":1381,"name":"PoolBalanceManaged","nodeType":"EventDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1381,"src":"36442:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36442:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1373,"indexed":true,"mutability":"mutable","name":"assetManager","nodeType":"VariableDeclaration","scope":1381,"src":"36474:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"36474:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1381,"src":"36512:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1374,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"36512:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"cashDelta","nodeType":"VariableDeclaration","scope":1381,"src":"36542:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1376,"name":"int256","nodeType":"ElementaryTypeName","src":"36542:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1379,"indexed":false,"mutability":"mutable","name":"managedDelta","nodeType":"VariableDeclaration","scope":1381,"src":"36568:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1378,"name":"int256","nodeType":"ElementaryTypeName","src":"36568:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36432:161:14"},"src":"36408:186:14"},{"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"37471:64:14","text":" @dev Returns the current protocol fee module."},"functionSelector":"d2946c2b","id":1387,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeesCollector","nodeType":"FunctionDefinition","parameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"37573:2:14"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1387,"src":"37599:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$935","typeString":"contract IProtocolFeesCollector"},"typeName":{"id":1384,"name":"IProtocolFeesCollector","nodeType":"UserDefinedTypeName","referencedDeclaration":935,"src":"37599:22:14","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$935","typeString":"contract IProtocolFeesCollector"}},"visibility":"internal"}],"src":"37598:24:14"},"scope":1400,"src":"37540:83:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"37629:635:14","text":" @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."},"functionSelector":"16c38b3c","id":1393,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":1393,"src":"38288:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1389,"name":"bool","nodeType":"ElementaryTypeName","src":"38288:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38287:13:14"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"38309:0:14"},"scope":1400,"src":"38269:41:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"38316:58:14","text":" @dev Returns the Vault's WETH instance."},"functionSelector":"ad5c4648","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"38392:2:14"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1399,"src":"38418:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$670","typeString":"contract IWETH"},"typeName":{"id":1396,"name":"IWETH","nodeType":"UserDefinedTypeName","referencedDeclaration":670,"src":"38418:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$670","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"38417:7:14"},"scope":1400,"src":"38379:46:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1401,"src":"1329:37155:14"}],"src":"688:37797:14"},"id":14},"contracts/custom/CustomToken.sol":{"ast":{"absolutePath":"contracts/custom/CustomToken.sol","exportedSymbols":{"CustomToken":[1426]},"id":1427,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1402,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"46:23:15"},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":1403,"nodeType":"ImportDirective","scope":1427,"sourceUnit":6448,"src":"71:35:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1404,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"132:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":1405,"nodeType":"InheritanceSpecifier","src":"132:5:15"}],"contractDependencies":[762,6447],"contractKind":"contract","fullyImplemented":true,"id":1426,"linearizedBaseContracts":[1426,6447,762],"name":"CustomToken","nodeType":"ContractDefinition","nodes":[{"body":{"id":1424,"nodeType":"Block","src":"238:47:15","statements":[{"expression":{"arguments":[{"expression":{"id":1419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"254:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"254:10:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1421,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"266:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1418,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"248:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"248:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"248:30:15"}]},"id":1425,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1414,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"224:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1415,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"230:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1416,"modifierName":{"id":1413,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"218:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"218:19:15"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":1425,"src":"155:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"155:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":1425,"src":"175:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1408,"name":"string","nodeType":"ElementaryTypeName","src":"175:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"totalSupply","nodeType":"VariableDeclaration","scope":1425,"src":"197:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"154:63:15"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"238:0:15"},"scope":1426,"src":"143:142:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1427,"src":"108:179:15"}],"src":"46:241:15"},"id":15},"contracts/helpers/Authentication.sol":{"ast":{"absolutePath":"contracts/helpers/Authentication.sol","exportedSymbols":{"Authentication":[1503]},"id":1504,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1428,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:16"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":1429,"nodeType":"ImportDirective","scope":1504,"sourceUnit":574,"src":"713:90:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","id":1430,"nodeType":"ImportDirective","scope":1504,"sourceUnit":585,"src":"804:91:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1432,"name":"IAuthentication","nodeType":"UserDefinedTypeName","referencedDeclaration":584,"src":"1327:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthentication_$584","typeString":"contract IAuthentication"}},"id":1433,"nodeType":"InheritanceSpecifier","src":"1327:15:16"}],"contractDependencies":[584],"contractKind":"contract","documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"897:393:16","text":" @dev Building block for performing access control on external functions.\n This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied\n to external functions to only make them callable by authorized accounts.\n Derived contracts must implement the `_canPerform` function, which holds the actual access control logic."},"fullyImplemented":false,"id":1503,"linearizedBaseContracts":[1503,584],"name":"Authentication","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1435,"mutability":"immutable","name":"_actionIdDisambiguator","nodeType":"VariableDeclaration","scope":1503,"src":"1349:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1349:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1445,"nodeType":"Block","src":"2039:63:16","statements":[{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1441,"name":"_actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2049:22:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1442,"name":"actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2074:21:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2049:46:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1444,"nodeType":"ExpressionStatement","src":"2049:46:16"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"1404:587:16","text":" @dev The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in\n multi contract systems.\n There are two main uses for it:\n  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers\n    unique. The contract's own address is a good option.\n  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier\n    shared by the entire family (and no other contract) should be used instead."},"id":1446,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"actionIdDisambiguator","nodeType":"VariableDeclaration","scope":1446,"src":"2008:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2007:31:16"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"2039:0:16"},"scope":1503,"src":"1996:106:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1453,"nodeType":"Block","src":"2266:49:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1449,"name":"_authenticateCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2276:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2276:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"2276:21:16"},{"id":1452,"nodeType":"PlaceholderStatement","src":"2307:1:16"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"2108:129:16","text":" @dev Reverts unless the caller is allowed to call this function. Should only be applied to external functions."},"id":1454,"name":"authenticate","nodeType":"ModifierDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[],"src":"2263:2:16"},"src":"2242:73:16","virtual":false,"visibility":"internal"},{"body":{"id":1475,"nodeType":"Block","src":"2465:136:16","statements":[{"assignments":[1459],"declarations":[{"constant":false,"id":1459,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":1475,"src":"2475:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2475:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1464,"initialValue":{"arguments":[{"expression":{"id":1461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2506:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"2506:7:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1460,"name":"getActionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"2494:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bytes32_$","typeString":"function (bytes4) view returns (bytes32)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2494:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2475:39:16"},{"expression":{"arguments":[{"arguments":[{"id":1467,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"2545:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2555:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2555:10:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1466,"name":"_canPerform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2533:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2533:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1471,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2568:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SENDER_NOT_ALLOWED","nodeType":"MemberAccess","referencedDeclaration":335,"src":"2568:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1465,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2524:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"ExpressionStatement","src":"2524:70:16"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"2321:94:16","text":" @dev Reverts unless the caller is allowed to call the entry point function."},"id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"_authenticateCaller","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"2448:2:16"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"2465:0:16"},"scope":1503,"src":"2420:181:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[583],"body":{"id":1492,"nodeType":"Block","src":"2684:353:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":1487,"name":"_actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2996:22:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1488,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3020:8:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1485,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2979:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2979:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2979:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1484,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2969:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2969:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1483,"id":1491,"nodeType":"Return","src":"2962:68:16"}]},"functionSelector":"851c1bb3","id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"getActionId","nodeType":"FunctionDefinition","overrides":{"id":1480,"nodeType":"OverrideSpecifier","overrides":[],"src":"2657:8:16"},"parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"selector","nodeType":"VariableDeclaration","scope":1493,"src":"2628:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1477,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2628:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2627:17:16"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1493,"src":"2675:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2675:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2674:9:16"},"scope":1503,"src":"2607:430:16","stateMutability":"view","virtual":false,"visibility":"public"},{"id":1502,"implemented":false,"kind":"function","modifiers":[],"name":"_canPerform","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":1502,"src":"3064:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3064:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":1502,"src":"3082:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"3082:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3063:32:16"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1502,"src":"3127:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1499,"name":"bool","nodeType":"ElementaryTypeName","src":"3127:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3126:6:16"},"scope":1503,"src":"3043:90:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1504,"src":"1291:1844:16"}],"src":"688:2448:16"},"id":16},"contracts/helpers/BaseSplitCodeFactory.sol":{"ast":{"absolutePath":"contracts/helpers/BaseSplitCodeFactory.sol","exportedSymbols":{"BaseSplitCodeFactory":[1737]},"id":1738,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1505,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:17"},{"id":1506,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"712:33:17"},{"absolutePath":"contracts/helpers/CodeDeployer.sol","file":"./CodeDeployer.sol","id":1507,"nodeType":"ImportDirective","scope":1738,"sourceUnit":1779,"src":"747:28:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"777:294:17","text":" @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\n the contract's creation code grows close to 24kB.\n Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB."},"fullyImplemented":true,"id":1737,"linearizedBaseContracts":[1737],"name":"BaseSplitCodeFactory","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1510,"mutability":"immutable","name":"_creationCodeContractA","nodeType":"VariableDeclaration","scope":1737,"src":"1529:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1512,"mutability":"immutable","name":"_creationCodeSizeA","nodeType":"VariableDeclaration","scope":1737,"src":"1583:44:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1514,"mutability":"immutable","name":"_creationCodeContractB","nodeType":"VariableDeclaration","scope":1737,"src":"1634:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"1634:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":1516,"mutability":"immutable","name":"_creationCodeSizeB","nodeType":"VariableDeclaration","scope":1737,"src":"1688:44:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1583,"nodeType":"Block","src":"1905:3308:17","statements":[{"assignments":[1523],"declarations":[{"constant":false,"id":1523,"mutability":"mutable","name":"creationCodeSize","nodeType":"VariableDeclaration","scope":1583,"src":"1915:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1526,"initialValue":{"expression":{"id":1524,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1942:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1942:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1915:46:17"},{"assignments":[1528],"declarations":[{"constant":false,"id":1528,"mutability":"mutable","name":"creationCodeSizeA","nodeType":"VariableDeclaration","scope":1583,"src":"2289:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2289:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1532,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"creationCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2317:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2336:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2317:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2289:48:17"},{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1533,"name":"_creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2347:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1534,"name":"creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2368:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2347:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"2347:38:17"},{"assignments":[1538],"declarations":[{"constant":false,"id":1538,"mutability":"mutable","name":"creationCodeSizeB","nodeType":"VariableDeclaration","scope":1583,"src":"2396:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2396:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1542,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"creationCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2424:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1540,"name":"creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2443:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2424:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2396:64:17"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1543,"name":"_creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2470:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1544,"name":"creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"2491:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2470:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"2470:38:17"},{"assignments":[1548],"declarations":[{"constant":false,"id":1548,"mutability":"mutable","name":"creationCodeA","nodeType":"VariableDeclaration","scope":1583,"src":"3071:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1547,"name":"bytes","nodeType":"ElementaryTypeName","src":"3071:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1549,"nodeType":"VariableDeclarationStatement","src":"3071:26:17"},{"AST":{"nodeType":"YulBlock","src":"3116:106:17","statements":[{"nodeType":"YulAssignment","src":"3130:29:17","value":{"name":"creationCode","nodeType":"YulIdentifier","src":"3147:12:17"},"variableNames":[{"name":"creationCodeA","nodeType":"YulIdentifier","src":"3130:13:17"}]},{"expression":{"arguments":[{"name":"creationCodeA","nodeType":"YulIdentifier","src":"3179:13:17"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"3194:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:17"},"nodeType":"YulFunctionCall","src":"3172:40:17"},"nodeType":"YulExpressionStatement","src":"3172:40:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1519,"isOffset":false,"isSlot":false,"src":"3147:12:17","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"3130:13:17","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"3179:13:17","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"3194:17:17","valueSize":1}],"id":1550,"nodeType":"InlineAssembly","src":"3107:115:17"},{"assignments":[1552],"declarations":[{"constant":false,"id":1552,"mutability":"mutable","name":"preventExecution","nodeType":"VariableDeclaration","scope":1583,"src":"3566:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1551,"name":"bool","nodeType":"ElementaryTypeName","src":"3566:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1554,"initialValue":{"hexValue":"66616c7365","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"3566:29:17"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"_creationCodeContractA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"3606:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1558,"name":"creationCodeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"3651:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1559,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"3666:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1556,"name":"CodeDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"3631:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDeployer_$1778_$","typeString":"type(library CodeDeployer)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"3631:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_address_$","typeString":"function (bytes memory,bool) returns (address)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3631:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3606:77:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1562,"nodeType":"ExpressionStatement","src":"3606:77:17"},{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"creationCodeB","nodeType":"VariableDeclaration","scope":1583,"src":"3971:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1563,"name":"bytes","nodeType":"ElementaryTypeName","src":"3971:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1565,"nodeType":"VariableDeclarationStatement","src":"3971:26:17"},{"assignments":[1567],"declarations":[{"constant":false,"id":1567,"mutability":"mutable","name":"lastByteA","nodeType":"VariableDeclaration","scope":1583,"src":"4007:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4007:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1568,"nodeType":"VariableDeclarationStatement","src":"4007:17:17"},{"AST":{"nodeType":"YulBlock","src":"4044:323:17","statements":[{"nodeType":"YulAssignment","src":"4205:53:17","value":{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"4226:12:17"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"4240:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4222:3:17"},"nodeType":"YulFunctionCall","src":"4222:36:17"},"variableNames":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"4205:13:17"}]},{"nodeType":"YulAssignment","src":"4271:33:17","value":{"arguments":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"4290:13:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4284:5:17"},"nodeType":"YulFunctionCall","src":"4284:20:17"},"variableNames":[{"name":"lastByteA","nodeType":"YulIdentifier","src":"4271:9:17"}]},{"expression":{"arguments":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"4324:13:17"},{"name":"creationCodeSizeB","nodeType":"YulIdentifier","src":"4339:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4317:6:17"},"nodeType":"YulFunctionCall","src":"4317:40:17"},"nodeType":"YulExpressionStatement","src":"4317:40:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1519,"isOffset":false,"isSlot":false,"src":"4226:12:17","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"4205:13:17","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"4290:13:17","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"4324:13:17","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"4240:17:17","valueSize":1},{"declaration":1538,"isOffset":false,"isSlot":false,"src":"4339:17:17","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"4271:9:17","valueSize":1}],"id":1569,"nodeType":"InlineAssembly","src":"4035:332:17"},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1570,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4848:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4867:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4848:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"ExpressionStatement","src":"4848:23:17"},{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1574,"name":"_creationCodeContractB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"4881:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1577,"name":"creationCodeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"4926:13:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1578,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4941:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1575,"name":"CodeDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"4906:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDeployer_$1778_$","typeString":"type(library CodeDeployer)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"4906:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_address_$","typeString":"function (bytes memory,bool) returns (address)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4906:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4881:77:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1581,"nodeType":"ExpressionStatement","src":"4881:77:17"},{"AST":{"nodeType":"YulBlock","src":"5099:108:17","statements":[{"expression":{"arguments":[{"name":"creationCodeA","nodeType":"YulIdentifier","src":"5120:13:17"},{"name":"creationCodeSize","nodeType":"YulIdentifier","src":"5135:16:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5113:6:17"},"nodeType":"YulFunctionCall","src":"5113:39:17"},"nodeType":"YulExpressionStatement","src":"5113:39:17"},{"expression":{"arguments":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"5172:13:17"},{"name":"lastByteA","nodeType":"YulIdentifier","src":"5187:9:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5165:6:17"},"nodeType":"YulFunctionCall","src":"5165:32:17"},"nodeType":"YulExpressionStatement","src":"5165:32:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1548,"isOffset":false,"isSlot":false,"src":"5120:13:17","valueSize":1},{"declaration":1564,"isOffset":false,"isSlot":false,"src":"5172:13:17","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"5135:16:17","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"5187:9:17","valueSize":1}],"id":1582,"nodeType":"InlineAssembly","src":"5090:117:17"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"1739:122:17","text":" @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`."},"id":1584,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"creationCode","nodeType":"VariableDeclaration","scope":1584,"src":"1878:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1877:27:17"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"1905:0:17"},"scope":1737,"src":"1866:3347:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"5442:72:17","statements":[{"expression":{"components":[{"id":1592,"name":"_creationCodeContractA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"5460:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1593,"name":"_creationCodeContractB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"5484:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5459:48:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"functionReturnParameters":1591,"id":1595,"nodeType":"Return","src":"5452:55:17"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"5219:123:17","text":" @dev Returns the two addresses where the creation code of the contract crated by this factory is stored."},"functionSelector":"174481fa","id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"getCreationCodeContracts","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"5380:2:17"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"contractA","nodeType":"VariableDeclaration","scope":1597,"src":"5404:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"5404:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"contractB","nodeType":"VariableDeclaration","scope":1597,"src":"5423:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"5423:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5403:38:17"},"scope":1737,"src":"5347:167:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1607,"nodeType":"Block","src":"5674:52:17","statements":[{"expression":{"arguments":[{"hexValue":"","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5716:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1603,"name":"_getCreationCodeWithArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"5691:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bytes memory)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5691:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1602,"id":1606,"nodeType":"Return","src":"5684:35:17"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"5520:87:17","text":" @dev Returns the creation code of the contract this factory creates."},"functionSelector":"00c194db","id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"getCreationCode","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"5636:2:17"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1608,"src":"5660:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"5660:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5659:14:17"},"scope":1737,"src":"5612:114:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1663,"nodeType":"Block","src":"5961:2672:17","statements":[{"assignments":[1617],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"creationCodeContractA","nodeType":"VariableDeclaration","scope":1663,"src":"6772:29:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1619,"initialValue":{"id":1618,"name":"_creationCodeContractA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6804:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6772:54:17"},{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"mutability":"mutable","name":"creationCodeSizeA","nodeType":"VariableDeclaration","scope":1663,"src":"6836:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1623,"initialValue":{"id":1622,"name":"_creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"6864:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6836:46:17"},{"assignments":[1625],"declarations":[{"constant":false,"id":1625,"mutability":"mutable","name":"creationCodeContractB","nodeType":"VariableDeclaration","scope":1663,"src":"6892:29:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1627,"initialValue":{"id":1626,"name":"_creationCodeContractB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"6924:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6892:54:17"},{"assignments":[1629],"declarations":[{"constant":false,"id":1629,"mutability":"mutable","name":"creationCodeSizeB","nodeType":"VariableDeclaration","scope":1663,"src":"6956:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"6956:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1631,"initialValue":{"id":1630,"name":"_creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"6984:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6956:46:17"},{"assignments":[1633],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"creationCodeSize","nodeType":"VariableDeclaration","scope":1663,"src":"7013:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"7013:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1634,"name":"creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"7040:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1635,"name":"creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"7060:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7040:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7013:64:17"},{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"constructorArgsSize","nodeType":"VariableDeclaration","scope":1663,"src":"7087:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"7087:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1642,"initialValue":{"expression":{"id":1640,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7117:15:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7117:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7087:52:17"},{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"codeSize","nodeType":"VariableDeclaration","scope":1663,"src":"7150:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1648,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"creationCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"7169:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1646,"name":"constructorArgsSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7188:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7169:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7150:57:17"},{"AST":{"nodeType":"YulBlock","src":"7227:835:17","statements":[{"nodeType":"YulAssignment","src":"7477:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7491:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7485:5:17"},"nodeType":"YulFunctionCall","src":"7485:11:17"},"variableNames":[{"name":"code","nodeType":"YulIdentifier","src":"7477:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7516:4:17","type":"","value":"0x40"},{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"7526:4:17"},{"arguments":[{"name":"codeSize","nodeType":"YulIdentifier","src":"7536:8:17"},{"kind":"number","nodeType":"YulLiteral","src":"7546:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7532:3:17"},"nodeType":"YulFunctionCall","src":"7532:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7522:3:17"},"nodeType":"YulFunctionCall","src":"7522:28:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7509:6:17"},"nodeType":"YulFunctionCall","src":"7509:42:17"},"nodeType":"YulExpressionStatement","src":"7509:42:17"},{"expression":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"7651:4:17"},{"name":"codeSize","nodeType":"YulIdentifier","src":"7657:8:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7644:6:17"},"nodeType":"YulFunctionCall","src":"7644:22:17"},"nodeType":"YulExpressionStatement","src":"7644:22:17"},{"nodeType":"YulVariableDeclaration","src":"7753:30:17","value":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"7774:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"7780:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7770:3:17"},"nodeType":"YulFunctionCall","src":"7770:13:17"},"variables":[{"name":"dataStart","nodeType":"YulTypedName","src":"7757:9:17","type":""}]},{"expression":{"arguments":[{"name":"creationCodeContractA","nodeType":"YulIdentifier","src":"7808:21:17"},{"name":"dataStart","nodeType":"YulIdentifier","src":"7831:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7842:1:17","type":"","value":"0"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"7845:17:17"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"7796:11:17"},"nodeType":"YulFunctionCall","src":"7796:67:17"},"nodeType":"YulExpressionStatement","src":"7796:67:17"},{"expression":{"arguments":[{"name":"creationCodeContractB","nodeType":"YulIdentifier","src":"7973:21:17"},{"arguments":[{"name":"dataStart","nodeType":"YulIdentifier","src":"8000:9:17"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"8011:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7996:3:17"},"nodeType":"YulFunctionCall","src":"7996:33:17"},{"kind":"number","nodeType":"YulLiteral","src":"8031:1:17","type":"","value":"1"},{"name":"creationCodeSizeB","nodeType":"YulIdentifier","src":"8034:17:17"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"7961:11:17"},"nodeType":"YulFunctionCall","src":"7961:91:17"},"nodeType":"YulExpressionStatement","src":"7961:91:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1614,"isOffset":false,"isSlot":false,"src":"7477:4:17","valueSize":1},{"declaration":1614,"isOffset":false,"isSlot":false,"src":"7526:4:17","valueSize":1},{"declaration":1614,"isOffset":false,"isSlot":false,"src":"7651:4:17","valueSize":1},{"declaration":1614,"isOffset":false,"isSlot":false,"src":"7774:4:17","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"7536:8:17","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"7657:8:17","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"7808:21:17","valueSize":1},{"declaration":1625,"isOffset":false,"isSlot":false,"src":"7973:21:17","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":false,"src":"7845:17:17","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":false,"src":"8011:17:17","valueSize":1},{"declaration":1629,"isOffset":false,"isSlot":false,"src":"8034:17:17","valueSize":1}],"id":1649,"nodeType":"InlineAssembly","src":"7218:844:17"},{"assignments":[1651],"declarations":[{"constant":false,"id":1651,"mutability":"mutable","name":"constructorArgsDataPtr","nodeType":"VariableDeclaration","scope":1663,"src":"8290:30:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8290:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1652,"nodeType":"VariableDeclarationStatement","src":"8290:30:17"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"constructorArgsCodeDataPtr","nodeType":"VariableDeclaration","scope":1663,"src":"8330:34:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"8330:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"nodeType":"VariableDeclarationStatement","src":"8330:34:17"},{"AST":{"nodeType":"YulBlock","src":"8383:153:17","statements":[{"nodeType":"YulAssignment","src":"8397:50:17","value":{"arguments":[{"name":"constructorArgs","nodeType":"YulIdentifier","src":"8427:15:17"},{"kind":"number","nodeType":"YulLiteral","src":"8444:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8423:3:17"},"nodeType":"YulFunctionCall","src":"8423:24:17"},"variableNames":[{"name":"constructorArgsDataPtr","nodeType":"YulIdentifier","src":"8397:22:17"}]},{"nodeType":"YulAssignment","src":"8460:66:17","value":{"arguments":[{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"8498:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8504:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8494:3:17"},"nodeType":"YulFunctionCall","src":"8494:13:17"},{"name":"creationCodeSize","nodeType":"YulIdentifier","src":"8509:16:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:17"},"nodeType":"YulFunctionCall","src":"8490:36:17"},"variableNames":[{"name":"constructorArgsCodeDataPtr","nodeType":"YulIdentifier","src":"8460:26:17"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1614,"isOffset":false,"isSlot":false,"src":"8498:4:17","valueSize":1},{"declaration":1611,"isOffset":false,"isSlot":false,"src":"8427:15:17","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"8460:26:17","valueSize":1},{"declaration":1651,"isOffset":false,"isSlot":false,"src":"8397:22:17","valueSize":1},{"declaration":1633,"isOffset":false,"isSlot":false,"src":"8509:16:17","valueSize":1}],"id":1656,"nodeType":"InlineAssembly","src":"8374:162:17"},{"expression":{"arguments":[{"id":1658,"name":"constructorArgsCodeDataPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"8554:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1659,"name":"constructorArgsDataPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"8582:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1660,"name":"constructorArgsSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"8606:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1657,"name":"_memcpy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"8546:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8546:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1662,"nodeType":"ExpressionStatement","src":"8546:80:17"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"5732:119:17","text":" @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`."},"id":1664,"implemented":true,"kind":"function","modifiers":[],"name":"_getCreationCodeWithArgs","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"constructorArgs","nodeType":"VariableDeclaration","scope":1664,"src":"5890:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1610,"name":"bytes","nodeType":"ElementaryTypeName","src":"5890:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5889:30:17"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"code","nodeType":"VariableDeclaration","scope":1664,"src":"5942:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1613,"name":"bytes","nodeType":"ElementaryTypeName","src":"5942:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5941:19:17"},"scope":1737,"src":"5856:2777:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1695,"nodeType":"Block","src":"8970:555:17","statements":[{"assignments":[1675],"declarations":[{"constant":false,"id":1675,"mutability":"mutable","name":"creationCode","nodeType":"VariableDeclaration","scope":1695,"src":"8980:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"8980:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1679,"initialValue":{"arguments":[{"id":1677,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"9033:15:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1676,"name":"_getCreationCodeWithArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"9008:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bytes memory)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8980:69:17"},{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":1695,"src":"9060:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"9060:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1682,"nodeType":"VariableDeclarationStatement","src":"9060:19:17"},{"AST":{"nodeType":"YulBlock","src":"9098:99:17","statements":[{"nodeType":"YulAssignment","src":"9112:75:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9135:1:17","type":"","value":"0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"9142:12:17"},{"kind":"number","nodeType":"YulLiteral","src":"9156:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9138:3:17"},"nodeType":"YulFunctionCall","src":"9138:21:17"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"9167:12:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9161:5:17"},"nodeType":"YulFunctionCall","src":"9161:19:17"},{"name":"salt","nodeType":"YulIdentifier","src":"9182:4:17"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"9127:7:17"},"nodeType":"YulFunctionCall","src":"9127:60:17"},"variableNames":[{"name":"destination","nodeType":"YulIdentifier","src":"9112:11:17"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1675,"isOffset":false,"isSlot":false,"src":"9142:12:17","valueSize":1},{"declaration":1675,"isOffset":false,"isSlot":false,"src":"9167:12:17","valueSize":1},{"declaration":1681,"isOffset":false,"isSlot":false,"src":"9112:11:17","valueSize":1},{"declaration":1669,"isOffset":false,"isSlot":false,"src":"9182:4:17","valueSize":1}],"id":1683,"nodeType":"InlineAssembly","src":"9089:108:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"9211:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9226:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"9226:7:17","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9226:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9211:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1692,"nodeType":"IfStatement","src":"9207:283:17","trueBody":{"id":1691,"nodeType":"Block","src":"9238:252:17","statements":[{"AST":{"nodeType":"YulBlock","src":"9366:114:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9399:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9402:1:17","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9405:14:17"},"nodeType":"YulFunctionCall","src":"9405:16:17"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"9384:14:17"},"nodeType":"YulFunctionCall","src":"9384:38:17"},"nodeType":"YulExpressionStatement","src":"9384:38:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9446:1:17","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9449:14:17"},"nodeType":"YulFunctionCall","src":"9449:16:17"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9439:6:17"},"nodeType":"YulFunctionCall","src":"9439:27:17"},"nodeType":"YulExpressionStatement","src":"9439:27:17"}]},"evmVersion":"istanbul","externalReferences":[],"id":1690,"nodeType":"InlineAssembly","src":"9357:123:17"}]}},{"expression":{"id":1693,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"9507:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1673,"id":1694,"nodeType":"Return","src":"9500:18:17"}]},"documentation":{"id":1665,"nodeType":"StructuredDocumentation","src":"8639:230:17","text":" @dev Deploys a contract with constructor arguments and a user-provided salt, using the create2 opcode.\n To create `constructorArgs`, call `abi.encode()` with the contract's constructor arguments, in order."},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"_create","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"constructorArgs","nodeType":"VariableDeclaration","scope":1696,"src":"8891:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1666,"name":"bytes","nodeType":"ElementaryTypeName","src":"8891:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":1696,"src":"8921:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8921:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8890:44:17"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1696,"src":"8961:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8960:9:17"},"scope":1737,"src":"8874:651:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1735,"nodeType":"Block","src":"9761:490:17","statements":[{"body":{"id":1721,"nodeType":"Block","src":"9850:136:17","statements":[{"AST":{"nodeType":"YulBlock","src":"9873:56:17","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9898:4:17"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9910:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9904:5:17"},"nodeType":"YulFunctionCall","src":"9904:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9891:6:17"},"nodeType":"YulFunctionCall","src":"9891:24:17"},"nodeType":"YulExpressionStatement","src":"9891:24:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1698,"isOffset":false,"isSlot":false,"src":"9898:4:17","valueSize":1},{"declaration":1700,"isOffset":false,"isSlot":false,"src":"9910:3:17","valueSize":1}],"id":1712,"nodeType":"InlineAssembly","src":"9864:65:17"},{"expression":{"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1713,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9942:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9942:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1716,"nodeType":"ExpressionStatement","src":"9942:10:17"},{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1717,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"9966:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9973:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9966:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1720,"nodeType":"ExpressionStatement","src":"9966:9:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"9828:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9835:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9828:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"loopExpression":{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"9839:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9846:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9839:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1711,"nodeType":"ExpressionStatement","src":"9839:9:17"},"nodeType":"ForStatement","src":"9821:165:17"},{"assignments":[1724],"declarations":[{"constant":false,"id":1724,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":1735,"src":"10028:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"10028:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1733,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10043:3:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10049:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1727,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"10054:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10049:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10048:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10043:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10043:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10028:34:17"},{"AST":{"nodeType":"YulBlock","src":"10081:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10095:41:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10120:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10114:5:17"},"nodeType":"YulFunctionCall","src":"10114:10:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"10130:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10126:3:17"},"nodeType":"YulFunctionCall","src":"10126:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10110:3:17"},"nodeType":"YulFunctionCall","src":"10110:26:17"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"10099:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10149:38:17","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10175:4:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10169:5:17"},"nodeType":"YulFunctionCall","src":"10169:11:17"},{"name":"mask","nodeType":"YulIdentifier","src":"10182:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10165:3:17"},"nodeType":"YulFunctionCall","src":"10165:22:17"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"10153:8:17","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10207:4:17"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"10216:8:17"},{"name":"srcpart","nodeType":"YulIdentifier","src":"10226:7:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10213:2:17"},"nodeType":"YulFunctionCall","src":"10213:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10200:6:17"},"nodeType":"YulFunctionCall","src":"10200:35:17"},"nodeType":"YulExpressionStatement","src":"10200:35:17"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1698,"isOffset":false,"isSlot":false,"src":"10175:4:17","valueSize":1},{"declaration":1698,"isOffset":false,"isSlot":false,"src":"10207:4:17","valueSize":1},{"declaration":1724,"isOffset":false,"isSlot":false,"src":"10130:4:17","valueSize":1},{"declaration":1724,"isOffset":false,"isSlot":false,"src":"10182:4:17","valueSize":1},{"declaration":1700,"isOffset":false,"isSlot":false,"src":"10120:3:17","valueSize":1}],"id":1734,"nodeType":"InlineAssembly","src":"10072:173:17"}]},"id":1736,"implemented":true,"kind":"function","modifiers":[],"name":"_memcpy","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"dest","nodeType":"VariableDeclaration","scope":1736,"src":"9687:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"9687:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"src","nodeType":"VariableDeclaration","scope":1736,"src":"9709:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"9709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"len","nodeType":"VariableDeclaration","scope":1736,"src":"9730:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"9730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9677:70:17"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"9761:0:17"},"scope":1737,"src":"9661:590:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1738,"src":"1072:9181:17"}],"src":"688:9566:17"},"id":17},"contracts/helpers/CodeDeployer.sol":{"ast":{"absolutePath":"contracts/helpers/CodeDeployer.sol","exportedSymbols":{"CodeDeployer":[1778]},"id":1779,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:18"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":1740,"nodeType":"ImportDirective","scope":1779,"sourceUnit":574,"src":"713:90:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"805:199:18","text":" @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\n contract code, which can be retrieved via the `extcodecopy` opcode."},"fullyImplemented":true,"id":1778,"linearizedBaseContracts":[1778],"name":"CodeDeployer","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1744,"mutability":"constant","name":"_DEPLOYER_CREATION_CODE","nodeType":"VariableDeclaration","scope":1778,"src":"2456:125:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2456:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836303230333830333830363032303630303033393630303066336665666566656665666566656665666566656665666566656665666566656665666566656665","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2515:66:18","typeDescriptions":{"typeIdentifier":"t_rational_43478959162261259322985507790388014220090819270403161015765007512459448090366_by_1","typeString":"int_const 4347...(69 digits omitted)...0366"},"value":"0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe"},"visibility":"private"},{"constant":true,"id":1747,"mutability":"constant","name":"_PROTECTED_DEPLOYER_CREATION_CODE","nodeType":"VariableDeclaration","scope":1778,"src":"4302:135:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836306665363030303533363032303338303338303630323036303031333936303031303136303030663366656665666566656665666566656665666566656665","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4371:66:18","typeDescriptions":{"typeIdentifier":"t_rational_43871475194877038889163795305760172645897152794273359703116171544696555765502_by_1","typeString":"int_const 4387...(69 digits omitted)...5502"},"value":"0x60fe600053602038038060206001396001016000f3fefefefefefefefefefefe"},"visibility":"private"},{"body":{"id":1776,"nodeType":"Block","src":"4935:1347:18","statements":[{"assignments":[1758],"declarations":[{"constant":false,"id":1758,"mutability":"mutable","name":"deployerCreationCode","nodeType":"VariableDeclaration","scope":1776,"src":"4945:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4945:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1763,"initialValue":{"condition":{"id":1759,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"4976:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1761,"name":"_DEPLOYER_CREATION_CODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5031:23:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4976:78:18","trueExpression":{"id":1760,"name":"_PROTECTED_DEPLOYER_CREATION_CODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4995:33:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4945:109:18"},{"AST":{"nodeType":"YulBlock","src":"5379:706:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5393:29:18","value":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"5417:4:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5411:5:18"},"nodeType":"YulFunctionCall","src":"5411:11:18"},"variables":[{"name":"codeLength","nodeType":"YulTypedName","src":"5397:10:18","type":""}]},{"expression":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"5651:4:18"},{"name":"deployerCreationCode","nodeType":"YulIdentifier","src":"5657:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5644:6:18"},"nodeType":"YulFunctionCall","src":"5644:34:18"},"nodeType":"YulExpressionStatement","src":"5644:34:18"},{"nodeType":"YulAssignment","src":"5900:51:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5922:1:18","type":"","value":"0"},{"name":"code","nodeType":"YulIdentifier","src":"5925:4:18"},{"arguments":[{"name":"codeLength","nodeType":"YulIdentifier","src":"5935:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"5947:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:18"},"nodeType":"YulFunctionCall","src":"5931:19:18"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"5915:6:18"},"nodeType":"YulFunctionCall","src":"5915:36:18"},"variableNames":[{"name":"destination","nodeType":"YulIdentifier","src":"5900:11:18"}]},{"expression":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"6058:4:18"},{"name":"codeLength","nodeType":"YulIdentifier","src":"6064:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6051:6:18"},"nodeType":"YulFunctionCall","src":"6051:24:18"},"nodeType":"YulExpressionStatement","src":"6051:24:18"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1750,"isOffset":false,"isSlot":false,"src":"5417:4:18","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"5651:4:18","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"5925:4:18","valueSize":1},{"declaration":1750,"isOffset":false,"isSlot":false,"src":"6058:4:18","valueSize":1},{"declaration":1758,"isOffset":false,"isSlot":false,"src":"5657:20:18","valueSize":1},{"declaration":1755,"isOffset":false,"isSlot":false,"src":"5900:11:18","valueSize":1}],"id":1764,"nodeType":"InlineAssembly","src":"5370:715:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6218:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6241:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6233:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"6233:7:18","typeDescriptions":{}}},"id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6233:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1772,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6245:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CODE_DEPLOYMENT_FAILED","nodeType":"MemberAccess","referencedDeclaration":416,"src":"6245:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1765,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"6209:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"6209:66:18"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"4444:389:18","text":" @dev Deploys a contract with `code` as its code, returning the destination address.\n If preventExecution is set, prepend an invalid opcode to ensure the \"contract\" cannot be executed.\n Rather than add a flag, we could simply always prepend the opcode, but there might be use cases where fidelity\n is required.\n Reverts if deployment fails."},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"code","nodeType":"VariableDeclaration","scope":1777,"src":"4854:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"4854:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"preventExecution","nodeType":"VariableDeclaration","scope":1777,"src":"4873:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"4873:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4853:42:18"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":1777,"src":"4914:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4913:21:18"},"scope":1778,"src":"4838:1444:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1779,"src":"1005:5279:18"}],"src":"688:5597:18"},"id":18},"contracts/helpers/EOASignaturesValidator.sol":{"ast":{"absolutePath":"contracts/helpers/EOASignaturesValidator.sol","exportedSymbols":{"EOASignaturesValidator":[1958]},"id":1959,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1780,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:19"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":1781,"nodeType":"ImportDirective","scope":1959,"sourceUnit":574,"src":"713:90:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","id":1782,"nodeType":"ImportDirective","scope":1959,"sourceUnit":637,"src":"804:96:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/EIP712.sol","file":"../openzeppelin/EIP712.sol","id":1783,"nodeType":"ImportDirective","scope":1959,"sourceUnit":5957,"src":"902:36:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1785,"name":"ISignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":636,"src":"1045:20:19","typeDescriptions":{"typeIdentifier":"t_contract$_ISignaturesValidator_$636","typeString":"contract ISignaturesValidator"}},"id":1786,"nodeType":"InheritanceSpecifier","src":"1045:20:19"},{"baseName":{"id":1787,"name":"EIP712","nodeType":"UserDefinedTypeName","referencedDeclaration":5956,"src":"1067:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5956","typeString":"contract EIP712"}},"id":1788,"nodeType":"InheritanceSpecifier","src":"1067:6:19"}],"contractDependencies":[636,5956],"contractKind":"contract","documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"940:60:19","text":" @dev Utility for signing Solidity function calls."},"fullyImplemented":false,"id":1958,"linearizedBaseContracts":[1958,5956,636],"name":"EOASignaturesValidator","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1792,"mutability":"mutable","name":"_nextNonce","nodeType":"VariableDeclaration","scope":1958,"src":"1130:47:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1791,"keyType":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1130:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"baseFunctions":[627],"body":{"id":1801,"nodeType":"Block","src":"1253:44:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1798,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"1270:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1270:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1797,"id":1800,"nodeType":"Return","src":"1263:27:19"}]},"functionSelector":"ed24911d","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"getDomainSeparator","nodeType":"FunctionDefinition","overrides":{"id":1794,"nodeType":"OverrideSpecifier","overrides":[],"src":"1226:8:19"},"parameters":{"id":1793,"nodeType":"ParameterList","parameters":[],"src":"1211:2:19"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1244:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1244:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1243:9:19"},"scope":1958,"src":"1184:113:19","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[635],"body":{"id":1814,"nodeType":"Block","src":"1381:43:19","statements":[{"expression":{"baseExpression":{"id":1810,"name":"_nextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1398:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1812,"indexExpression":{"id":1811,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1409:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1398:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1809,"id":1813,"nodeType":"Return","src":"1391:26:19"}]},"functionSelector":"90193b7c","id":1815,"implemented":true,"kind":"function","modifiers":[],"name":"getNextNonce","nodeType":"FunctionDefinition","overrides":{"id":1806,"nodeType":"OverrideSpecifier","overrides":[],"src":"1354:8:19"},"parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1815,"src":"1325:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1324:17:19"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1815,"src":"1372:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1371:9:19"},"scope":1958,"src":"1303:121:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1838,"nodeType":"Block","src":"1588:107:19","statements":[{"expression":{"arguments":[{"id":1827,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1627:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1828,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1636:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1829,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1648:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"arguments":[{"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1664:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1664:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1830,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1659:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1659:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1659:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1835,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"1678:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1826,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1883,"src":"1605:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256,uint256)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1605:83:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":1825,"id":1837,"nodeType":"Return","src":"1598:90:19"}]},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"_ensureValidSignature","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1839,"src":"1470:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"1470:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":1839,"src":"1495:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1495:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":1839,"src":"1523:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1820,"name":"bytes","nodeType":"ElementaryTypeName","src":"1523:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":1839,"src":"1555:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:118:19"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"1588:0:19"},"scope":1958,"src":"1430:265:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1882,"nodeType":"Block","src":"1885:1030:19","statements":[{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":1882,"src":"1895:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1895:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1857,"initialValue":{"arguments":[{"id":1855,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"1929:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1854,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"1912:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1912:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1895:45:19"},{"expression":{"arguments":[{"arguments":[{"id":1860,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"1977:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1861,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"1986:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1862,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1994:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1859,"name":"_isValidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1959:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1959:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1864,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"2006:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1950:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1950:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"1950:66:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2496:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1869,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2508:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2508:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2496:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1872,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2525:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"EXPIRED_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":452,"src":"2525:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1867,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2487:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2487:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"ExpressionStatement","src":"2487:63:19"},{"expression":{"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1876,"name":"_nextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2884:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1878,"indexExpression":{"id":1877,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2895:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2884:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2907:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2884:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1881,"nodeType":"ExpressionStatement","src":"2884:24:19"}]},"id":1883,"implemented":true,"kind":"function","modifiers":[],"name":"_ensureValidSignature","nodeType":"FunctionDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1883,"src":"1741:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"1741:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":1883,"src":"1766:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1766:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":1883,"src":"1794:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"1794:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":1883,"src":"1826:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":1883,"src":"1852:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1731:144:19"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"1885:0:19"},"scope":1958,"src":"1701:1214:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1934,"nodeType":"Block","src":"3072:725:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1895,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3091:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3091:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3111:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"3091:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1899,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3115:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MALFORMED_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":455,"src":"3115:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"3082:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3082:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"ExpressionStatement","src":"3082:60:19"},{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":1934,"src":"3153:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3153:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1905,"nodeType":"VariableDeclarationStatement","src":"3153:9:19"},{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":1934,"src":"3172:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3172:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1908,"nodeType":"VariableDeclarationStatement","src":"3172:9:19"},{"assignments":[1910],"declarations":[{"constant":false,"id":1910,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":1934,"src":"3191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1909,"name":"uint8","nodeType":"ElementaryTypeName","src":"3191:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1911,"nodeType":"VariableDeclarationStatement","src":"3191:7:19"},{"AST":{"nodeType":"YulBlock","src":"3387:155:19","statements":[{"nodeType":"YulAssignment","src":"3401:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"3416:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3427:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3412:3:19"},"nodeType":"YulFunctionCall","src":"3412:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3406:5:19"},"nodeType":"YulFunctionCall","src":"3406:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3401:1:19"}]},{"nodeType":"YulAssignment","src":"3446:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"3461:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:19"},"nodeType":"YulFunctionCall","src":"3457:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3451:5:19"},"nodeType":"YulFunctionCall","src":"3451:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"3446:1:19"}]},{"nodeType":"YulAssignment","src":"3491:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"3514:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3525:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:19"},"nodeType":"YulFunctionCall","src":"3510:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3504:5:19"},"nodeType":"YulFunctionCall","src":"3504:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3496:4:19"},"nodeType":"YulFunctionCall","src":"3496:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"3491:1:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1904,"isOffset":false,"isSlot":false,"src":"3401:1:19","valueSize":1},{"declaration":1907,"isOffset":false,"isSlot":false,"src":"3446:1:19","valueSize":1},{"declaration":1889,"isOffset":false,"isSlot":false,"src":"3416:9:19","valueSize":1},{"declaration":1889,"isOffset":false,"isSlot":false,"src":"3461:9:19","valueSize":1},{"declaration":1889,"isOffset":false,"isSlot":false,"src":"3514:9:19","valueSize":1},{"declaration":1910,"isOffset":false,"isSlot":false,"src":"3491:1:19","valueSize":1}],"id":1912,"nodeType":"InlineAssembly","src":"3378:164:19"},{"assignments":[1914],"declarations":[{"constant":false,"id":1914,"mutability":"mutable","name":"recoveredAddress","nodeType":"VariableDeclaration","scope":1934,"src":"3552:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"3552:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1921,"initialValue":{"arguments":[{"id":1916,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"3589:6:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1917,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"3597:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1918,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"3600:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1919,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"3603:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1915,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"3579:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3579:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3552:53:19"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"3728:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3756:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3748:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"3748:7:19","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3748:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3728:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"3762:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1929,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"3782:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3762:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3728:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3727:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1893,"id":1933,"nodeType":"Return","src":"3720:70:19"}]},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"_isValidSignature","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1935,"src":"2957:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"2957:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":1935,"src":"2982:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2982:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":1935,"src":"3006:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1888,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2947:87:19"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1935,"src":"3066:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1891,"name":"bool","nodeType":"ElementaryTypeName","src":"3066:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3065:6:19"},"scope":1958,"src":"2921:876:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"3928:294:19","statements":[{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":1956,"src":"3938:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"3938:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1952,"initialValue":{"arguments":[{"hexValue":"3635","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3973:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3963:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"3967:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3963:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3938:38:19"},{"AST":{"nodeType":"YulBlock","src":"4051:138:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"4076:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4087:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4072:3:19"},"nodeType":"YulFunctionCall","src":"4072:18:19"},{"name":"r","nodeType":"YulIdentifier","src":"4092:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4065:6:19"},"nodeType":"YulFunctionCall","src":"4065:29:19"},"nodeType":"YulExpressionStatement","src":"4065:29:19"},{"expression":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"4118:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4129:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4114:3:19"},"nodeType":"YulFunctionCall","src":"4114:18:19"},{"name":"s","nodeType":"YulIdentifier","src":"4134:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4107:6:19"},"nodeType":"YulFunctionCall","src":"4107:29:19"},"nodeType":"YulExpressionStatement","src":"4107:29:19"},{"expression":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"4161:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4172:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4157:3:19"},"nodeType":"YulFunctionCall","src":"4157:18:19"},{"name":"v","nodeType":"YulIdentifier","src":"4177:1:19"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"4149:7:19"},"nodeType":"YulFunctionCall","src":"4149:30:19"},"nodeType":"YulExpressionStatement","src":"4149:30:19"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1939,"isOffset":false,"isSlot":false,"src":"4092:1:19","valueSize":1},{"declaration":1941,"isOffset":false,"isSlot":false,"src":"4134:1:19","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"4076:9:19","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"4118:9:19","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"4161:9:19","valueSize":1},{"declaration":1937,"isOffset":false,"isSlot":false,"src":"4177:1:19","valueSize":1}],"id":1953,"nodeType":"InlineAssembly","src":"4042:147:19"},{"expression":{"id":1954,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"4206:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1945,"id":1955,"nodeType":"Return","src":"4199:16:19"}]},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"_toArraySignature","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":1957,"src":"3839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1936,"name":"uint8","nodeType":"ElementaryTypeName","src":"3839:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":1957,"src":"3856:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3856:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":1957,"src":"3875:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3829:61:19"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1957,"src":"3914:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"3914:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3913:14:19"},"scope":1958,"src":"3803:419:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1959,"src":"1001:3223:19"}],"src":"688:3537:19"},"id":19},"contracts/helpers/ERC20Helpers.sol":{"ast":{"absolutePath":"contracts/helpers/ERC20Helpers.sol","exportedSymbols":{"_asIAsset":[1974],"_findTokenIndex":[2158],"_insertSorted":[2116],"_sortTokens":[2021]},"id":2159,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1960,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:20"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":1961,"nodeType":"ImportDirective","scope":2159,"sourceUnit":574,"src":"713:90:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":1962,"nodeType":"ImportDirective","scope":2159,"sourceUnit":763,"src":"804:87:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","id":1963,"nodeType":"ImportDirective","scope":2159,"sourceUnit":803,"src":"892:65:20","symbolAliases":[],"unitAlias":""},{"body":{"id":1973,"nodeType":"Block","src":"1060:101:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1127:32:20","statements":[{"nodeType":"YulAssignment","src":"1137:16:20","value":{"name":"tokens","nodeType":"YulIdentifier","src":"1147:6:20"},"variableNames":[{"name":"assets","nodeType":"YulIdentifier","src":"1137:6:20"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1970,"isOffset":false,"isSlot":false,"src":"1137:6:20","valueSize":1},{"declaration":1966,"isOffset":false,"isSlot":false,"src":"1147:6:20","valueSize":1}],"id":1972,"nodeType":"InlineAssembly","src":"1118:41:20"}]},"id":1974,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_asIAsset","nodeType":"FunctionDefinition","parameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1974,"src":"998:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1964,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"998:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1965,"nodeType":"ArrayTypeName","src":"998:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"997:24:20"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":1974,"src":"1036:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":1968,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":802,"src":"1036:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$802","typeString":"contract IAsset"}},"id":1969,"nodeType":"ArrayTypeName","src":"1036:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$802_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"}],"src":"1035:24:20"},"scope":2159,"src":"979:182:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2020,"nodeType":"Block","src":"1262:213:20","statements":[{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"aFirst","nodeType":"VariableDeclaration","scope":2020,"src":"1268:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1984,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1989,"initialValue":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1282:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1987,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"1291:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1282:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1268:29:20"},{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"sortedTokens","nodeType":"VariableDeclaration","scope":2020,"src":"1303:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1991,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1303:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1992,"nodeType":"ArrayTypeName","src":"1303:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":1999,"initialValue":{"arguments":[{"hexValue":"32","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1347:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1334:12:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":1994,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1338:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1995,"nodeType":"ArrayTypeName","src":"1338:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1303:46:20"},{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2000,"name":"sortedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1356:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2002,"indexExpression":{"hexValue":"30","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1369:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1356:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2003,"name":"aFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"1374:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2005,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"1392:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1374:24:20","trueExpression":{"id":2004,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1383:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1356:42:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2008,"nodeType":"ExpressionStatement","src":"1356:42:20"},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2009,"name":"sortedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1404:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2011,"indexExpression":{"hexValue":"31","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1417:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1404:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":2012,"name":"aFirst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"1422:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2014,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1440:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1422:24:20","trueExpression":{"id":2013,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"1431:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1404:42:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2017,"nodeType":"ExpressionStatement","src":"1404:42:20"},{"expression":{"id":2018,"name":"sortedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"1460:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"functionReturnParameters":1983,"id":2019,"nodeType":"Return","src":"1453:19:20"}]},"id":2021,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_sortTokens","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":2021,"src":"1189:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1975,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":2021,"src":"1208:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":1977,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1208:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1183:40:20"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":2021,"src":"1238:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1980,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1238:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":1981,"nodeType":"ArrayTypeName","src":"1238:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1237:24:20"},"scope":2159,"src":"1163:312:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"1576:326:20","statements":[{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1582:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2036,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1604:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1604:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1620:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1604:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1591:12:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":2033,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1595:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2034,"nodeType":"ArrayTypeName","src":"1595:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1591:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"src":"1582:40:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2042,"nodeType":"ExpressionStatement","src":"1582:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2043,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1633:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1633:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1650:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1633:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2056,"nodeType":"IfStatement","src":"1629:81:20","trueBody":{"id":2055,"nodeType":"Block","src":"1653:57:20","statements":[{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2047,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1663:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2049,"indexExpression":{"hexValue":"30","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1670:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1663:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2050,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"1675:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2052,"nodeType":"ExpressionStatement","src":"1663:17:20"},{"expression":{"id":2053,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1697:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"functionReturnParameters":2031,"id":2054,"nodeType":"Return","src":"1690:13:20"}]}},{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2115,"src":"1716:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2059,"nodeType":"VariableDeclarationStatement","src":"1716:9:20"},{"body":{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2079,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1792:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2081,"indexExpression":{"id":2080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1799:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1792:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2082,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1804:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2086,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1811:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1804:13:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1792:25:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2088,"nodeType":"ExpressionStatement","src":"1792:25:20"},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1755:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1755:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2068,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1764:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2072,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1771:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1775:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1771:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1764:13:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2073,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"1780:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1764:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1755:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2089,"initializationExpression":{"expression":{"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1736:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2061,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1740:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1740:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1736:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2064,"nodeType":"ExpressionStatement","src":"1736:17:20"},"loopExpression":{"expression":{"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1787:3:20","subExpression":{"id":2076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1787:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2078,"nodeType":"ExpressionStatement","src":"1787:3:20"},"nodeType":"ForStatement","src":"1731:86:20"},{"body":{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2100,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1855:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2102,"indexExpression":{"id":2101,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1862:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1855:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2103,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1867:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2105,"indexExpression":{"id":2104,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1874:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1867:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1855:21:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2107,"nodeType":"ExpressionStatement","src":"1855:21:20"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1843:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1847:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1843:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2108,"initializationExpression":{"assignments":[2091],"declarations":[{"constant":false,"id":2091,"mutability":"mutable","name":"j","nodeType":"VariableDeclaration","scope":2108,"src":"1828:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2093,"initialValue":{"hexValue":"30","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1840:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1828:13:20"},"loopExpression":{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1850:3:20","subExpression":{"id":2097,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"1850:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2099,"nodeType":"ExpressionStatement","src":"1850:3:20"},"nodeType":"ForStatement","src":"1823:53:20"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2109,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"1882:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2111,"indexExpression":{"id":2110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1889:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1882:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2112,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"1894:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"1882:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2114,"nodeType":"ExpressionStatement","src":"1882:17:20"}]},"id":2116,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_insertSorted","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":2116,"src":"1500:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2022,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1500:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2023,"nodeType":"ArrayTypeName","src":"1500:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2116,"src":"1524:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":2025,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1524:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1499:38:20"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"sorted","nodeType":"VariableDeclaration","scope":2116,"src":"1552:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2028,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1552:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2029,"nodeType":"ArrayTypeName","src":"1552:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1551:24:20"},"scope":2159,"src":"1477:425:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"1990:405:20","statements":[{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"tokensLength","nodeType":"VariableDeclaration","scope":2157,"src":"2199:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2130,"initialValue":{"expression":{"id":2128,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"2222:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2222:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2199:36:20"},{"body":{"id":2150,"nodeType":"Block","src":"2284:73:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2141,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"2298:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":2143,"indexExpression":{"id":2142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2305:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2298:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2144,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"2311:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"src":"2298:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"2294:57:20","trueBody":{"id":2148,"nodeType":"Block","src":"2318:33:20","statements":[{"expression":{"id":2146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2339:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2125,"id":2147,"nodeType":"Return","src":"2332:8:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2261:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2136,"name":"tokensLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2265:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2261:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2151,"initializationExpression":{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2151,"src":"2246:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2134,"initialValue":{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2246:13:20"},"loopExpression":{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2279:3:20","subExpression":{"id":2138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2279:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"2279:3:20"},"nodeType":"ForStatement","src":"2241:116:20"},{"expression":{"arguments":[{"expression":{"id":2153,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2371:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":182,"src":"2371:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":48,"src":"2363:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2156,"nodeType":"ExpressionStatement","src":"2363:29:20"}]},"id":2158,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_findTokenIndex","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":2158,"src":"1929:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2117,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1929:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2118,"nodeType":"ArrayTypeName","src":"1929:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2158,"src":"1953:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":2120,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1953:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1928:38:20"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2158,"src":"1981:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1981:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1980:9:20"},"scope":2159,"src":"1904:491:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"688:1708:20"},"id":20},"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol":{"ast":{"absolutePath":"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol","exportedSymbols":{"ExtraCalldataEOASignaturesValidator":[2314]},"id":2315,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2160,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:21"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":2161,"nodeType":"ImportDirective","scope":2315,"sourceUnit":574,"src":"713:90:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/EOASignaturesValidator.sol","file":"./EOASignaturesValidator.sol","id":2162,"nodeType":"ImportDirective","scope":2315,"sourceUnit":1959,"src":"805:38:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2164,"name":"EOASignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":1958,"src":"1290:22:21","typeDescriptions":{"typeIdentifier":"t_contract$_EOASignaturesValidator_$1958","typeString":"contract EOASignaturesValidator"}},"id":2165,"nodeType":"InheritanceSpecifier","src":"1290:22:21"}],"contractDependencies":[636,1958,5956],"contractKind":"contract","documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"845:387:21","text":" @dev Utility for signing Solidity function calls.\n This contract relies on the fact that Solidity contracts can be called with extra calldata, and enables\n meta-transaction schemes by appending an EIP712 signature of the original calldata at the end.\n Derived contracts must implement the `_entrypointTypeHash` function to map function selectors to EIP712 structs."},"fullyImplemented":false,"id":2314,"linearizedBaseContracts":[2314,1958,5956,636],"name":"ExtraCalldataEOASignaturesValidator","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2170,"mutability":"constant","name":"_EXTRA_CALLDATA_LENGTH","nodeType":"VariableDeclaration","scope":2314,"src":"1513:57:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1513:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1564:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1568:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1564:6:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}},"visibility":"internal"},{"body":{"id":2226,"nodeType":"Block","src":"1779:606:21","statements":[{"assignments":[2179],"declarations":[{"constant":false,"id":2179,"mutability":"mutable","name":"typeHash","nodeType":"VariableDeclaration","scope":2226,"src":"1789:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1789:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2182,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2180,"name":"_entrypointTypeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"1808:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1789:40:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"1955:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1975:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1967:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1967:7:21","typeDescriptions":{}}},"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1967:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1955:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2190,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"1979:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1946:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1946:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"1946:43:21"},{"assignments":[2194],"declarations":[{"constant":false,"id":2194,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2226,"src":"2000:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2197,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2195,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"2019:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2019:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2000:30:21"},{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":2226,"src":"2153:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2216,"initialValue":{"arguments":[{"arguments":[{"id":2203,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"2208:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2205,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"2228:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2228:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2204,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2218:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2218:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2242:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2242:10:21","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":2211,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"2267:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2210,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2254:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2213,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2274:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2201,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2197:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2197:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:86:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2200,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2174:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:119:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2153:140:21"},{"expression":{"arguments":[{"id":2218,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"2326:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2219,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2332:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"2344:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2344:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2222,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2358:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2223,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"2368:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2217,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1883,"src":"2304:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256,uint256)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2304:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2225,"nodeType":"ExpressionStatement","src":"2304:74:21"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"1577:114:21","text":" @dev Reverts with `errorCode` unless a valid signature for `user` was appended to the calldata."},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"_validateExtraCalldataSignature","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2227,"src":"1737:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"1737:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":2227,"src":"1751:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1736:33:21"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[],"src":"1779:0:21"},"scope":2314,"src":"1696:689:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"2391:384:21","text":" @dev Returns the EIP712 type hash for the current entry point function, which can be identified by its function\n selector (available as `msg.sig`).\n The type hash must conform to the following format:\n  <name>(bytes calldata, address sender, uint256 nonce, uint256 deadline)\n If 0x00, all signatures will be considered invalid."},"id":2233,"implemented":false,"kind":"function","modifiers":[],"name":"_entrypointTypeHash","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[],"src":"2808:2:21"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2233,"src":"2842:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2842:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2841:9:21"},"scope":2314,"src":"2780:71:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"3067:149:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3206:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2241,"name":"_decodeExtraCalldataWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3181:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3181:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3173:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:21","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3173:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2238,"id":2245,"nodeType":"Return","src":"3166:43:21"}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"2857:152:21","text":" @dev Extracts the signature deadline from extra calldata.\n This function returns bogus data if no signature is included."},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"_deadline","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[],"src":"3032:2:21"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2247,"src":"3058:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3057:9:21"},"scope":2314,"src":"3014:202:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"3551:301:21","statements":[{"assignments":[2254],"declarations":[{"constant":false,"id":2254,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":2283,"src":"3641:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2253,"name":"uint8","nodeType":"ElementaryTypeName","src":"3641:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2264,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30783230","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3690:4:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2259,"name":"_decodeExtraCalldataWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3665:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3657:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:21","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3657:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3651:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2255,"name":"uint8","nodeType":"ElementaryTypeName","src":"3651:5:21","typeDescriptions":{}}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3651:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3641:56:21"},{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":2283,"src":"3707:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3707:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2270,"initialValue":{"arguments":[{"hexValue":"30783430","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3744:4:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"}],"id":2267,"name":"_decodeExtraCalldataWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3719:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3719:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3707:42:21"},{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":2283,"src":"3759:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3759:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2276,"initialValue":{"arguments":[{"hexValue":"30783630","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3796:4:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"0x60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"}],"id":2273,"name":"_decodeExtraCalldataWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"3771:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3771:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3759:42:21"},{"expression":{"arguments":[{"id":2278,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"3837:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2279,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3840:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2280,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"3843:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2277,"name":"_toArraySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"3819:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint8,bytes32,bytes32) pure returns (bytes memory)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3819:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2252,"id":2282,"nodeType":"Return","src":"3812:33:21"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"3222:265:21","text":" @dev Extracts the signature parameters from extra calldata.\n This function returns bogus data if no signature is included. This is not a security risk, as that data would not\n be considered a valid signature in the first place."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"_signature","nodeType":"FunctionDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[],"src":"3511:2:21"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2284,"src":"3537:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3537:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3536:14:21"},"scope":2314,"src":"3492:360:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"4108:435:21","statements":[{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4118:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4127:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"4127:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"4118:17:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2294,"nodeType":"ExpressionStatement","src":"4118:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4235:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4235:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2297,"name":"_EXTRA_CALLDATA_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"4251:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4235:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2301,"nodeType":"IfStatement","src":"4231:306:21","trueBody":{"id":2300,"nodeType":"Block","src":"4275:262:21","statements":[{"AST":{"nodeType":"YulBlock","src":"4358:169:21","statements":[{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4461:6:21"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4473:12:21"},"nodeType":"YulFunctionCall","src":"4473:14:21"},{"name":"_EXTRA_CALLDATA_LENGTH","nodeType":"YulIdentifier","src":"4489:22:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4469:3:21"},"nodeType":"YulFunctionCall","src":"4469:43:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4454:6:21"},"nodeType":"YulFunctionCall","src":"4454:59:21"},"nodeType":"YulExpressionStatement","src":"4454:59:21"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2170,"isOffset":false,"isSlot":false,"src":"4489:22:21","valueSize":1},{"declaration":2288,"isOffset":false,"isSlot":false,"src":"4461:6:21","valueSize":1}],"id":2299,"nodeType":"InlineAssembly","src":"4349:178:21"}]}}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"3858:180:21","text":" @dev Returns the original calldata, without the extra bytes containing the signature.\n This function returns bogus data if no signature is included."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"_calldata","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[],"src":"4061:2:21"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2303,"src":"4087:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2287,"name":"bytes","nodeType":"ElementaryTypeName","src":"4087:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4086:21:21"},"scope":2314,"src":"4043:500:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"4850:185:21","statements":[{"AST":{"nodeType":"YulBlock","src":"4925:104:21","statements":[{"nodeType":"YulAssignment","src":"4939:80:21","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4970:12:21"},"nodeType":"YulFunctionCall","src":"4970:14:21"},{"name":"_EXTRA_CALLDATA_LENGTH","nodeType":"YulIdentifier","src":"4986:22:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4966:3:21"},"nodeType":"YulFunctionCall","src":"4966:43:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5011:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4962:3:21"},"nodeType":"YulFunctionCall","src":"4962:56:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4949:12:21"},"nodeType":"YulFunctionCall","src":"4949:70:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4939:6:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2170,"isOffset":false,"isSlot":false,"src":"4986:22:21","valueSize":1},{"declaration":2306,"isOffset":false,"isSlot":false,"src":"5011:6:21","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"4939:6:21","valueSize":1}],"id":2311,"nodeType":"InlineAssembly","src":"4916:113:21"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"4549:208:21","text":" @dev Returns a 256 bit word from 'extra' calldata, at some offset from the expected end of the original calldata.\n This function returns bogus data if no signature is included."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeExtraCalldataWord","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":2313,"src":"4796:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4796:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4795:16:21"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2313,"src":"4834:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:16:21"},"scope":2314,"src":"4762:273:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2315,"src":"1233:3804:21"}],"src":"688:4350:21"},"id":21},"contracts/helpers/InputHelpers.sol":{"ast":{"absolutePath":"contracts/helpers/InputHelpers.sol","exportedSymbols":{"InputHelpers":[2426]},"id":2427,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2316,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:22"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":2317,"nodeType":"ImportDirective","scope":2427,"sourceUnit":763,"src":"713:87:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":2318,"nodeType":"ImportDirective","scope":2427,"sourceUnit":574,"src":"801:90:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2426,"linearizedBaseContracts":[2426],"name":"InputHelpers","nodeType":"ContractDefinition","nodes":[{"body":{"id":2333,"nodeType":"Block","src":"988:63:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1007:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"1012:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1007:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2329,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1015:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INPUT_LENGTH_MISMATCH","nodeType":"MemberAccess","referencedDeclaration":110,"src":"1015:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2325,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"998:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2332,"nodeType":"ExpressionStatement","src":"998:46:22"}]},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"ensureInputLengthMatch","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2334,"src":"952:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2334,"src":"963:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"951:22:22"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[],"src":"988:0:22"},"scope":2426,"src":"920:131:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2355,"nodeType":"Block","src":"1166:73:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1185:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"1190:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1185:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"1195:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2348,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"1200:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1195:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1185:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2351,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1203:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INPUT_LENGTH_MISMATCH","nodeType":"MemberAccess","referencedDeclaration":110,"src":"1203:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2343,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1176:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2354,"nodeType":"ExpressionStatement","src":"1176:56:22"}]},"id":2356,"implemented":true,"kind":"function","modifiers":[],"name":"ensureInputLengthMatch","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2356,"src":"1098:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2356,"src":"1117:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":2356,"src":"1136:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1088:63:22"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[],"src":"1166:0:22"},"scope":2426,"src":"1057:182:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"1311:208:22","statements":[{"assignments":[2366],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"addressArray","nodeType":"VariableDeclaration","scope":2373,"src":"1321:29:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2364,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2365,"nodeType":"ArrayTypeName","src":"1321:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2367,"nodeType":"VariableDeclarationStatement","src":"1321:29:22"},{"AST":{"nodeType":"YulBlock","src":"1425:45:22","statements":[{"nodeType":"YulAssignment","src":"1439:21:22","value":{"name":"array","nodeType":"YulIdentifier","src":"1455:5:22"},"variableNames":[{"name":"addressArray","nodeType":"YulIdentifier","src":"1439:12:22"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2366,"isOffset":false,"isSlot":false,"src":"1439:12:22","valueSize":1},{"declaration":2359,"isOffset":false,"isSlot":false,"src":"1455:5:22","valueSize":1}],"id":2368,"nodeType":"InlineAssembly","src":"1416:54:22"},{"expression":{"arguments":[{"id":2370,"name":"addressArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1499:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2369,"name":"ensureArrayIsSorted","nodeType":"Identifier","overloadedDeclarations":[2374,2425],"referencedDeclaration":2425,"src":"1479:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory) pure"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1479:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2372,"nodeType":"ExpressionStatement","src":"1479:33:22"}]},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"ensureArrayIsSorted","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":2374,"src":"1274:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2357,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1274:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":2358,"nodeType":"ArrayTypeName","src":"1274:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$762_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1273:23:22"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"1311:0:22"},"scope":2426,"src":"1245:274:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2424,"nodeType":"Block","src":"1592:307:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2380,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1606:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1606:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1621:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1606:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"1602:53:22","trueBody":{"id":2385,"nodeType":"Block","src":"1624:31:22","statements":[{"functionReturnParameters":2379,"id":2384,"nodeType":"Return","src":"1638:7:22"}]}},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"previous","nodeType":"VariableDeclaration","scope":2424,"src":"1665:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"1665:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2392,"initialValue":{"baseExpression":{"id":2389,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1684:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2391,"indexExpression":{"hexValue":"30","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1690:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1684:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1665:27:22"},{"body":{"id":2422,"nodeType":"Block","src":"1745:148:22","statements":[{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"current","nodeType":"VariableDeclaration","scope":2422,"src":"1759:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2409,"initialValue":{"baseExpression":{"id":2406,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1777:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2408,"indexExpression":{"id":2407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1783:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1777:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1759:26:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1808:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2412,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"1819:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1808:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2414,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1828:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UNSORTED_ARRAY","nodeType":"MemberAccess","referencedDeclaration":104,"src":"1828:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1799:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1799:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"ExpressionStatement","src":"1799:51:22"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2418,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1864:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2419,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"1875:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1864:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2421,"nodeType":"ExpressionStatement","src":"1864:18:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1722:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2398,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1726:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1726:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1722:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2423,"initializationExpression":{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2423,"src":"1707:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"initialValue":{"hexValue":"31","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1719:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"1707:13:22"},"loopExpression":{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1740:3:22","subExpression":{"id":2401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"1742:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"1740:3:22"},"nodeType":"ForStatement","src":"1702:191:22"}]},"id":2425,"implemented":true,"kind":"function","modifiers":[],"name":"ensureArrayIsSorted","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":2425,"src":"1554:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"1554:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2376,"nodeType":"ArrayTypeName","src":"1554:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1553:24:22"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"1592:0:22"},"scope":2426,"src":"1525:374:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2427,"src":"893:1008:22"}],"src":"688:1214:22"},"id":22},"contracts/helpers/OptionalOnlyCaller.sol":{"ast":{"absolutePath":"contracts/helpers/OptionalOnlyCaller.sol","exportedSymbols":{"OptionalOnlyCaller":[2559]},"id":2560,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2428,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:23"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol","id":2429,"nodeType":"ImportDirective","scope":2560,"sourceUnit":619,"src":"713:95:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":2430,"nodeType":"ImportDirective","scope":2560,"sourceUnit":574,"src":"809:90:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/SignaturesValidator.sol","file":"./SignaturesValidator.sol","id":2431,"nodeType":"ImportDirective","scope":2560,"sourceUnit":2851,"src":"901:35:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2432,"name":"IOptionalOnlyCaller","nodeType":"UserDefinedTypeName","referencedDeclaration":618,"src":"978:19:23","typeDescriptions":{"typeIdentifier":"t_contract$_IOptionalOnlyCaller_$618","typeString":"contract IOptionalOnlyCaller"}},"id":2433,"nodeType":"InheritanceSpecifier","src":"978:19:23"},{"baseName":{"id":2434,"name":"SignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":2850,"src":"999:19:23","typeDescriptions":{"typeIdentifier":"t_contract$_SignaturesValidator_$2850","typeString":"contract SignaturesValidator"}},"id":2435,"nodeType":"InheritanceSpecifier","src":"999:19:23"}],"contractDependencies":[618,636,1958,2850,5956],"contractKind":"contract","fullyImplemented":false,"id":2559,"linearizedBaseContracts":[2559,2850,1958,5956,636,618],"name":"OptionalOnlyCaller","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2439,"mutability":"mutable","name":"_isOnlyCallerEnabled","nodeType":"VariableDeclaration","scope":2559,"src":"1025:53:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2438,"keyType":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1025:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"1044:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":true,"id":2444,"mutability":"constant","name":"_SET_ONLY_CALLER_CHECK_TYPEHASH","nodeType":"VariableDeclaration","scope":2559,"src":"1085:145:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1085:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5365744f6e6c7943616c6c6572436865636b286164647265737320757365722c626f6f6c20656e61626c65642c75696e74323536206e6f6e636529","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1163:61:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd291ffccec065968fe20c5f8debdad73ab50837733f357eeae8814178015a90","typeString":"literal_string \"SetOnlyCallerCheck(address user,bool enabled,uint256 nonce)\""},"value":"SetOnlyCallerCheck(address user,bool enabled,uint256 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bd291ffccec065968fe20c5f8debdad73ab50837733f357eeae8814178015a90","typeString":"literal_string \"SetOnlyCallerCheck(address user,bool enabled,uint256 nonce)\""}],"id":2441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1144:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1144:86:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":2454,"nodeType":"Block","src":"1498:47:23","statements":[{"expression":{"arguments":[{"id":2450,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"1522:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2449,"name":"_verifyCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"1508:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1508:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2452,"nodeType":"ExpressionStatement","src":"1508:19:23"},{"id":2453,"nodeType":"PlaceholderStatement","src":"1537:1:23"}]},"documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"1237:214:23","text":" @dev Reverts if the verification mechanism is enabled and the given address is not the caller.\n @param user - Address to validate as the only allowed caller, if the verification is enabled."},"id":2455,"name":"optionalOnlyCaller","nodeType":"ModifierDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2455,"src":"1484:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"1484:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1483:14:23"},"src":"1456:89:23","virtual":false,"visibility":"internal"},{"baseFunctions":[600],"body":{"id":2467,"nodeType":"Block","src":"1611:57:23","statements":[{"expression":{"arguments":[{"expression":{"id":2462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1641:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1641:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2464,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"1653:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2461,"name":"_setOnlyCallerCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"1621:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1621:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2466,"nodeType":"ExpressionStatement","src":"1621:40:23"}]},"functionSelector":"e811f44b","id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"setOnlyCallerCheck","nodeType":"FunctionDefinition","overrides":{"id":2459,"nodeType":"OverrideSpecifier","overrides":[],"src":"1602:8:23"},"parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2468,"src":"1579:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2456,"name":"bool","nodeType":"ElementaryTypeName","src":"1579:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1578:14:23"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[],"src":"1611:0:23"},"scope":2559,"src":"1551:117:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[609],"body":{"id":2505,"nodeType":"Block","src":"1815:257:23","statements":[{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":2505,"src":"1825:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1825:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2491,"initialValue":{"arguments":[{"arguments":[{"id":2483,"name":"_SET_ONLY_CALLER_CHECK_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"1867:31:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2484,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1900:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2485,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"1906:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":2487,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1928:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2486,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1915:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1915:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2481,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1856:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1856:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2480,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1846:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:89:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1825:110:23"},{"expression":{"arguments":[{"id":2493,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"1967:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2494,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"1973:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2495,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"1985:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2496,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1996:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"1996:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2492,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1839,"src":"1945:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1945:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2499,"nodeType":"ExpressionStatement","src":"1945:76:23"},{"expression":{"arguments":[{"id":2501,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"2051:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2502,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"2057:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2500,"name":"_setOnlyCallerCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2031:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2031:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"2031:34:23"}]},"functionSelector":"fcaa54ee","id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"setOnlyCallerCheckWithSignature","nodeType":"FunctionDefinition","overrides":{"id":2476,"nodeType":"OverrideSpecifier","overrides":[],"src":"1806:8:23"},"parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2506,"src":"1724:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2469,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2506,"src":"1746:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2471,"name":"bool","nodeType":"ElementaryTypeName","src":"1746:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":2506,"src":"1768:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2473,"name":"bytes","nodeType":"ElementaryTypeName","src":"1768:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1714:82:23"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[],"src":"1815:0:23"},"scope":2559,"src":"1674:398:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2524,"nodeType":"Block","src":"2143:98:23","statements":[{"expression":{"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2513,"name":"_isOnlyCallerEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"2153:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2515,"indexExpression":{"id":2514,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2174:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2153:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2516,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2182:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2153:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2518,"nodeType":"ExpressionStatement","src":"2153:36:23"},{"eventCall":{"arguments":[{"id":2520,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2220:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2521,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"2226:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2519,"name":"OnlyCallerOptIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2204:15:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2523,"nodeType":"EmitStatement","src":"2199:35:23"}]},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"_setOnlyCallerCheck","nodeType":"FunctionDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2525,"src":"2107:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"2107:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2525,"src":"2121:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2509,"name":"bool","nodeType":"ElementaryTypeName","src":"2121:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2106:28:23"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[],"src":"2143:0:23"},"scope":2559,"src":"2078:163:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[617],"body":{"id":2537,"nodeType":"Block","src":"2328:50:23","statements":[{"expression":{"baseExpression":{"id":2533,"name":"_isOnlyCallerEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"2345:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2535,"indexExpression":{"id":2534,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"2366:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2345:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2532,"id":2536,"nodeType":"Return","src":"2338:33:23"}]},"functionSelector":"a1648aa5","id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"isOnlyCallerEnabled","nodeType":"FunctionDefinition","overrides":{"id":2529,"nodeType":"OverrideSpecifier","overrides":[],"src":"2304:8:23"},"parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2538,"src":"2276:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"2276:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2275:14:23"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2538,"src":"2322:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2530,"name":"bool","nodeType":"ElementaryTypeName","src":"2322:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2321:6:23"},"scope":2559,"src":"2247:131:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2557,"nodeType":"Block","src":"2434:128:23","statements":[{"condition":{"baseExpression":{"id":2543,"name":"_isOnlyCallerEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"2448:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2545,"indexExpression":{"id":2544,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"2469:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2448:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2556,"nodeType":"IfStatement","src":"2444:112:23","trueBody":{"id":2555,"nodeType":"Block","src":"2476:80:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2499:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2499:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2549,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"2513:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2499:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2551,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SENDER_NOT_ALLOWED","nodeType":"MemberAccess","referencedDeclaration":335,"src":"2519:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2546,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2490:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2490:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"ExpressionStatement","src":"2490:55:23"}]}}]},"id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCaller","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2558,"src":"2407:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2406:14:23"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[],"src":"2434:0:23"},"scope":2559,"src":"2384:178:23","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":2560,"src":"938:1626:23"}],"src":"688:1877:23"},"id":23},"contracts/helpers/ScalingHelpers.sol":{"ast":{"absolutePath":"contracts/helpers/ScalingHelpers.sol","exportedSymbols":{"_computeScalingFactor":[2800],"_downscaleDown":[2599],"_downscaleDownArray":[2716],"_downscaleUp":[2616],"_downscaleUpArray":[2766],"_upscale":[2582],"_upscaleArray":[2666]},"id":2801,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2561,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:24"},{"absolutePath":"contracts/math/FixedPoint.sol","file":"../math/FixedPoint.sol","id":2562,"nodeType":"ImportDirective","scope":2801,"sourceUnit":4021,"src":"713:32:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/math/Math.sol","file":"../math/Math.sol","id":2563,"nodeType":"ImportDirective","scope":2801,"sourceUnit":5590,"src":"746:26:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":2564,"nodeType":"ImportDirective","scope":2801,"sourceUnit":6448,"src":"773:35:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/InputHelpers.sol","file":"./InputHelpers.sol","id":2565,"nodeType":"ImportDirective","scope":2801,"sourceUnit":2427,"src":"809:28:24","symbolAliases":[],"unitAlias":""},{"body":{"id":2581,"nodeType":"Block","src":"1508:388:24","statements":[{"expression":{"arguments":[{"id":2577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"1871:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2578,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"1879:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2575,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"1852:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"1852:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1852:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2574,"id":2580,"nodeType":"Return","src":"1845:48:24"}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"1288:139:24","text":" @dev Applies `scalingFactor` to `amount`, resulting in a larger or equal value depending on whether it needed\n scaling or not."},"id":2582,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_upscale","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2582,"src":"1446:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":2582,"src":"1462:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1445:39:24"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2582,"src":"1499:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1498:9:24"},"scope":2801,"src":"1428:468:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"2166:57:24","statements":[{"expression":{"arguments":[{"id":2594,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2198:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2595,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"2206:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2592,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2179:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"2179:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2179:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2591,"id":2597,"nodeType":"Return","src":"2172:48:24"}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"1898:181:24","text":" @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n whether it needed scaling or not. The result is rounded down."},"id":2599,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_downscaleDown","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2599,"src":"2104:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":2599,"src":"2120:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2103:39:24"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2599,"src":"2157:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:9:24"},"scope":2801,"src":"2080:143:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2615,"nodeType":"Block","src":"2489:55:24","statements":[{"expression":{"arguments":[{"id":2611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"2519:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2612,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2527:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2609,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2502:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"2502:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2502:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2608,"id":2614,"nodeType":"Return","src":"2495:46:24"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"2225:179:24","text":" @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n whether it needed scaling or not. The result is rounded up."},"id":2616,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_downscaleUp","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2616,"src":"2427:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":2616,"src":"2443:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2443:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2426:39:24"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2616,"src":"2480:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2479:9:24"},"scope":2801,"src":"2405:139:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"2790:234:24","statements":[{"assignments":[2627],"declarations":[{"constant":false,"id":2627,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":2665,"src":"2796:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2630,"initialValue":{"expression":{"id":2628,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2813:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2813:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2796:31:24"},{"expression":{"arguments":[{"id":2634,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2869:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2635,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2877:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2877:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2631,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2833:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$2426_$","typeString":"type(library InputHelpers)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"2833:35:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2833:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"ExpressionStatement","src":"2833:66:24"},{"body":{"id":2663,"nodeType":"Block","src":"2943:79:24","statements":[{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2649,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2953:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2651,"indexExpression":{"id":2650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2961:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2953:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2654,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2985:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2656,"indexExpression":{"id":2655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2993:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2985:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2657,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2997:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2659,"indexExpression":{"id":2658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"3012:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2997:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2652,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2966:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"2966:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2966:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2953:62:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ExpressionStatement","src":"2953:62:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2926:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2644,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2930:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2926:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"initializationExpression":{"assignments":[2640],"declarations":[{"constant":false,"id":2640,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2664,"src":"2911:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2911:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2642,"initialValue":{"hexValue":"30","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2923:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2911:13:24"},"loopExpression":{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2938:3:24","subExpression":{"id":2646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"2940:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2648,"nodeType":"ExpressionStatement","src":"2938:3:24"},"nodeType":"ForStatement","src":"2906:116:24"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"2556:146:24","text":" @dev Same as `_upscale`, but for an entire array. This function does not return anything, but instead *mutates*\n the `amounts` array."},"id":2666,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_upscaleArray","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2666,"src":"2726:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ArrayTypeName","src":"2726:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2666,"src":"2752:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2752:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2622,"nodeType":"ArrayTypeName","src":"2752:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2725:59:24"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[],"src":"2790:0:24"},"scope":2801,"src":"2703:321:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2715,"nodeType":"Block","src":"3272:234:24","statements":[{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":2715,"src":"3278:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3278:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2680,"initialValue":{"expression":{"id":2678,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3295:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3295:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3278:31:24"},{"expression":{"arguments":[{"id":2684,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3351:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2685,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3359:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3359:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2681,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3315:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$2426_$","typeString":"type(library InputHelpers)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"3315:35:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3315:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2688,"nodeType":"ExpressionStatement","src":"3315:66:24"},{"body":{"id":2713,"nodeType":"Block","src":"3425:79:24","statements":[{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2699,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3435:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2701,"indexExpression":{"id":2700,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3443:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3435:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2704,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3467:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2706,"indexExpression":{"id":2705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3475:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3467:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2707,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3479:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2709,"indexExpression":{"id":2708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3494:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3479:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2702,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3448:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"3448:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3448:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3435:62:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"3435:62:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2693,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3408:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2694,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3412:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3408:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2714,"initializationExpression":{"assignments":[2690],"declarations":[{"constant":false,"id":2690,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2714,"src":"3393:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"3393:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2692,"initialValue":{"hexValue":"30","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3405:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3393:13:24"},"loopExpression":{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3420:3:24","subExpression":{"id":2696,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3422:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"3420:3:24"},"nodeType":"ForStatement","src":"3388:116:24"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"3026:152:24","text":" @dev Same as `_downscaleDown`, but for an entire array. This function does not return anything, but instead\n *mutates* the `amounts` array."},"id":2716,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_downscaleDownArray","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2716,"src":"3208:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"nodeType":"ArrayTypeName","src":"3208:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2716,"src":"3234:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"nodeType":"ArrayTypeName","src":"3234:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3207:59:24"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[],"src":"3272:0:24"},"scope":2801,"src":"3179:327:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2765,"nodeType":"Block","src":"3750:232:24","statements":[{"assignments":[2727],"declarations":[{"constant":false,"id":2727,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":2765,"src":"3756:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2730,"initialValue":{"expression":{"id":2728,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3773:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3773:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3756:31:24"},{"expression":{"arguments":[{"id":2734,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3829:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2735,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"3837:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3837:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2731,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3793:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$2426_$","typeString":"type(library InputHelpers)"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"3793:35:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3793:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2738,"nodeType":"ExpressionStatement","src":"3793:66:24"},{"body":{"id":2763,"nodeType":"Block","src":"3903:77:24","statements":[{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2749,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3913:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2751,"indexExpression":{"id":2750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3921:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3913:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2754,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3943:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2756,"indexExpression":{"id":2755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3951:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3943:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2757,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"3955:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2759,"indexExpression":{"id":2758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3970:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3955:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2752,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3926:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":3863,"src":"3926:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3926:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3913:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ExpressionStatement","src":"3913:60:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3886:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2744,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3890:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3886:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2764,"initializationExpression":{"assignments":[2740],"declarations":[{"constant":false,"id":2740,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2764,"src":"3871:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2742,"initialValue":{"hexValue":"30","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3883:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3871:13:24"},"loopExpression":{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3898:3:24","subExpression":{"id":2746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3900:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2748,"nodeType":"ExpressionStatement","src":"3898:3:24"},"nodeType":"ForStatement","src":"3866:114:24"}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"3508:150:24","text":" @dev Same as `_downscaleUp`, but for an entire array. This function does not return anything, but instead\n *mutates* the `amounts` array."},"id":2766,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_downscaleUpArray","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2766,"src":"3686:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3686:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2719,"nodeType":"ArrayTypeName","src":"3686:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2766,"src":"3712:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"3712:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2722,"nodeType":"ArrayTypeName","src":"3712:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3685:59:24"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[],"src":"3750:0:24"},"scope":2801,"src":"3659:323:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2799,"nodeType":"Block","src":"4052:316:24","statements":[{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"tokenDecimals","nodeType":"VariableDeclaration","scope":2799,"src":"4134:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"4134:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":2778,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4172:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4164:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:24","typeDescriptions":{}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4164:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2775,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"4158:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4158:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":6033,"src":"4158:30:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4158:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4134:56:24"},{"assignments":[2785],"declarations":[{"constant":false,"id":2785,"mutability":"mutable","name":"decimalsDifference","nodeType":"VariableDeclaration","scope":2799,"src":"4257:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"4257:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2791,"initialValue":{"arguments":[{"hexValue":"3138","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:2:24","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},{"id":2789,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"4299:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2786,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"4286:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5589_$","typeString":"type(library Math)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5427,"src":"4286:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4286:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4257:56:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2792,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4326:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":3649,"src":"4326:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2795,"name":"decimalsDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"4347:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4343:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4326:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2772,"id":2798,"nodeType":"Return","src":"4319:46:24"}]},"id":2800,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_computeScalingFactor","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2800,"src":"4015:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":2767,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"4015:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4014:14:24"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2800,"src":"4043:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4043:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4042:9:24"},"scope":2801,"src":"3984:384:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"src":"688:3681:24"},"id":24},"contracts/helpers/SignaturesValidator.sol":{"ast":{"absolutePath":"contracts/helpers/SignaturesValidator.sol","exportedSymbols":{"SignaturesValidator":[2850]},"id":2851,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2802,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:25"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol","id":2803,"nodeType":"ImportDirective","scope":2851,"sourceUnit":685,"src":"713:89:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/EOASignaturesValidator.sol","file":"./EOASignaturesValidator.sol","id":2804,"nodeType":"ImportDirective","scope":2851,"sourceUnit":1959,"src":"804:38:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/Address.sol","file":"../openzeppelin/Address.sol","id":2805,"nodeType":"ImportDirective","scope":2851,"sourceUnit":5757,"src":"843:37:25","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2807,"name":"EOASignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":1958,"src":"984:22:25","typeDescriptions":{"typeIdentifier":"t_contract$_EOASignaturesValidator_$1958","typeString":"contract EOASignaturesValidator"}},"id":2808,"nodeType":"InheritanceSpecifier","src":"984:22:25"}],"contractDependencies":[636,1958,5956],"contractKind":"contract","documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"882:60:25","text":" @dev Utility for signing Solidity function calls."},"fullyImplemented":false,"id":2850,"linearizedBaseContracts":[2850,1958,5956,636],"name":"SignaturesValidator","nodeType":"ContractDefinition","nodes":[{"id":2811,"libraryName":{"id":2809,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":5756,"src":"1019:7:25","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$5756","typeString":"library Address"}},"nodeType":"UsingForDirective","src":"1013:26:25","typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"baseFunctions":[1935],"body":{"id":2848,"nodeType":"Block","src":"1205:254:25","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2823,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1219:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":5610,"src":"1219:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2846,"nodeType":"Block","src":"1370:83:25","statements":[{"expression":{"arguments":[{"id":2841,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1415:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1424:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2843,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1432:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2839,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1391:5:25","typeDescriptions":{"typeIdentifier":"t_super$_SignaturesValidator_$2850","typeString":"contract super SignaturesValidator"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_isValidSignature","nodeType":"MemberAccess","referencedDeclaration":1935,"src":"1391:23:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1391:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2822,"id":2845,"nodeType":"Return","src":"1384:58:25"}]},"id":2847,"nodeType":"IfStatement","src":"1215:238:25","trueBody":{"id":2838,"nodeType":"Block","src":"1241:123:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2830,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"1297:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2831,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"1305:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2827,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"1271:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2826,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"1262:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$684_$","typeString":"type(contract IERC1271)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1262:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1271_$684","typeString":"contract IERC1271"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":683,"src":"1262:34:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1262:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2833,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"1319:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$684_$","typeString":"type(contract IERC1271)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":683,"src":"1319:25:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1319:34:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1262:91:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2822,"id":2837,"nodeType":"Return","src":"1255:98:25"}]}}]},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"_isValidSignature","nodeType":"FunctionDefinition","overrides":{"id":2819,"nodeType":"OverrideSpecifier","overrides":[],"src":"1181:8:25"},"parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2849,"src":"1081:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":2849,"src":"1106:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1106:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":2849,"src":"1130:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2816,"name":"bytes","nodeType":"ElementaryTypeName","src":"1130:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1071:87:25"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2849,"src":"1199:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2820,"name":"bool","nodeType":"ElementaryTypeName","src":"1199:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1198:6:25"},"scope":2850,"src":"1045:414:25","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2851,"src":"943:518:25"}],"src":"688:774:25"},"id":25},"contracts/helpers/SingletonAuthentication.sol":{"ast":{"absolutePath":"contracts/helpers/SingletonAuthentication.sol","exportedSymbols":{"SingletonAuthentication":[2944]},"id":2945,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2852,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:26"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":2853,"nodeType":"ImportDirective","scope":2945,"sourceUnit":1401,"src":"713:65:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/Authentication.sol","file":"./Authentication.sol","id":2854,"nodeType":"ImportDirective","scope":2945,"sourceUnit":1504,"src":"780:30:26","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2855,"name":"Authentication","nodeType":"UserDefinedTypeName","referencedDeclaration":1503,"src":"857:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_Authentication_$1503","typeString":"contract Authentication"}},"id":2856,"nodeType":"InheritanceSpecifier","src":"857:14:26"}],"contractDependencies":[584,1503],"contractKind":"contract","fullyImplemented":true,"id":2944,"linearizedBaseContracts":[2944,1503,584],"name":"SingletonAuthentication","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2858,"mutability":"immutable","name":"_vault","nodeType":"VariableDeclaration","scope":2944,"src":"878:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"},"typeName":{"id":2857,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":1400,"src":"878:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"visibility":"private"},{"body":{"id":2879,"nodeType":"Block","src":"1063:31:26","statements":[{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"1073:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2876,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1082:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"src":"1073:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"id":2878,"nodeType":"ExpressionStatement","src":"1073:14:26"}]},"id":2880,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":2869,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1054:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_SingletonAuthentication_$2944","typeString":"contract SingletonAuthentication"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SingletonAuthentication_$2944","typeString":"contract SingletonAuthentication"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1046:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"1046:7:26","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1046:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1038:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:26","typeDescriptions":{}}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1038:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1030:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1030:7:26","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1030:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2873,"modifierName":{"id":2862,"name":"Authentication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1015:14:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Authentication_$1503_$","typeString":"type(contract Authentication)"}},"nodeType":"ModifierInvocation","src":"1015:47:26"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":2880,"src":"1001:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"},"typeName":{"id":2859,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":1400,"src":"1001:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1000:14:26"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"1063:0:26"},"scope":2944,"src":"989:105:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2888,"nodeType":"Block","src":"1207:30:26","statements":[{"expression":{"id":2886,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"1224:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"functionReturnParameters":2885,"id":2887,"nodeType":"Return","src":"1217:13:26"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"1100:53:26","text":" @notice Returns the Balancer Vault"},"functionSelector":"8d928af8","id":2889,"implemented":true,"kind":"function","modifiers":[],"name":"getVault","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[],"src":"1175:2:26"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2889,"src":"1199:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"},"typeName":{"id":2883,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":1400,"src":"1199:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1198:8:26"},"scope":2944,"src":"1158:79:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2900,"nodeType":"Block","src":"1356:50:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2895,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1373:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$1400_$","typeString":"function () view returns (contract IVault)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1373:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAuthorizer","nodeType":"MemberAccess","referencedDeclaration":960,"src":"1373:24:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IAuthorizer_$817_$","typeString":"function () view external returns (contract IAuthorizer)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1373:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"functionReturnParameters":2894,"id":2899,"nodeType":"Return","src":"1366:33:26"}]},"documentation":{"id":2890,"nodeType":"StructuredDocumentation","src":"1243:49:26","text":" @notice Returns the Authorizer"},"functionSelector":"aaabadc5","id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[],"src":"1319:2:26"},"returnParameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2901,"src":"1343:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"},"typeName":{"id":2892,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":817,"src":"1343:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"1342:13:26"},"scope":2944,"src":"1297:109:26","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1502],"body":{"id":2922,"nodeType":"Block","src":"1506:84:26","statements":[{"expression":{"arguments":[{"id":2914,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"1550:8:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2915,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"1560:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2918,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1577:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_SingletonAuthentication_$2944","typeString":"contract SingletonAuthentication"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SingletonAuthentication_$2944","typeString":"contract SingletonAuthentication"}],"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1569:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2916,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:26","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1569:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2911,"name":"getAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1523:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IAuthorizer_$817_$","typeString":"function () view returns (contract IAuthorizer)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1523:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"canPerform","nodeType":"MemberAccess","referencedDeclaration":816,"src":"1523:26:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address,address) view external returns (bool)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1523:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2910,"id":2921,"nodeType":"Return","src":"1516:67:26"}]},"id":2923,"implemented":true,"kind":"function","modifiers":[],"name":"_canPerform","nodeType":"FunctionDefinition","overrides":{"id":2907,"nodeType":"OverrideSpecifier","overrides":[],"src":"1482:8:26"},"parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":2923,"src":"1433:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1433:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2923,"src":"1451:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2904,"name":"address","nodeType":"ElementaryTypeName","src":"1451:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1432:35:26"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2923,"src":"1500:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2908,"name":"bool","nodeType":"ElementaryTypeName","src":"1500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1499:6:26"},"scope":2944,"src":"1412:178:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"1726:76:26","statements":[{"expression":{"arguments":[{"id":2937,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"1770:8:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2938,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"1780:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2939,"name":"where","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"1789:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2934,"name":"getAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1743:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IAuthorizer_$817_$","typeString":"function () view returns (contract IAuthorizer)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1743:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$817","typeString":"contract IAuthorizer"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"canPerform","nodeType":"MemberAccess","referencedDeclaration":816,"src":"1743:26:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address,address) view external returns (bool)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1743:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2933,"id":2941,"nodeType":"Return","src":"1736:59:26"}]},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"_canPerform","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":2943,"src":"1626:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1626:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2943,"src":"1652:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"1652:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"where","nodeType":"VariableDeclaration","scope":2943,"src":"1677:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1616:80:26"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2943,"src":"1720:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2931,"name":"bool","nodeType":"ElementaryTypeName","src":"1720:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1719:6:26"},"scope":2944,"src":"1596:206:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2945,"src":"812:992:26"}],"src":"688:1117:26"},"id":26},"contracts/helpers/TemporarilyPausable.sol":{"ast":{"absolutePath":"contracts/helpers/TemporarilyPausable.sol","exportedSymbols":{"PausableConstants":[3141],"TemporarilyPausable":[3133]},"id":3142,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2946,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:27"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":2947,"nodeType":"ImportDirective","scope":3142,"sourceUnit":574,"src":"713:90:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","id":2948,"nodeType":"ImportDirective","scope":3142,"sourceUnit":656,"src":"804:96:27","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2950,"name":"ITemporarilyPausable","nodeType":"UserDefinedTypeName","referencedDeclaration":655,"src":"2043:20:27","typeDescriptions":{"typeIdentifier":"t_contract$_ITemporarilyPausable_$655","typeString":"contract ITemporarilyPausable"}},"id":2951,"nodeType":"InheritanceSpecifier","src":"2043:20:27"}],"contractDependencies":[655],"contractKind":"contract","documentation":{"id":2949,"nodeType":"StructuredDocumentation","src":"902:1099:27","text":" @dev Allows for a contract to be paused during an initial period after deployment, disabling functionality. Can be\n used as an emergency switch in case a security vulnerability or threat is identified.\n The contract can only be paused during the Pause Window, a period that starts at deployment. It can also be\n unpaused and repaused any number of times during this period. This is intended to serve as a safety measure: it lets\n system managers react quickly to potentially dangerous situations, knowing that this action is reversible if careful\n analysis later determines there was a false alarm.\n If the contract is paused when the Pause Window finishes, it will remain in the paused state through an additional\n Buffer Period, after which it will be automatically unpaused forever. This is to ensure there is always enough time\n to react to an emergency, even if the threat is discovered shortly before the Pause Window expires.\n Note that since the contract can only be paused within the Pause Window, unpausing during the Buffer Period is\n irreversible."},"fullyImplemented":true,"id":3133,"linearizedBaseContracts":[3133,655],"name":"TemporarilyPausable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2953,"mutability":"immutable","name":"_pauseWindowEndTime","nodeType":"VariableDeclaration","scope":3133,"src":"2230:45:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2955,"mutability":"immutable","name":"_bufferPeriodEndTime","nodeType":"VariableDeclaration","scope":3133,"src":"2281:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2957,"mutability":"mutable","name":"_paused","nodeType":"VariableDeclaration","scope":3133,"src":"2334:20:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2956,"name":"bool","nodeType":"ElementaryTypeName","src":"2334:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":2999,"nodeType":"Block","src":"2432:486:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"2451:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2966,"name":"PausableConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2474:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PausableConstants_$3141_$","typeString":"type(library PausableConstants)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_PAUSE_WINDOW_DURATION","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"2474:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2451:66:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2969,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2519:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_PAUSE_WINDOW_DURATION","nodeType":"MemberAccess","referencedDeclaration":344,"src":"2519:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2964,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2442:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2442:110:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2972,"nodeType":"ExpressionStatement","src":"2442:110:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"2584:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2975,"name":"PausableConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2608:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PausableConstants_$3141_$","typeString":"type(library PausableConstants)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_BUFFER_PERIOD_DURATION","nodeType":"MemberAccess","referencedDeclaration":3140,"src":"2608:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2584:68:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2978,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2666:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_BUFFER_PERIOD_DURATION","nodeType":"MemberAccess","referencedDeclaration":347,"src":"2666:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2973,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2562:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2562:147:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2981,"nodeType":"ExpressionStatement","src":"2562:147:27"},{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"pauseWindowEndTime","nodeType":"VariableDeclaration","scope":2999,"src":"2720:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2720:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2988,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2984,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2749:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2749:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2986,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"2767:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2749:37:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2720:66:27"},{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"_pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"2797:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2990,"name":"pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"2819:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2797:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2992,"nodeType":"ExpressionStatement","src":"2797:40:27"},{"expression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2993,"name":"_bufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2847:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"2870:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2995,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"2891:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2847:64:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2998,"nodeType":"ExpressionStatement","src":"2847:64:27"}]},"id":3000,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":3000,"src":"2373:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":3000,"src":"2402:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2402:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:59:27"},"returnParameters":{"id":2963,"nodeType":"ParameterList","parameters":[],"src":"2432:0:27"},"scope":3133,"src":"2361:557:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3007,"nodeType":"Block","src":"3012:46:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3003,"name":"_ensureNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"3022:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3022:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"ExpressionStatement","src":"3022:18:27"},{"id":3006,"nodeType":"PlaceholderStatement","src":"3050:1:27"}]},"documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"2924:58:27","text":" @dev Reverts if the contract is paused."},"id":3008,"name":"whenNotPaused","nodeType":"ModifierDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[],"src":"3009:2:27"},"src":"2987:71:27","virtual":false,"visibility":"internal"},{"baseFunctions":[654],"body":{"id":3035,"nodeType":"Block","src":"3416:153:27","statements":[{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"3426:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3435:15:27","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3020,"name":"_isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"3436:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3436:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3426:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3024,"nodeType":"ExpressionStatement","src":"3426:24:27"},{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3460:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3026,"name":"_getPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"3481:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3481:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3460:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3029,"nodeType":"ExpressionStatement","src":"3460:45:27"},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3030,"name":"bufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"3515:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3031,"name":"_getBufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"3537:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3537:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3515:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ExpressionStatement","src":"3515:47:27"}]},"documentation":{"id":3009,"nodeType":"StructuredDocumentation","src":"3064:137:27","text":" @dev Returns the current contract pause status, as well as the end times of the Pause Window and Buffer\n Period."},"functionSelector":"1c0de051","id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"getPausedState","nodeType":"FunctionDefinition","overrides":{"id":3011,"nodeType":"OverrideSpecifier","overrides":[],"src":"3270:8:27"},"parameters":{"id":3010,"nodeType":"ParameterList","parameters":[],"src":"3229:2:27"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":3036,"src":"3309:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3012,"name":"bool","nodeType":"ElementaryTypeName","src":"3309:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"pauseWindowEndTime","nodeType":"VariableDeclaration","scope":3036,"src":"3334:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"bufferPeriodEndTime","nodeType":"VariableDeclaration","scope":3036,"src":"3374:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3374:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3295:116:27"},"scope":3133,"src":"3206:363:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3074,"nodeType":"Block","src":"3887:316:27","statements":[{"condition":{"id":3042,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"3901:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3064,"nodeType":"Block","src":"4021:108:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3055,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4044:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4044:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3057,"name":"_getBufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"4062:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4062:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4044:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3060,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"4089:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BUFFER_PERIOD_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":407,"src":"4089:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"4035:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4035:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"ExpressionStatement","src":"4035:83:27"}]},"id":3065,"nodeType":"IfStatement","src":"3897:232:27","trueBody":{"id":3053,"nodeType":"Block","src":"3909:106:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3044,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3932:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3932:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3046,"name":"_getPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"3950:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3950:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3932:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3049,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3976:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PAUSE_WINDOW_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":341,"src":"3976:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3043,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"3923:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3923:81:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3052,"nodeType":"ExpressionStatement","src":"3923:81:27"}]}},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"4139:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3067,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"4149:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4139:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"nodeType":"ExpressionStatement","src":"4139:16:27"},{"eventCall":{"arguments":[{"id":3071,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"4189:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3070,"name":"PausedStateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4170:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4170:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"EmitStatement","src":"4165:31:27"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"3575:265:27","text":" @dev Sets the pause state to `paused`. The contract can only be paused until the end of the Pause Window, and\n unpaused until the end of the Buffer Period.\n Once the Buffer Period expires, this function reverts unconditionally."},"id":3075,"implemented":true,"kind":"function","modifiers":[],"name":"_setPaused","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":3075,"src":"3865:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3038,"name":"bool","nodeType":"ElementaryTypeName","src":"3865:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3864:13:27"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[],"src":"3887:0:27"},"scope":3133,"src":"3845:358:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"4314:56:27","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3080,"name":"_isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"4333:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4333:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3082,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"4349:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PAUSED","nodeType":"MemberAccess","referencedDeclaration":338,"src":"4349:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3079,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"4324:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4324:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"ExpressionStatement","src":"4324:39:27"}]},"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"4209:58:27","text":" @dev Reverts if the contract is paused."},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"_ensureNotPaused","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[],"src":"4297:2:27"},"returnParameters":{"id":3078,"nodeType":"ParameterList","parameters":[],"src":"4314:0:27"},"scope":3133,"src":"4272:98:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"4482:61:27","statements":[{"expression":{"arguments":[{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4501:15:27","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3092,"name":"_isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"4502:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4502:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3095,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"4518:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NOT_PAUSED","nodeType":"MemberAccess","referencedDeclaration":425,"src":"4518:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3091,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"4492:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"4492:44:27"}]},"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"4376:62:27","text":" @dev Reverts if the contract is not paused."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"_ensurePaused","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"4465:2:27"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"4482:0:27"},"scope":3133,"src":"4443:100:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3115,"nodeType":"Block","src":"4822:184:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3106,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4944:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4944:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3108,"name":"_getBufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"4962:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4962:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4944:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4991:8:27","subExpression":{"id":3111,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"4992:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4944:55:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3105,"id":3114,"nodeType":"Return","src":"4937:62:27"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"4549:215:27","text":" @dev Returns true if the contract is unpaused.\n Once the Buffer Period expires, the gas cost of calling this function is reduced dramatically, as storage is no\n longer accessed."},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"_isNotPaused","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[],"src":"4790:2:27"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3116,"src":"4816:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3103,"name":"bool","nodeType":"ElementaryTypeName","src":"4816:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4815:6:27"},"scope":3133,"src":"4769:237:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"5184:43:27","statements":[{"expression":{"id":3121,"name":"_pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"5201:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3120,"id":3122,"nodeType":"Return","src":"5194:26:27"}]},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"_getPauseWindowEndTime","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[],"src":"5150:2:27"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3124,"src":"5175:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"5175:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5174:9:27"},"scope":3133,"src":"5119:108:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3131,"nodeType":"Block","src":"5299:44:27","statements":[{"expression":{"id":3129,"name":"_bufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"5316:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3128,"id":3130,"nodeType":"Return","src":"5309:27:27"}]},"id":3132,"implemented":true,"kind":"function","modifiers":[],"name":"_getBufferPeriodEndTime","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"5265:2:27"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3132,"src":"5290:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5290:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5289:9:27"},"scope":3133,"src":"5233:110:27","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":3142,"src":"2002:3343:27"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"5347:61:27","text":" @dev Keep the maximum durations in a single place."},"fullyImplemented":true,"id":3141,"linearizedBaseContracts":[3141],"name":"PausableConstants","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"fc5e93fe","id":3137,"mutability":"constant","name":"MAX_PAUSE_WINDOW_DURATION","nodeType":"VariableDeclaration","scope":3141,"src":"5441:60:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5441:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323730","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5493:8:27","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_23328000_by_1","typeString":"int_const 23328000"},"value":"270"},"visibility":"public"},{"constant":true,"functionSelector":"8b19548d","id":3140,"mutability":"constant","name":"MAX_BUFFER_PERIOD_DURATION","nodeType":"VariableDeclaration","scope":3141,"src":"5507:60:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5507:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3930","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5560:7:27","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},"visibility":"public"}],"scope":3142,"src":"5409:161:27"}],"src":"688:4883:27"},"id":27},"contracts/helpers/WordCodec.sol":{"ast":{"absolutePath":"contracts/helpers/WordCodec.sol","exportedSymbols":{"WordCodec":[3568]},"id":3569,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3143,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:28"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":3144,"nodeType":"ImportDirective","scope":3569,"sourceUnit":574,"src":"713:90:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/math/Math.sol","file":"../math/Math.sol","id":3145,"nodeType":"ImportDirective","scope":3569,"sourceUnit":5590,"src":"805:26:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"833:1183:28","text":" @dev Library for encoding and decoding values stored inside a 256 bit word. Typically used to pack multiple values in\n a single storage slot, saving gas by performing less storage accesses.\n Each value is defined by its size and the least significant bit in the word, also known as offset. For example, two\n 128 bit values may be encoded in a word by assigning one an offset of 0, and the other an offset of 128.\n We could use Solidity structs to pack values together in a single storage slot instead of relying on a custom and\n error-prone library, but unfortunately Solidity only allows for structs to live in either storage, calldata or\n memory. Because a memory struct uses not just memory but also a slot in the stack (to store its memory location),\n using memory for word-sized values (i.e. of 256 bits or less) is strictly less gas performant, and doesn't even\n prevent stack-too-deep issues. This is compounded by the fact that Balancer contracts typically are memory-intensive,\n and the cost of accesing memory increases quadratically with the number of allocated words. Manual packing and\n unpacking is therefore the preferred approach."},"fullyImplemented":true,"id":3568,"linearizedBaseContracts":[3568],"name":"WordCodec","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3154,"mutability":"constant","name":"_MASK_1","nodeType":"VariableDeclaration","scope":3568,"src":"2254:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2254:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"id":3151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2289:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"31","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2293:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":3150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2292:3:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}},"src":"2289:6:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2298:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2289:10:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}},"visibility":"private"},{"constant":true,"id":3162,"mutability":"constant","name":"_MASK_192","nodeType":"VariableDeclaration","scope":3568,"src":"2305:49:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"2305:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2342:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"313932","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2346:3:28","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"}],"id":3158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2345:5:28","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}},"src":"2342:8:28","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2353:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2342:12:28","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"}},"visibility":"private"},{"body":{"id":3183,"nodeType":"Block","src":"2716:479:28","statements":[{"expression":{"arguments":[{"id":3177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"2750:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3178,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"2757:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3179,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"2765:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3176,"name":"_validateEncodingParams","nodeType":"Identifier","overloadedDeclarations":[3494,3567],"referencedDeclaration":3494,"src":"2726:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2726:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"ExpressionStatement","src":"2726:49:28"},{"AST":{"nodeType":"YulBlock","src":"3005:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3019:37:28","value":{"arguments":[{"arguments":[{"name":"bitLength","nodeType":"YulIdentifier","src":"3039:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3050:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3035:3:28"},"nodeType":"YulFunctionCall","src":"3035:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"3054:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3031:3:28"},"nodeType":"YulFunctionCall","src":"3031:25:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3023:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3069:52:28","value":{"arguments":[{"name":"word","nodeType":"YulIdentifier","src":"3092:4:28"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3106:6:28"},{"name":"mask","nodeType":"YulIdentifier","src":"3114:4:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3102:3:28"},"nodeType":"YulFunctionCall","src":"3102:17:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3098:3:28"},"nodeType":"YulFunctionCall","src":"3098:22:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3088:3:28"},"nodeType":"YulFunctionCall","src":"3088:33:28"},"variables":[{"name":"clearedWord","nodeType":"YulTypedName","src":"3073:11:28","type":""}]},{"nodeType":"YulAssignment","src":"3134:45:28","value":{"arguments":[{"name":"clearedWord","nodeType":"YulIdentifier","src":"3147:11:28"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3164:6:28"},{"name":"value","nodeType":"YulIdentifier","src":"3172:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3160:3:28"},"nodeType":"YulFunctionCall","src":"3160:18:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3144:2:28"},"nodeType":"YulFunctionCall","src":"3144:35:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3134:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3171,"isOffset":false,"isSlot":false,"src":"3039:9:28","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"3106:6:28","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"3164:6:28","valueSize":1},{"declaration":3174,"isOffset":false,"isSlot":false,"src":"3134:6:28","valueSize":1},{"declaration":3167,"isOffset":false,"isSlot":false,"src":"3172:5:28","valueSize":1},{"declaration":3165,"isOffset":false,"isSlot":false,"src":"3092:4:28","valueSize":1}],"id":3182,"nodeType":"InlineAssembly","src":"2996:193:28"}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"2388:162:28","text":" @dev Inserts an unsigned integer of bitLength, shifted by an offset, into a 256 bit word,\n replacing the old value. Returns the new word."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3184,"src":"2584:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2584:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3184,"src":"2606:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3184,"src":"2629:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3184,"src":"2653:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2574:102:28"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3184,"src":"2700:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2700:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2699:16:28"},"scope":3568,"src":"2555:640:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3244,"nodeType":"Block","src":"3575:343:28","statements":[{"expression":{"arguments":[{"id":3199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3609:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3200,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"3616:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3201,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3624:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3198,"name":"_validateEncodingParams","nodeType":"Identifier","overloadedDeclarations":[3494,3567],"referencedDeclaration":3567,"src":"3585:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (int256,uint256,uint256) pure"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3585:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"ExpressionStatement","src":"3585:49:28"},{"assignments":[3205],"declarations":[{"constant":false,"id":3205,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":3244,"src":"3645:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3212,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3661:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3207,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3666:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3661:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3660:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3660:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3645:35:28"},{"assignments":[3214],"declarations":[{"constant":false,"id":3214,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":3244,"src":"3690:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3690:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3228,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3219,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"3728:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3720:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3720:7:28","typeDescriptions":{}}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3720:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3736:17:28","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3738:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3222,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"3746:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3738:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3737:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3712:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3712:7:28","typeDescriptions":{}}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3712:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3690:64:28"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"3855:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3886:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3878:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"3878:7:28","typeDescriptions":{}}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3878:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3236,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3895:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3878:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3877:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3239,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"3904:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3877:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3869:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3869:7:28","typeDescriptions":{}}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3869:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3855:56:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3197,"id":3243,"nodeType":"Return","src":"3848:63:28"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"3201:217:28","text":" @dev Inserts a signed integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` can be represented using `bitLength` bits."},"id":3245,"implemented":true,"kind":"function","modifiers":[],"name":"insertInt","nodeType":"FunctionDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3245,"src":"3451:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3451:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3245,"src":"3473:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3188,"name":"int256","nodeType":"ElementaryTypeName","src":"3473:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3245,"src":"3495:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3495:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3245,"src":"3519:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3441:101:28"},"returnParameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3245,"src":"3566:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3566:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3565:9:28"},"scope":3568,"src":"3423:495:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3270,"nodeType":"Block","src":"4303:108:28","statements":[{"expression":{"arguments":[{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4337:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3259,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"4344:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3260,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4352:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"name":"_validateEncodingParams","nodeType":"Identifier","overloadedDeclarations":[3494,3567],"referencedDeclaration":3494,"src":"4313:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4313:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"ExpressionStatement","src":"4313:49:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4388:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3266,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"4397:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4388:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4380:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4380:7:28","typeDescriptions":{}}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4380:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3256,"id":3269,"nodeType":"Return","src":"4373:31:28"}]},"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"3941:225:28","text":" @dev Encodes an unsigned integer shifted by an offset. Ensures value fits within\n `bitLength` bits.\n The return value can be ORed bitwise with other encoded values to form a 256 bit word."},"id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"encodeUint","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3271,"src":"4200:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4200:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3271,"src":"4223:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4223:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3271,"src":"4247:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"4247:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4190:80:28"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3271,"src":"4294:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4294:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4293:9:28"},"scope":3568,"src":"4171:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"4723:255:28","statements":[{"expression":{"arguments":[{"id":3284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"4757:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3285,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"4764:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3286,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4772:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3283,"name":"_validateEncodingParams","nodeType":"Identifier","overloadedDeclarations":[3494,3567],"referencedDeclaration":3567,"src":"4733:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (int256,uint256,uint256) pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4733:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3288,"nodeType":"ExpressionStatement","src":"4733:49:28"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":3311,"src":"4793:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4793:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3297,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4809:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3292,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"4814:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4809:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4808:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4827:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4808:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4793:35:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"4946:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4938:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4938:7:28","typeDescriptions":{}}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4938:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3304,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4955:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4938:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4937:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3307,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"4964:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4937:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4929:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4929:7:28","typeDescriptions":{}}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4929:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3282,"id":3310,"nodeType":"Return","src":"4922:49:28"}]},"documentation":{"id":3272,"nodeType":"StructuredDocumentation","src":"4417:171:28","text":" @dev Encodes a signed integer shifted by an offset.\n The return value can be ORed bitwise with other encoded values to form a 256 bit word."},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"encodeInt","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3312,"src":"4621:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3273,"name":"int256","nodeType":"ElementaryTypeName","src":"4621:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3312,"src":"4643:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3312,"src":"4667:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"4667:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4611:79:28"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3312,"src":"4714:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4714:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4713:9:28"},"scope":3568,"src":"4593:385:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3325,"nodeType":"Block","src":"5273:204:28","statements":[{"AST":{"nodeType":"YulBlock","src":"5388:83:28","statements":[{"nodeType":"YulAssignment","src":"5402:59:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5420:6:28"},{"name":"word","nodeType":"YulIdentifier","src":"5428:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5416:3:28"},"nodeType":"YulFunctionCall","src":"5416:17:28"},{"arguments":[{"arguments":[{"name":"bitLength","nodeType":"YulIdentifier","src":"5443:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5454:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5439:3:28"},"nodeType":"YulFunctionCall","src":"5439:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"5458:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5435:3:28"},"nodeType":"YulFunctionCall","src":"5435:25:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5412:3:28"},"nodeType":"YulFunctionCall","src":"5412:49:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5402:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3319,"isOffset":false,"isSlot":false,"src":"5443:9:28","valueSize":1},{"declaration":3317,"isOffset":false,"isSlot":false,"src":"5420:6:28","valueSize":1},{"declaration":3322,"isOffset":false,"isSlot":false,"src":"5402:6:28","valueSize":1},{"declaration":3315,"isOffset":false,"isSlot":false,"src":"5428:4:28","valueSize":1}],"id":3324,"nodeType":"InlineAssembly","src":"5379:92:28"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"5001:129:28","text":" @dev Decodes and returns an unsigned integer with `bitLength` bits, shifted by an offset, from a 256 bit word."},"id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3326,"src":"5164:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5164:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3326,"src":"5186:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5186:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3326,"src":"5210:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5210:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5154:79:28"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3326,"src":"5257:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5257:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5256:16:28"},"scope":3568,"src":"5135:342:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"5750:643:28","statements":[{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"mutability":"mutable","name":"maxInt","nodeType":"VariableDeclaration","scope":3377,"src":"5760:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3338,"name":"int256","nodeType":"ElementaryTypeName","src":"5760:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3352,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5784:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"5790:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5802:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5790:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5789:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5784:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5783:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5808:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5783:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5776:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3340,"name":"int256","nodeType":"ElementaryTypeName","src":"5776:6:28","typeDescriptions":{}}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5776:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5760:50:28"},{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":3377,"src":"5820:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5820:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3361,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5836:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3356,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"5841:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5836:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5835:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5835:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5820:35:28"},{"assignments":[3363],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3377,"src":"5866:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3362,"name":"int256","nodeType":"ElementaryTypeName","src":"5866:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3375,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"5896:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3369,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"5904:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5896:14:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5888:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"5888:7:28","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5888:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3372,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"5914:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5888:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5881:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3364,"name":"int256","nodeType":"ElementaryTypeName","src":"5881:6:28","typeDescriptions":{}}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5881:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5866:53:28"},{"AST":{"nodeType":"YulBlock","src":"6309:78:28","statements":[{"nodeType":"YulAssignment","src":"6323:54:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6343:5:28"},{"name":"maxInt","nodeType":"YulIdentifier","src":"6350:6:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6340:2:28"},"nodeType":"YulFunctionCall","src":"6340:17:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"6363:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6359:3:28"},"nodeType":"YulFunctionCall","src":"6359:9:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6336:3:28"},"nodeType":"YulFunctionCall","src":"6336:33:28"},{"name":"value","nodeType":"YulIdentifier","src":"6371:5:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6333:2:28"},"nodeType":"YulFunctionCall","src":"6333:44:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6323:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3354,"isOffset":false,"isSlot":false,"src":"6363:4:28","valueSize":1},{"declaration":3339,"isOffset":false,"isSlot":false,"src":"6350:6:28","valueSize":1},{"declaration":3336,"isOffset":false,"isSlot":false,"src":"6323:6:28","valueSize":1},{"declaration":3363,"isOffset":false,"isSlot":false,"src":"6343:5:28","valueSize":1},{"declaration":3363,"isOffset":false,"isSlot":false,"src":"6371:5:28","valueSize":1}],"id":3376,"nodeType":"InlineAssembly","src":"6300:87:28"}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"5483:126:28","text":" @dev Decodes and returns a signed integer with `bitLength` bits, shifted by an offset, from a 256 bit word."},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"decodeInt","nodeType":"FunctionDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3378,"src":"5642:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5642:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3378,"src":"5664:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3378,"src":"5688:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5688:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5632:79:28"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3378,"src":"5735:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3335,"name":"int256","nodeType":"ElementaryTypeName","src":"5735:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5734:15:28"},"scope":3568,"src":"5614:779:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3389,"nodeType":"Block","src":"6607:166:28","statements":[{"AST":{"nodeType":"YulBlock","src":"6708:59:28","statements":[{"nodeType":"YulAssignment","src":"6722:35:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6740:6:28"},{"name":"word","nodeType":"YulIdentifier","src":"6748:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6736:3:28"},"nodeType":"YulFunctionCall","src":"6736:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"6755:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6732:3:28"},"nodeType":"YulFunctionCall","src":"6732:25:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6722:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3383,"isOffset":false,"isSlot":false,"src":"6740:6:28","valueSize":1},{"declaration":3386,"isOffset":false,"isSlot":false,"src":"6722:6:28","valueSize":1},{"declaration":3381,"isOffset":false,"isSlot":false,"src":"6748:4:28","valueSize":1}],"id":3388,"nodeType":"InlineAssembly","src":"6699:68:28"}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"6421:95:28","text":" @dev Decodes and returns a boolean shifted by an offset from a 256 bit word."},"id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"decodeBool","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3390,"src":"6541:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6541:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3390,"src":"6555:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6540:30:28"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3390,"src":"6594:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3385,"name":"bool","nodeType":"ElementaryTypeName","src":"6594:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6593:13:28"},"scope":3568,"src":"6521:252:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3433,"nodeType":"Block","src":"7122:164:28","statements":[{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":3433,"src":"7132:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7132:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3417,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3408,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"7170:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7162:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"7162:7:28","typeDescriptions":{}}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7162:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"7178:22:28","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"_MASK_192","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"7180:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3411,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"7193:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7180:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7179:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7162:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7154:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7154:7:28","typeDescriptions":{}}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7154:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7132:69:28"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"7218:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"7249:5:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7241:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"7241:7:28","typeDescriptions":{}}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3425,"name":"_MASK_192","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"7258:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7241:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7240:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3428,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"7272:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7232:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7232:7:28","typeDescriptions":{}}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7232:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7218:61:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3401,"id":3432,"nodeType":"Return","src":"7211:68:28"}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"6779:208:28","text":" @dev Inserts a 192 bit value shifted by an offset into a 256 bit word, replacing the old value.\n Returns the new word.\n Assumes `value` can be represented using 192 bits."},"id":3434,"implemented":true,"kind":"function","modifiers":[],"name":"insertBits192","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3434,"src":"7024:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7024:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3434,"src":"7046:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7046:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3434,"src":"7069:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"7069:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7014:75:28"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3434,"src":"7113:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7113:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7112:9:28"},"scope":3568,"src":"6992:294:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3447,"nodeType":"Block","src":"7571:354:28","statements":[{"AST":{"nodeType":"YulBlock","src":"7788:131:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7802:49:28","value":{"arguments":[{"name":"word","nodeType":"YulIdentifier","src":"7825:4:28"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7839:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7847:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7835:3:28"},"nodeType":"YulFunctionCall","src":"7835:14:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7831:3:28"},"nodeType":"YulFunctionCall","src":"7831:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7821:3:28"},"nodeType":"YulFunctionCall","src":"7821:30:28"},"variables":[{"name":"clearedWord","nodeType":"YulTypedName","src":"7806:11:28","type":""}]},{"nodeType":"YulAssignment","src":"7864:45:28","value":{"arguments":[{"name":"clearedWord","nodeType":"YulIdentifier","src":"7877:11:28"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7894:6:28"},{"name":"value","nodeType":"YulIdentifier","src":"7902:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7890:3:28"},"nodeType":"YulFunctionCall","src":"7890:18:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7874:2:28"},"nodeType":"YulFunctionCall","src":"7874:35:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7864:6:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3441,"isOffset":false,"isSlot":false,"src":"7839:6:28","valueSize":1},{"declaration":3441,"isOffset":false,"isSlot":false,"src":"7894:6:28","valueSize":1},{"declaration":3444,"isOffset":false,"isSlot":false,"src":"7864:6:28","valueSize":1},{"declaration":3439,"isOffset":false,"isSlot":false,"src":"7902:5:28","valueSize":1},{"declaration":3437,"isOffset":false,"isSlot":false,"src":"7825:4:28","valueSize":1}],"id":3446,"nodeType":"InlineAssembly","src":"7779:140:28"}]},"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"7292:143:28","text":" @dev Inserts a boolean value shifted by an offset into a 256 bit word, replacing the old value. Returns the new\n word."},"id":3448,"implemented":true,"kind":"function","modifiers":[],"name":"insertBool","nodeType":"FunctionDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3448,"src":"7469:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7469:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3448,"src":"7491:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3438,"name":"bool","nodeType":"ElementaryTypeName","src":"7491:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3448,"src":"7511:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7459:72:28"},"returnParameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3448,"src":"7555:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7555:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7554:16:28"},"scope":3568,"src":"7440:485:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3493,"nodeType":"Block","src":"8073:481:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"8092:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323536","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8101:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"8092:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3461,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8106:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"8106:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3457,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8083:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8083:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3464,"nodeType":"ExpressionStatement","src":"8083:44:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"8301:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8314:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8301:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"8319:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"hexValue":"323535","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8341:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8346:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3474,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"8352:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8346:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3470,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"8332:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5589_$","typeString":"type(library Math)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","referencedDeclaration":5492,"src":"8332:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8332:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8319:40:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8301:58:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3479,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8361:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"8361:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3465,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8292:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8292:90:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3482,"nodeType":"ExpressionStatement","src":"8292:90:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8500:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3485,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"8509:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8500:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8500:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3489,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8525:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CODEC_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":440,"src":"8525:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3483,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8491:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8491:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"ExpressionStatement","src":"8491:56:28"}]},"id":3494,"implemented":true,"kind":"function","modifiers":[],"name":"_validateEncodingParams","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3494,"src":"7989:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"7989:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3494,"src":"8012:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"8012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3494,"src":"8036:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:80:28"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[],"src":"8073:0:28"},"scope":3568,"src":"7947:607:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3566,"nodeType":"Block","src":"8685:988:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"8704:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323536","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8713:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"8704:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3507,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8718:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"8718:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3503,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8695:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8695:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3510,"nodeType":"ExpressionStatement","src":"8695:44:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8913:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8926:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8913:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"8931:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"hexValue":"323535","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8953:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3520,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"8964:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8958:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3516,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"8944:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5589_$","typeString":"type(library Math)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"min","nodeType":"MemberAccess","referencedDeclaration":5492,"src":"8944:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8944:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8931:40:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8913:58:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3525,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8973:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"8973:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3511,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8904:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8904:90:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"ExpressionStatement","src":"8904:90:28"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"9075:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9075:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3564,"nodeType":"Block","src":"9341:326:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"9598:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9606:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9598:9:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3547,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"9589:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5589_$","typeString":"type(library Math)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"9589:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9589:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"9613:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9625:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9613:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9612:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9589:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9631:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9589:43:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3560,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9634:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CODEC_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":440,"src":"9634:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"9580:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9580:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"ExpressionStatement","src":"9580:76:28"}]},"id":3565,"nodeType":"IfStatement","src":"9071:596:28","trueBody":{"id":3545,"nodeType":"Block","src":"9087:248:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"9271:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"9281:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9293:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9281:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9280:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9271:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9299:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9271:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3541,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9302:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CODEC_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":440,"src":"9302:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3532,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"9262:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9262:62:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3544,"nodeType":"ExpressionStatement","src":"9262:62:28"}]}}]},"id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"_validateEncodingParams","nodeType":"FunctionDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3567,"src":"8602:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3495,"name":"int256","nodeType":"ElementaryTypeName","src":"8602:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3567,"src":"8624:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8624:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3567,"src":"8648:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"8648:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8592:79:28"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[],"src":"8685:0:28"},"scope":3568,"src":"8560:1113:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3569,"src":"2017:7658:28"}],"src":"688:8988:28"},"id":28},"contracts/helpers/WordCodecHelpers.sol":{"ast":{"absolutePath":"contracts/helpers/WordCodecHelpers.sol","exportedSymbols":{"WordCodecHelpers":[3642]},"id":3643,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3570,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:29"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3642,"linearizedBaseContracts":[3642],"name":"WordCodecHelpers","nodeType":"ContractDefinition","nodes":[{"body":{"id":3606,"nodeType":"Block","src":"896:118:29","statements":[{"assignments":[3582],"declarations":[{"constant":false,"id":3582,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":3606,"src":"906:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3589,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"922:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3584,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"927:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"922:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"921:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"921:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"906:35:29"},{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"951:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3595,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"981:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"973:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:29","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"973:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"989:17:29","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"991:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3598,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"999:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"991:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"990:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"973:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"965:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"965:7:29","typeDescriptions":{}}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"965:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"951:56:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3605,"nodeType":"ExpressionStatement","src":"951:56:29"}]},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"clearWordAtPosition","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":3607,"src":"782:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"782:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3574,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3607,"src":"804:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"804:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3607,"src":"828:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"772:79:29"},"returnParameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":3607,"src":"875:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"875:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"874:21:29"},"scope":3642,"src":"744:270:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3640,"nodeType":"Block","src":"1197:235:29","statements":[{"assignments":[3621],"declarations":[{"constant":false,"id":3621,"mutability":"mutable","name":"clearedOldState","nodeType":"VariableDeclaration","scope":3640,"src":"1207:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1207:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3627,"initialValue":{"arguments":[{"id":3623,"name":"oldPoolState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"1253:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3624,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"1267:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3625,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1275:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3622,"name":"clearWordAtPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1233:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256,uint256) pure returns (bytes32)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1233:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1207:78:29"},{"assignments":[3629],"declarations":[{"constant":false,"id":3629,"mutability":"mutable","name":"clearedNewState","nodeType":"VariableDeclaration","scope":3640,"src":"1295:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1295:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3635,"initialValue":{"arguments":[{"id":3631,"name":"newPoolState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"1341:12:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3632,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"1355:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3633,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1363:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3630,"name":"clearWordAtPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1321:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256,uint256) pure returns (bytes32)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1321:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1295:78:29"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"clearedNewState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"1391:15:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3637,"name":"clearedOldState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"1410:15:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1391:34:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3619,"id":3639,"nodeType":"Return","src":"1384:41:29"}]},"id":3641,"implemented":true,"kind":"function","modifiers":[],"name":"isOtherStateUnchanged","nodeType":"FunctionDefinition","parameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"oldPoolState","nodeType":"VariableDeclaration","scope":3641,"src":"1060:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1060:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"newPoolState","nodeType":"VariableDeclaration","scope":3641,"src":"1090:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1090:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":3641,"src":"1120:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3615,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3641,"src":"1144:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1050:117:29"},"returnParameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3641,"src":"1191:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3617,"name":"bool","nodeType":"ElementaryTypeName","src":"1191:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1190:6:29"},"scope":3642,"src":"1020:412:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3643,"src":"713:721:29"}],"src":"688:747:29"},"id":29},"contracts/math/FixedPoint.sol":{"ast":{"absolutePath":"contracts/math/FixedPoint.sol","exportedSymbols":{"FixedPoint":[4020]},"id":4021,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3644,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:30"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":3645,"nodeType":"ImportDirective","scope":4021,"sourceUnit":574,"src":"713:90:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/math/LogExpMath.sol","file":"./LogExpMath.sol","id":3646,"nodeType":"ImportDirective","scope":4021,"sourceUnit":5319,"src":"805:26:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4020,"linearizedBaseContracts":[4020],"name":"FixedPoint","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3649,"mutability":"constant","name":"ONE","nodeType":"VariableDeclaration","scope":4020,"src":"956:36:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:4:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"id":3654,"mutability":"constant","name":"TWO","nodeType":"VariableDeclaration","scope":4020,"src":"1019:39:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3652,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"1055:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1051:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":3659,"mutability":"constant","name":"FOUR","nodeType":"VariableDeclaration","scope":4020,"src":"1064:40:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1097:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3657,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"1101:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1097:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":3662,"mutability":"constant","name":"MAX_POW_RELATIVE_ERROR","nodeType":"VariableDeclaration","scope":4020,"src":"1110:56:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1161:5:30","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"constant":true,"id":3665,"mutability":"constant","name":"MIN_POW_BASE_FREE_EXPONENT","nodeType":"VariableDeclaration","scope":4020,"src":"1275:61:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e37653138","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1330:6:30","typeDescriptions":{"typeIdentifier":"t_rational_700000000000000000_by_1","typeString":"int_const 700000000000000000"},"value":"0.7e18"},"visibility":"internal"},{"body":{"id":3690,"nodeType":"Block","src":"1410:172:30","statements":[{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":3690,"src":"1493:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3679,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"1505:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1509:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1505:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1493:17:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1529:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"1534:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1529:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3684,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1537:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":71,"src":"1537:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3680,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1520:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1520:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3687,"nodeType":"ExpressionStatement","src":"1520:37:30"},{"expression":{"id":3688,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1574:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3673,"id":3689,"nodeType":"Return","src":"1567:8:30"}]},"id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3691,"src":"1356:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3691,"src":"1367:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1355:22:30"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3691,"src":"1401:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1401:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1400:9:30"},"scope":4020,"src":"1343:239:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"1655:172:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"1747:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"1752:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1747:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3704,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1755:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":74,"src":"1755:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3700,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1738:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1738:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3707,"nodeType":"ExpressionStatement","src":"1738:37:30"},{"assignments":[3709],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":3716,"src":"1785:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"1797:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"1801:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1797:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1785:17:30"},{"expression":{"id":3714,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"1819:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3699,"id":3715,"nodeType":"Return","src":"1812:8:30"}]},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3717,"src":"1601:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3717,"src":"1612:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1600:22:30"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3717,"src":"1646:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1646:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1645:9:30"},"scope":4020,"src":"1588:239:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"1904:138:30","statements":[{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":3750,"src":"1914:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1914:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3731,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3728,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"1932:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3729,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1936:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1932:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1914:23:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"1956:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1956:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1966:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"1976:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1966:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3739,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"1981:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1966:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1956:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3742,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1984:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MUL_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":80,"src":"1984:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3732,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1947:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1947:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3745,"nodeType":"ExpressionStatement","src":"1947:57:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"2022:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3747,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2032:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2022:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3725,"id":3749,"nodeType":"Return","src":"2015:20:30"}]},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"mulDown","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3751,"src":"1850:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1850:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3751,"src":"1861:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1849:22:30"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3751,"src":"1895:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1894:9:30"},"scope":4020,"src":"1833:209:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"2124:638:30","statements":[{"assignments":[3761],"declarations":[{"constant":false,"id":3761,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":3781,"src":"2134:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3765,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2152:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"2156:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2152:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2134:23:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2176:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2181:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2176:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"2186:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2196:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2186:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"2201:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2186:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2176:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3776,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2204:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MUL_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":80,"src":"2204:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3766,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2167:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2167:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3779,"nodeType":"ExpressionStatement","src":"2167:57:30"},{"AST":{"nodeType":"YulBlock","src":"2659:97:30","statements":[{"nodeType":"YulAssignment","src":"2673:73:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2701:7:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2694:6:30"},"nodeType":"YulFunctionCall","src":"2694:15:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2687:6:30"},"nodeType":"YulFunctionCall","src":"2687:23:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2724:7:30"},{"kind":"number","nodeType":"YulLiteral","src":"2733:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2720:3:30"},"nodeType":"YulFunctionCall","src":"2720:15:30"},{"name":"ONE","nodeType":"YulIdentifier","src":"2737:3:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2716:3:30"},"nodeType":"YulFunctionCall","src":"2716:25:30"},{"kind":"number","nodeType":"YulLiteral","src":"2743:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:30"},"nodeType":"YulFunctionCall","src":"2712:33:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2683:3:30"},"nodeType":"YulFunctionCall","src":"2683:63:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2673:6:30"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":false,"src":"2737:3:30","valueSize":1},{"declaration":3761,"isOffset":false,"isSlot":false,"src":"2701:7:30","valueSize":1},{"declaration":3761,"isOffset":false,"isSlot":false,"src":"2724:7:30","valueSize":1},{"declaration":3758,"isOffset":false,"isSlot":false,"src":"2673:6:30","valueSize":1}],"id":3780,"nodeType":"InlineAssembly","src":"2650:106:30"}]},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"mulUp","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3782,"src":"2063:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3782,"src":"2074:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2074:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2062:22:30"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3782,"src":"2108:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2107:16:30"},"scope":4020,"src":"2048:714:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"2839:211:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"2858:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2858:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3795,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2866:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":83,"src":"2866:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3791,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2849:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2849:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3798,"nodeType":"ExpressionStatement","src":"2849:38:30"},{"assignments":[3800],"declarations":[{"constant":false,"id":3800,"mutability":"mutable","name":"aInflated","nodeType":"VariableDeclaration","scope":3823,"src":"2898:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3804,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"2918:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3802,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2922:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2918:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2898:27:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"2944:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2949:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2944:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"2954:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"2966:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3812,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2971:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2944:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3815,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2976:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DIV_INTERNAL","nodeType":"MemberAccess","referencedDeclaration":86,"src":"2976:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3805,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2935:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2935:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3818,"nodeType":"ExpressionStatement","src":"2935:61:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3030:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"3042:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3030:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3790,"id":3822,"nodeType":"Return","src":"3023:20:30"}]},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3824,"src":"2785:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3824,"src":"2796:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2784:22:30"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3824,"src":"2830:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"2830:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2829:9:30"},"scope":4020,"src":"2768:282:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"3132:703:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"3151:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3156:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3151:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3837,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3159:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":83,"src":"3159:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3833,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"3142:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3142:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3840,"nodeType":"ExpressionStatement","src":"3142:38:30"},{"assignments":[3842],"declarations":[{"constant":false,"id":3842,"mutability":"mutable","name":"aInflated","nodeType":"VariableDeclaration","scope":3862,"src":"3191:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3846,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3211:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3844,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3215:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3211:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3191:27:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3237:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3242:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3237:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"3247:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3259:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3247:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3854,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3264:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3247:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3237:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3857,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3269:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DIV_INTERNAL","nodeType":"MemberAccess","referencedDeclaration":86,"src":"3269:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3847,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"3228:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"3228:61:30"},{"AST":{"nodeType":"YulBlock","src":"3730:99:30","statements":[{"nodeType":"YulAssignment","src":"3744:75:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"aInflated","nodeType":"YulIdentifier","src":"3772:9:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3765:6:30"},"nodeType":"YulFunctionCall","src":"3765:17:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3758:6:30"},"nodeType":"YulFunctionCall","src":"3758:25:30"},{"arguments":[{"arguments":[{"arguments":[{"name":"aInflated","nodeType":"YulIdentifier","src":"3797:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3808:1:30","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3793:3:30"},"nodeType":"YulFunctionCall","src":"3793:17:30"},{"name":"b","nodeType":"YulIdentifier","src":"3812:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3789:3:30"},"nodeType":"YulFunctionCall","src":"3789:25:30"},{"kind":"number","nodeType":"YulLiteral","src":"3816:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3785:3:30"},"nodeType":"YulFunctionCall","src":"3785:33:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3754:3:30"},"nodeType":"YulFunctionCall","src":"3754:65:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3744:6:30"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3842,"isOffset":false,"isSlot":false,"src":"3772:9:30","valueSize":1},{"declaration":3842,"isOffset":false,"isSlot":false,"src":"3797:9:30","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"3812:1:30","valueSize":1},{"declaration":3831,"isOffset":false,"isSlot":false,"src":"3744:6:30","valueSize":1}],"id":3861,"nodeType":"InlineAssembly","src":"3721:108:30"}]},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"divUp","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3863,"src":"3071:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3071:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3863,"src":"3082:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3070:22:30"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3863,"src":"3116:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:16:30"},"scope":4020,"src":"3056:779:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3939,"nodeType":"Block","src":"4138:681:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3873,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4306:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3874,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"4311:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4306:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4359:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3880,"name":"TWO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"4364:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4359:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4424:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3889,"name":"FOUR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"4429:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4424:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3935,"nodeType":"Block","src":"4540:273:30","statements":[{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"raw","nodeType":"VariableDeclaration","scope":3935,"src":"4554:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4554:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3911,"initialValue":{"arguments":[{"id":3908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4583:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3909,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"4586:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3906,"name":"LogExpMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"4568:10:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LogExpMath_$5318_$","typeString":"type(library LogExpMath)"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pow","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"4568:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4554:34:30"},{"assignments":[3913],"declarations":[{"constant":false,"id":3913,"mutability":"mutable","name":"maxError","nodeType":"VariableDeclaration","scope":3935,"src":"4602:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3921,"initialValue":{"arguments":[{"arguments":[{"id":3916,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"4631:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3917,"name":"MAX_POW_RELATIVE_ERROR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"4636:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3915,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"4625:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4625:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4661:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3914,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"4621:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4621:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4602:61:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"4682:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3923,"name":"maxError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"4688:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4682:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3933,"nodeType":"Block","src":"4745:58:30","statements":[{"expression":{"arguments":[{"id":3929,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"4774:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3930,"name":"maxError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"4779:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3928,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4770:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4770:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3872,"id":3932,"nodeType":"Return","src":"4763:25:30"}]},"id":3934,"nodeType":"IfStatement","src":"4678:125:30","trueBody":{"id":3927,"nodeType":"Block","src":"4698:41:30","statements":[{"expression":{"hexValue":"30","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4723:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3872,"id":3926,"nodeType":"Return","src":"4716:8:30"}]}}]},"id":3936,"nodeType":"IfStatement","src":"4420:393:30","trueBody":{"id":3903,"nodeType":"Block","src":"4435:99:30","statements":[{"assignments":[3892],"declarations":[{"constant":false,"id":3892,"mutability":"mutable","name":"square","nodeType":"VariableDeclaration","scope":3903,"src":"4449:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3897,"initialValue":{"arguments":[{"id":3894,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4474:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3895,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4477:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3893,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4466:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4466:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4449:30:30"},{"expression":{"arguments":[{"id":3899,"name":"square","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"4508:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3900,"name":"square","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"4516:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3898,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4500:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4500:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3872,"id":3902,"nodeType":"Return","src":"4493:30:30"}]}},"id":3937,"nodeType":"IfStatement","src":"4355:458:30","trueBody":{"id":3887,"nodeType":"Block","src":"4369:45:30","statements":[{"expression":{"arguments":[{"id":3883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4398:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3884,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4401:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3882,"name":"mulDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4390:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4390:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3872,"id":3886,"nodeType":"Return","src":"4383:20:30"}]}},"id":3938,"nodeType":"IfStatement","src":"4302:511:30","trueBody":{"id":3878,"nodeType":"Block","src":"4316:33:30","statements":[{"expression":{"id":3876,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"4337:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3872,"id":3877,"nodeType":"Return","src":"4330:8:30"}]}}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"3841:221:30","text":" @dev Returns x^y, assuming both are fixed point numbers, rounding down. The result is guaranteed to not be above\n the true value (that is, the error function expected - actual is always positive)."},"id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"powDown","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3940,"src":"4084:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4084:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3940,"src":"4095:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"4095:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4083:22:30"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3940,"src":"4129:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4128:9:30"},"scope":4020,"src":"4067:752:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4008,"nodeType":"Block","src":"5118:576:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"5286:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3951,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"5291:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"5339:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3957,"name":"TWO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"5344:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5339:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"5402:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3966,"name":"FOUR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"5407:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5402:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4004,"nodeType":"Block","src":"5514:174:30","statements":[{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"raw","nodeType":"VariableDeclaration","scope":4004,"src":"5528:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"5528:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3988,"initialValue":{"arguments":[{"id":3985,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5557:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3986,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"5560:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3983,"name":"LogExpMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"5542:10:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LogExpMath_$5318_$","typeString":"type(library LogExpMath)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pow","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"5542:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5528:34:30"},{"assignments":[3990],"declarations":[{"constant":false,"id":3990,"mutability":"mutable","name":"maxError","nodeType":"VariableDeclaration","scope":4004,"src":"5576:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3989,"name":"uint256","nodeType":"ElementaryTypeName","src":"5576:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3998,"initialValue":{"arguments":[{"arguments":[{"id":3993,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"5605:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3994,"name":"MAX_POW_RELATIVE_ERROR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5610:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3992,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"5599:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5599:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3991,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"5595:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5595:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5576:61:30"},{"expression":{"arguments":[{"id":4000,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"5663:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4001,"name":"maxError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"5668:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3999,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"5659:3:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5659:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":4003,"nodeType":"Return","src":"5652:25:30"}]},"id":4005,"nodeType":"IfStatement","src":"5398:290:30","trueBody":{"id":3980,"nodeType":"Block","src":"5413:95:30","statements":[{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"square","nodeType":"VariableDeclaration","scope":3980,"src":"5427:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"5427:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3974,"initialValue":{"arguments":[{"id":3971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5450:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3972,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5453:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3970,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"5444:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5444:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5427:28:30"},{"expression":{"arguments":[{"id":3976,"name":"square","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"5482:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3977,"name":"square","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"5490:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3975,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"5476:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5476:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":3979,"nodeType":"Return","src":"5469:28:30"}]}},"id":4006,"nodeType":"IfStatement","src":"5335:353:30","trueBody":{"id":3964,"nodeType":"Block","src":"5349:43:30","statements":[{"expression":{"arguments":[{"id":3960,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5376:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3961,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5379:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3959,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"5370:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5370:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":3963,"nodeType":"Return","src":"5363:18:30"}]}},"id":4007,"nodeType":"IfStatement","src":"5282:406:30","trueBody":{"id":3955,"nodeType":"Block","src":"5296:33:30","statements":[{"expression":{"id":3953,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"5317:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":3954,"nodeType":"Return","src":"5310:8:30"}]}}]},"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"4825:219:30","text":" @dev Returns x^y, assuming both are fixed point numbers, rounding up. The result is guaranteed to not be below\n the true value (that is, the error function expected - actual is always negative)."},"id":4009,"implemented":true,"kind":"function","modifiers":[],"name":"powUp","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4009,"src":"5064:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"5064:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4009,"src":"5075:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5063:22:30"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4009,"src":"5109:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5109:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5108:9:30"},"scope":4020,"src":"5049:645:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4018,"nodeType":"Block","src":"6047:160:30","statements":[{"AST":{"nodeType":"YulBlock","src":"6139:62:30","statements":[{"nodeType":"YulAssignment","src":"6153:38:30","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6170:1:30"},{"name":"ONE","nodeType":"YulIdentifier","src":"6173:3:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6167:2:30"},"nodeType":"YulFunctionCall","src":"6167:10:30"},{"arguments":[{"name":"ONE","nodeType":"YulIdentifier","src":"6183:3:30"},{"name":"x","nodeType":"YulIdentifier","src":"6188:1:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6179:3:30"},"nodeType":"YulFunctionCall","src":"6179:11:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6163:3:30"},"nodeType":"YulFunctionCall","src":"6163:28:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6153:6:30"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3649,"isOffset":false,"isSlot":false,"src":"6173:3:30","valueSize":1},{"declaration":3649,"isOffset":false,"isSlot":false,"src":"6183:3:30","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"6153:6:30","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"6170:1:30","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"6188:1:30","valueSize":1}],"id":4017,"nodeType":"InlineAssembly","src":"6130:71:30"}]},"documentation":{"id":4010,"nodeType":"StructuredDocumentation","src":"5700:272:30","text":" @dev Returns the complement of a value (1 - x), capped to 0 if x is larger than 1.\n Useful when computing the complement for values with some level of relative error, as it strips this error and\n prevents intermediate negative values."},"id":4019,"implemented":true,"kind":"function","modifiers":[],"name":"complement","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4019,"src":"5997:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5996:11:30"},"returnParameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4019,"src":"6031:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"6031:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6030:16:30"},"scope":4020,"src":"5977:230:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4021,"src":"888:5321:30"}],"src":"688:5522:30"},"id":30},"contracts/math/LogExpMath.sol":{"ast":{"absolutePath":"contracts/math/LogExpMath.sol","exportedSymbols":{"LogExpMath":[5318]},"id":5319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4022,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"1094:23:31"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":4023,"nodeType":"ImportDirective","scope":5319,"sourceUnit":574,"src":"1119:90:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"1234:446:31","text":" @dev Exponentiation and logarithm functions for 18 decimal fixed point numbers (both base and exponent/argument).\n Exponentiation and logarithm with arbitrary bases (x^y and log_x(y)) are implemented by conversion to natural\n exponentiation and logarithm (where the base is Euler's number).\n @author Fernando Martinelli - @fernandomartinelli\n @author Sergio Yuhjtman - @sergioyuhjtman\n @author Daniel Fernandez - @dmf7z"},"fullyImplemented":true,"id":5318,"linearizedBaseContracts":[5318],"name":"LogExpMath","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4027,"mutability":"constant","name":"ONE_18","nodeType":"VariableDeclaration","scope":5318,"src":"1961:29:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4025,"name":"int256","nodeType":"ElementaryTypeName","src":"1961:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653138","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1986:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"id":4030,"mutability":"constant","name":"ONE_20","nodeType":"VariableDeclaration","scope":5318,"src":"2151:29:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4028,"name":"int256","nodeType":"ElementaryTypeName","src":"2151:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653230","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:4:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"value":"1e20"},"visibility":"internal"},{"constant":true,"id":4033,"mutability":"constant","name":"ONE_36","nodeType":"VariableDeclaration","scope":5318,"src":"2186:29:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4031,"name":"int256","nodeType":"ElementaryTypeName","src":"2186:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653336","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2211:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"visibility":"internal"},{"constant":true,"id":4036,"mutability":"constant","name":"MAX_NATURAL_EXPONENT","nodeType":"VariableDeclaration","scope":5318,"src":"2732:45:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4034,"name":"int256","nodeType":"ElementaryTypeName","src":"2732:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313330653138","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2771:6:31","typeDescriptions":{"typeIdentifier":"t_rational_130000000000000000000_by_1","typeString":"int_const 130000000000000000000"},"value":"130e18"},"visibility":"internal"},{"constant":true,"id":4040,"mutability":"constant","name":"MIN_NATURAL_EXPONENT","nodeType":"VariableDeclaration","scope":5318,"src":"2783:45:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4037,"name":"int256","nodeType":"ElementaryTypeName","src":"2783:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2822:6:31","subExpression":{"hexValue":"3431653138","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:5:31","typeDescriptions":{"typeIdentifier":"t_rational_41000000000000000000_by_1","typeString":"int_const 41000000000000000000"},"value":"41e18"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_41000000000000000000_by_1","typeString":"int_const -41000000000000000000"}},"visibility":"internal"},{"constant":true,"id":4045,"mutability":"constant","name":"LN_36_LOWER_BOUND","nodeType":"VariableDeclaration","scope":5318,"src":"2979:49:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4041,"name":"int256","nodeType":"ElementaryTypeName","src":"2979:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4042,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"3015:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31653137","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3024:4:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"1e17"},"src":"3015:13:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":true,"id":4050,"mutability":"constant","name":"LN_36_UPPER_BOUND","nodeType":"VariableDeclaration","scope":5318,"src":"3034:49:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4046,"name":"int256","nodeType":"ElementaryTypeName","src":"3034:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4047,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"3070:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31653137","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3079:4:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"1e17"},"src":"3070:13:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":true,"id":4060,"mutability":"constant","name":"MILD_EXPONENT_BOUND","nodeType":"VariableDeclaration","scope":5318,"src":"3090:63:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"3090:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3129:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323534","id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3132:3:31","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"src":"3129:6:31","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":4057,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"3146:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3138:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"3138:7:31","typeDescriptions":{}}},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3138:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3129:24:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":4063,"mutability":"constant","name":"x0","nodeType":"VariableDeclaration","scope":5318,"src":"3188:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4061,"name":"int256","nodeType":"ElementaryTypeName","src":"3188:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313238303030303030303030303030303030303030","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3209:21:31","typeDescriptions":{"typeIdentifier":"t_rational_128000000000000000000_by_1","typeString":"int_const 128000000000000000000"},"value":"128000000000000000000"},"visibility":"internal"},{"constant":true,"id":4066,"mutability":"constant","name":"a0","nodeType":"VariableDeclaration","scope":5318,"src":"3244:77:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4064,"name":"int256","nodeType":"ElementaryTypeName","src":"3244:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3338383737303834303539393435393530393232323030303030303030303030303030303030303030303030303030303030303030303030","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3265:56:31","typeDescriptions":{"typeIdentifier":"t_rational_38877084059945950922200000000000000000000000000000000000_by_1","typeString":"int_const 3887...(48 digits omitted)...0000"},"value":"38877084059945950922200000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":4069,"mutability":"constant","name":"x1","nodeType":"VariableDeclaration","scope":5318,"src":"3352:41:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4067,"name":"int256","nodeType":"ElementaryTypeName","src":"3352:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3634303030303030303030303030303030303030","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3373:20:31","typeDescriptions":{"typeIdentifier":"t_rational_64000000000000000000_by_1","typeString":"int_const 64000000000000000000"},"value":"64000000000000000000"},"visibility":"internal"},{"constant":true,"id":4072,"mutability":"constant","name":"a1","nodeType":"VariableDeclaration","scope":5318,"src":"3407:49:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4070,"name":"int256","nodeType":"ElementaryTypeName","src":"3407:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"36323335313439303830383131363136383832393130303030303030","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3428:28:31","typeDescriptions":{"typeIdentifier":"t_rational_6235149080811616882910000000_by_1","typeString":"int_const 6235149080811616882910000000"},"value":"6235149080811616882910000000"},"visibility":"internal"},{"constant":true,"id":4075,"mutability":"constant","name":"x2","nodeType":"VariableDeclaration","scope":5318,"src":"3516:43:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4073,"name":"int256","nodeType":"ElementaryTypeName","src":"3516:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"33323030303030303030303030303030303030303030","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:22:31","typeDescriptions":{"typeIdentifier":"t_rational_3200000000000000000000_by_1","typeString":"int_const 3200000000000000000000"},"value":"3200000000000000000000"},"visibility":"internal"},{"constant":true,"id":4078,"mutability":"constant","name":"a2","nodeType":"VariableDeclaration","scope":5318,"src":"3573:55:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4076,"name":"int256","nodeType":"ElementaryTypeName","src":"3573:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"37383936323936303138323638303639353136313030303030303030303030303030","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:34:31","typeDescriptions":{"typeIdentifier":"t_rational_7896296018268069516100000000000000_by_1","typeString":"int_const 7896...(26 digits omitted)...0000"},"value":"7896296018268069516100000000000000"},"visibility":"internal"},{"constant":true,"id":4081,"mutability":"constant","name":"x3","nodeType":"VariableDeclaration","scope":5318,"src":"3645:43:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4079,"name":"int256","nodeType":"ElementaryTypeName","src":"3645:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31363030303030303030303030303030303030303030","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3666:22:31","typeDescriptions":{"typeIdentifier":"t_rational_1600000000000000000000_by_1","typeString":"int_const 1600000000000000000000"},"value":"1600000000000000000000"},"visibility":"internal"},{"constant":true,"id":4084,"mutability":"constant","name":"a3","nodeType":"VariableDeclaration","scope":5318,"src":"3702:48:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4082,"name":"int256","nodeType":"ElementaryTypeName","src":"3702:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"383838363131303532303530373837323633363736303030303030","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3723:27:31","typeDescriptions":{"typeIdentifier":"t_rational_888611052050787263676000000_by_1","typeString":"int_const 888611052050787263676000000"},"value":"888611052050787263676000000"},"visibility":"internal"},{"constant":true,"id":4087,"mutability":"constant","name":"x4","nodeType":"VariableDeclaration","scope":5318,"src":"3767:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4085,"name":"int256","nodeType":"ElementaryTypeName","src":"3767:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"383030303030303030303030303030303030303030","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3788:21:31","typeDescriptions":{"typeIdentifier":"t_rational_800000000000000000000_by_1","typeString":"int_const 800000000000000000000"},"value":"800000000000000000000"},"visibility":"internal"},{"constant":true,"id":4090,"mutability":"constant","name":"a4","nodeType":"VariableDeclaration","scope":5318,"src":"3823:45:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4088,"name":"int256","nodeType":"ElementaryTypeName","src":"3823:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"323938303935373938373034313732383237343734303030","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3844:24:31","typeDescriptions":{"typeIdentifier":"t_rational_298095798704172827474000_by_1","typeString":"int_const 298095798704172827474000"},"value":"298095798704172827474000"},"visibility":"internal"},{"constant":true,"id":4093,"mutability":"constant","name":"x5","nodeType":"VariableDeclaration","scope":5318,"src":"3885:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4091,"name":"int256","nodeType":"ElementaryTypeName","src":"3885:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"343030303030303030303030303030303030303030","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3906:21:31","typeDescriptions":{"typeIdentifier":"t_rational_400000000000000000000_by_1","typeString":"int_const 400000000000000000000"},"value":"400000000000000000000"},"visibility":"internal"},{"constant":true,"id":4096,"mutability":"constant","name":"a5","nodeType":"VariableDeclaration","scope":5318,"src":"3941:43:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4094,"name":"int256","nodeType":"ElementaryTypeName","src":"3941:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"35343539383135303033333134343233393037383130","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:22:31","typeDescriptions":{"typeIdentifier":"t_rational_5459815003314423907810_by_1","typeString":"int_const 5459815003314423907810"},"value":"5459815003314423907810"},"visibility":"internal"},{"constant":true,"id":4099,"mutability":"constant","name":"x6","nodeType":"VariableDeclaration","scope":5318,"src":"4001:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4097,"name":"int256","nodeType":"ElementaryTypeName","src":"4001:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"323030303030303030303030303030303030303030","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4022:21:31","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000000000_by_1","typeString":"int_const 200000000000000000000"},"value":"200000000000000000000"},"visibility":"internal"},{"constant":true,"id":4102,"mutability":"constant","name":"a6","nodeType":"VariableDeclaration","scope":5318,"src":"4057:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4100,"name":"int256","nodeType":"ElementaryTypeName","src":"4057:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"373338393035363039383933303635303232373233","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4078:21:31","typeDescriptions":{"typeIdentifier":"t_rational_738905609893065022723_by_1","typeString":"int_const 738905609893065022723"},"value":"738905609893065022723"},"visibility":"internal"},{"constant":true,"id":4105,"mutability":"constant","name":"x7","nodeType":"VariableDeclaration","scope":5318,"src":"4116:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4103,"name":"int256","nodeType":"ElementaryTypeName","src":"4116:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313030303030303030303030303030303030303030","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:21:31","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"value":"100000000000000000000"},"visibility":"internal"},{"constant":true,"id":4108,"mutability":"constant","name":"a7","nodeType":"VariableDeclaration","scope":5318,"src":"4172:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4106,"name":"int256","nodeType":"ElementaryTypeName","src":"4172:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"323731383238313832383435393034353233353336","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4193:21:31","typeDescriptions":{"typeIdentifier":"t_rational_271828182845904523536_by_1","typeString":"int_const 271828182845904523536"},"value":"271828182845904523536"},"visibility":"internal"},{"constant":true,"id":4111,"mutability":"constant","name":"x8","nodeType":"VariableDeclaration","scope":5318,"src":"4231:41:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4109,"name":"int256","nodeType":"ElementaryTypeName","src":"4231:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3530303030303030303030303030303030303030","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4252:20:31","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"},"value":"50000000000000000000"},"visibility":"internal"},{"constant":true,"id":4114,"mutability":"constant","name":"a8","nodeType":"VariableDeclaration","scope":5318,"src":"4287:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4112,"name":"int256","nodeType":"ElementaryTypeName","src":"4287:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313634383732313237303730303132383134363835","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:21:31","typeDescriptions":{"typeIdentifier":"t_rational_164872127070012814685_by_1","typeString":"int_const 164872127070012814685"},"value":"164872127070012814685"},"visibility":"internal"},{"constant":true,"id":4117,"mutability":"constant","name":"x9","nodeType":"VariableDeclaration","scope":5318,"src":"4346:41:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4115,"name":"int256","nodeType":"ElementaryTypeName","src":"4346:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3235303030303030303030303030303030303030","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4367:20:31","typeDescriptions":{"typeIdentifier":"t_rational_25000000000000000000_by_1","typeString":"int_const 25000000000000000000"},"value":"25000000000000000000"},"visibility":"internal"},{"constant":true,"id":4120,"mutability":"constant","name":"a9","nodeType":"VariableDeclaration","scope":5318,"src":"4402:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4118,"name":"int256","nodeType":"ElementaryTypeName","src":"4402:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313238343032353431363638373734313438343037","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4423:21:31","typeDescriptions":{"typeIdentifier":"t_rational_128402541668774148407_by_1","typeString":"int_const 128402541668774148407"},"value":"128402541668774148407"},"visibility":"internal"},{"constant":true,"id":4123,"mutability":"constant","name":"x10","nodeType":"VariableDeclaration","scope":5318,"src":"4461:42:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4121,"name":"int256","nodeType":"ElementaryTypeName","src":"4461:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3132353030303030303030303030303030303030","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4483:20:31","typeDescriptions":{"typeIdentifier":"t_rational_12500000000000000000_by_1","typeString":"int_const 12500000000000000000"},"value":"12500000000000000000"},"visibility":"internal"},{"constant":true,"id":4126,"mutability":"constant","name":"a10","nodeType":"VariableDeclaration","scope":5318,"src":"4518:43:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4124,"name":"int256","nodeType":"ElementaryTypeName","src":"4518:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313133333134383435333036363832363331363833","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4540:21:31","typeDescriptions":{"typeIdentifier":"t_rational_113314845306682631683_by_1","typeString":"int_const 113314845306682631683"},"value":"113314845306682631683"},"visibility":"internal"},{"constant":true,"id":4129,"mutability":"constant","name":"x11","nodeType":"VariableDeclaration","scope":5318,"src":"4579:41:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4127,"name":"int256","nodeType":"ElementaryTypeName","src":"4579:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"36323530303030303030303030303030303030","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4601:19:31","typeDescriptions":{"typeIdentifier":"t_rational_6250000000000000000_by_1","typeString":"int_const 6250000000000000000"},"value":"6250000000000000000"},"visibility":"internal"},{"constant":true,"id":4132,"mutability":"constant","name":"a11","nodeType":"VariableDeclaration","scope":5318,"src":"4635:43:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4130,"name":"int256","nodeType":"ElementaryTypeName","src":"4635:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313036343439343435383931373835393432393536","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4657:21:31","typeDescriptions":{"typeIdentifier":"t_rational_106449445891785942956_by_1","typeString":"int_const 106449445891785942956"},"value":"106449445891785942956"},"visibility":"internal"},{"body":{"id":4261,"nodeType":"Block","src":"4983:2128:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"4997:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5002:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4997:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4151,"nodeType":"IfStatement","src":"4993:131:31","trueBody":{"id":4150,"nodeType":"Block","src":"5005:119:31","statements":[{"expression":{"arguments":[{"id":4147,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"5106:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:31","typeDescriptions":{}}},"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5098:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4141,"id":4149,"nodeType":"Return","src":"5091:22:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5138:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5143:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5138:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4158,"nodeType":"IfStatement","src":"5134:45:31","trueBody":{"id":4157,"nodeType":"Block","src":"5146:33:31","statements":[{"expression":{"hexValue":"30","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4141,"id":4156,"nodeType":"Return","src":"5160:8:31"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5558:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5563:3:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"5558:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5570:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5558:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4165,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"5573:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"X_OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":89,"src":"5573:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4159,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"5549:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5549:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4168,"nodeType":"ExpressionStatement","src":"5549:47:31"},{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"x_int256","nodeType":"VariableDeclaration","scope":4261,"src":"5606:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4169,"name":"int256","nodeType":"ElementaryTypeName","src":"5606:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4175,"initialValue":{"arguments":[{"id":4173,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5631:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5624:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4171,"name":"int256","nodeType":"ElementaryTypeName","src":"5624:6:31","typeDescriptions":{}}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5624:9:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5606:27:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"5996:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4178,"name":"MILD_EXPONENT_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"6000:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5996:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4180,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6021:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Y_OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":92,"src":"6021:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4176,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"5987:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5987:57:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4183,"nodeType":"ExpressionStatement","src":"5987:57:31"},{"assignments":[4185],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"y_int256","nodeType":"VariableDeclaration","scope":4261,"src":"6054:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4184,"name":"int256","nodeType":"ElementaryTypeName","src":"6054:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4190,"initialValue":{"arguments":[{"id":4188,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"6079:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6072:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4186,"name":"int256","nodeType":"ElementaryTypeName","src":"6072:6:31","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6072:9:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6054:27:31"},{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"logx_times_y","nodeType":"VariableDeclaration","scope":4261,"src":"6092:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4191,"name":"int256","nodeType":"ElementaryTypeName","src":"6092:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4193,"nodeType":"VariableDeclarationStatement","src":"6092:19:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"6125:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4195,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6145:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6125:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6157:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4198,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"6168:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6157:28:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6125:60:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4236,"nodeType":"Block","src":"6741:64:31","statements":[{"expression":{"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6755:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4230,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6774:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4229,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"6770:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6770:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4232,"name":"y_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"6786:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6770:24:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6755:39:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4235,"nodeType":"ExpressionStatement","src":"6755:39:31"}]},"id":4237,"nodeType":"IfStatement","src":"6121:684:31","trueBody":{"id":4227,"nodeType":"Block","src":"6187:548:31","statements":[{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"ln_36_x","nodeType":"VariableDeclaration","scope":4227,"src":"6201:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4201,"name":"int256","nodeType":"ElementaryTypeName","src":"6201:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4206,"initialValue":{"arguments":[{"id":4204,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6225:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4203,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"6218:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6218:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6201:33:31"},{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6635:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"ln_36_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"6652:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4209,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6662:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6652:16:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6651:18:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4212,"name":"y_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"6672:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6651:29:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"ln_36_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"6685:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4215,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6695:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6685:16:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6684:18:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4218,"name":"y_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"6705:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6684:29:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6683:31:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4221,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6717:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6683:40:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6651:72:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6650:74:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6635:89:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4226,"nodeType":"ExpressionStatement","src":"6635:89:31"}]}},{"expression":{"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6814:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":4239,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6830:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6814:22:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4241,"nodeType":"ExpressionStatement","src":"6814:22:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4243,"name":"MIN_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"6932:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4244,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6956:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6932:36:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"6972:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4247,"name":"MAX_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"6988:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6972:36:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6932:76:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4250,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7022:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PRODUCT_OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":95,"src":"7022:28:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4242,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"6910:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6910:150:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4253,"nodeType":"ExpressionStatement","src":"6910:150:31"},{"expression":{"arguments":[{"arguments":[{"id":4257,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"7090:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4256,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7086:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7086:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7078:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"7078:7:31","typeDescriptions":{}}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7078:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4141,"id":4260,"nodeType":"Return","src":"7071:33:31"}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"4697:214:31","text":" @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\n Reverts if ln(x) * y is smaller than `MIN_NATURAL_EXPONENT`, or larger than `MAX_NATURAL_EXPONENT`."},"id":4262,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4262,"src":"4929:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"4929:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4262,"src":"4940:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4940:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4928:22:31"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4262,"src":"4974:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4973:9:31"},"scope":5318,"src":"4916:2195:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4688,"nodeType":"Block","src":"7379:5325:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7398:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4272,"name":"MIN_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"7403:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7398:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7427:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4275,"name":"MAX_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"7432:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7427:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7398:54:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4278,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7454:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_EXPONENT","nodeType":"MemberAccess","referencedDeclaration":98,"src":"7454:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4270,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"7389:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7389:89:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4281,"nodeType":"ExpressionStatement","src":"7389:89:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7493:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7497:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7493:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4297,"nodeType":"IfStatement","src":"7489:353:31","trueBody":{"id":4296,"nodeType":"Block","src":"7500:342:31","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4285,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"7804:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4286,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"7813:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7804:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7803:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"7827:2:31","subExpression":{"id":4290,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7828:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4289,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"7823:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7823:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7803:27:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:29:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4269,"id":4295,"nodeType":"Return","src":"7795:36:31"}]}},{"assignments":[4299],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"firstAN","nodeType":"VariableDeclaration","scope":4688,"src":"9143:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4298,"name":"int256","nodeType":"ElementaryTypeName","src":"9143:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4300,"nodeType":"VariableDeclarationStatement","src":"9143:14:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9171:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4302,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"9176:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9171:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4313,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9248:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4314,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"9253:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9248:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4329,"nodeType":"Block","src":"9321:66:31","statements":[{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"9335:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9345:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9335:11:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4328,"nodeType":"ExpressionStatement","src":"9335:11:31"}]},"id":4330,"nodeType":"IfStatement","src":"9244:143:31","trueBody":{"id":4324,"nodeType":"Block","src":"9257:58:31","statements":[{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9271:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4317,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"9276:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9271:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4319,"nodeType":"ExpressionStatement","src":"9271:7:31"},{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4320,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"9292:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4321,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"9302:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9292:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4323,"nodeType":"ExpressionStatement","src":"9292:12:31"}]}},"id":4331,"nodeType":"IfStatement","src":"9167:220:31","trueBody":{"id":4312,"nodeType":"Block","src":"9180:58:31","statements":[{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9194:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4305,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"9199:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9194:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4307,"nodeType":"ExpressionStatement","src":"9194:7:31"},{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"9215:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4309,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"9225:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9215:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4311,"nodeType":"ExpressionStatement","src":"9215:12:31"}]}},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9537:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"313030","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9542:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9537:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4335,"nodeType":"ExpressionStatement","src":"9537:8:31"},{"assignments":[4337],"declarations":[{"constant":false,"id":4337,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":4688,"src":"9758:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4336,"name":"int256","nodeType":"ElementaryTypeName","src":"9758:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4339,"initialValue":{"id":4338,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"9775:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"9758:23:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9796:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4341,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"9801:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9796:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4357,"nodeType":"IfStatement","src":"9792:92:31","trueBody":{"id":4356,"nodeType":"Block","src":"9805:79:31","statements":[{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4343,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9819:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4344,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"9824:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9819:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4346,"nodeType":"ExpressionStatement","src":"9819:7:31"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4347,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"9840:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"9851:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4349,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"9861:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9851:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9850:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4352,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"9867:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9850:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9840:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4355,"nodeType":"ExpressionStatement","src":"9840:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9897:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4359,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"9902:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9897:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"9893:92:31","trueBody":{"id":4374,"nodeType":"Block","src":"9906:79:31","statements":[{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9920:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4362,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"9925:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9920:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4364,"nodeType":"ExpressionStatement","src":"9920:7:31"},{"expression":{"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"9941:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"9952:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4367,"name":"a3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"9962:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9952:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9951:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4370,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"9968:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9951:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9941:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4373,"nodeType":"ExpressionStatement","src":"9941:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"9998:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4377,"name":"x4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10003:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9998:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"IfStatement","src":"9994:92:31","trueBody":{"id":4392,"nodeType":"Block","src":"10007:79:31","statements":[{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10021:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4380,"name":"x4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"10026:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10021:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4382,"nodeType":"ExpressionStatement","src":"10021:7:31"},{"expression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10042:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10053:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4385,"name":"a4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"10063:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10053:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10052:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4388,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10069:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10052:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10042:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4391,"nodeType":"ExpressionStatement","src":"10042:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10099:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4395,"name":"x5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10104:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10099:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4411,"nodeType":"IfStatement","src":"10095:92:31","trueBody":{"id":4410,"nodeType":"Block","src":"10108:79:31","statements":[{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10122:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4398,"name":"x5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10127:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10122:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4400,"nodeType":"ExpressionStatement","src":"10122:7:31"},{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4401,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10143:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10154:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4403,"name":"a5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"10164:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10154:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10153:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4406,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10170:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10153:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10143:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4409,"nodeType":"ExpressionStatement","src":"10143:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4412,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10200:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4413,"name":"x6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10205:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10200:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4429,"nodeType":"IfStatement","src":"10196:92:31","trueBody":{"id":4428,"nodeType":"Block","src":"10209:79:31","statements":[{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10223:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4416,"name":"x6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10228:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10223:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4418,"nodeType":"ExpressionStatement","src":"10223:7:31"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10244:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10255:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4421,"name":"a6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"10265:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10255:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10254:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4424,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10271:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10254:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10244:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4427,"nodeType":"ExpressionStatement","src":"10244:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10301:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4431,"name":"x7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"10306:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10301:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4447,"nodeType":"IfStatement","src":"10297:92:31","trueBody":{"id":4446,"nodeType":"Block","src":"10310:79:31","statements":[{"expression":{"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4433,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10324:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4434,"name":"x7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"10329:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10324:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4436,"nodeType":"ExpressionStatement","src":"10324:7:31"},{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4437,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10345:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10356:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4439,"name":"a7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"10366:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10356:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10355:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4442,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10372:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10355:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10345:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4445,"nodeType":"ExpressionStatement","src":"10345:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10402:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4449,"name":"x8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10407:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10402:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4465,"nodeType":"IfStatement","src":"10398:92:31","trueBody":{"id":4464,"nodeType":"Block","src":"10411:79:31","statements":[{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10425:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4452,"name":"x8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10430:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10425:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4454,"nodeType":"ExpressionStatement","src":"10425:7:31"},{"expression":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10446:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10457:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4457,"name":"a8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"10467:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10457:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10456:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4460,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10473:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10456:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10446:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4463,"nodeType":"ExpressionStatement","src":"10446:33:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10503:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4467,"name":"x9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"10508:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10503:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4483,"nodeType":"IfStatement","src":"10499:92:31","trueBody":{"id":4482,"nodeType":"Block","src":"10512:79:31","statements":[{"expression":{"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"10526:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4470,"name":"x9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"10531:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10526:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4472,"nodeType":"ExpressionStatement","src":"10526:7:31"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10547:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"10558:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4475,"name":"a9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"10568:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10558:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10557:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4478,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10574:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10557:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10547:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4481,"nodeType":"ExpressionStatement","src":"10547:33:31"}]}},{"assignments":[4485],"declarations":[{"constant":false,"id":4485,"mutability":"mutable","name":"seriesSum","nodeType":"VariableDeclaration","scope":4688,"src":"10895:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4484,"name":"int256","nodeType":"ElementaryTypeName","src":"10895:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4487,"initialValue":{"id":4486,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"10914:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10895:25:31"},{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"term","nodeType":"VariableDeclaration","scope":4688,"src":"10985:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4488,"name":"int256","nodeType":"ElementaryTypeName","src":"10985:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4490,"nodeType":"VariableDeclarationStatement","src":"10985:11:31"},{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4491,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11105:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4492,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11112:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11105:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4494,"nodeType":"ExpressionStatement","src":"11105:8:31"},{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4495,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11123:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4496,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11136:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11123:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4498,"nodeType":"ExpressionStatement","src":"11123:17:31"},{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11377:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4500,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11386:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4501,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11393:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11386:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11385:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4504,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11398:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11385:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11384:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11408:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11384:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11377:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4510,"nodeType":"ExpressionStatement","src":"11377:32:31"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11419:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4512,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11432:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11419:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4514,"nodeType":"ExpressionStatement","src":"11419:17:31"},{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4515,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11447:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4516,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11456:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4517,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11463:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11456:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11455:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4520,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11468:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11455:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11454:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11478:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"11454:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11447:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4526,"nodeType":"ExpressionStatement","src":"11447:32:31"},{"expression":{"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4527,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11489:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4528,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11502:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11489:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4530,"nodeType":"ExpressionStatement","src":"11489:17:31"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4531,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11517:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4532,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11526:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4533,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11533:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11526:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11525:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4536,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11538:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11525:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11524:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11548:1:31","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11524:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11517:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4542,"nodeType":"ExpressionStatement","src":"11517:32:31"},{"expression":{"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4543,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11559:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4544,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11572:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11559:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4546,"nodeType":"ExpressionStatement","src":"11559:17:31"},{"expression":{"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4547,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11587:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11596:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11603:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11596:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11595:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4552,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11608:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11595:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11594:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11618:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"11594:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11587:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4558,"nodeType":"ExpressionStatement","src":"11587:32:31"},{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4559,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11629:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4560,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11642:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11629:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4562,"nodeType":"ExpressionStatement","src":"11629:17:31"},{"expression":{"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11657:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11666:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11673:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11666:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11665:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4568,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11678:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11665:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11664:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"36","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11688:1:31","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"11664:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11657:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4574,"nodeType":"ExpressionStatement","src":"11657:32:31"},{"expression":{"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4575,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11699:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4576,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11712:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11699:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4578,"nodeType":"ExpressionStatement","src":"11699:17:31"},{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4579,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11727:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11736:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11743:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11736:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11735:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4584,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11748:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11735:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11734:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"37","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11758:1:31","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"11734:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11727:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4590,"nodeType":"ExpressionStatement","src":"11727:32:31"},{"expression":{"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11769:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4592,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11782:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11769:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4594,"nodeType":"ExpressionStatement","src":"11769:17:31"},{"expression":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4595,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11797:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11806:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4597,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11813:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11806:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11805:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4600,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11818:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11805:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11804:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"38","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11828:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11804:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11797:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4606,"nodeType":"ExpressionStatement","src":"11797:32:31"},{"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4607,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11839:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4608,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11852:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4610,"nodeType":"ExpressionStatement","src":"11839:17:31"},{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11867:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11876:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4613,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11883:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11876:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11875:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4616,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11888:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11875:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11874:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"39","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11898:1:31","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"11874:25:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11867:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4622,"nodeType":"ExpressionStatement","src":"11867:32:31"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4623,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11909:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4624,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11922:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11909:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4626,"nodeType":"ExpressionStatement","src":"11909:17:31"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4627,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11937:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11946:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4629,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"11953:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11946:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11945:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4632,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"11958:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11945:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11944:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"11944:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11937:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4638,"nodeType":"ExpressionStatement","src":"11937:33:31"},{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4639,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"11980:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4640,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11993:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11980:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4642,"nodeType":"ExpressionStatement","src":"11980:17:31"},{"expression":{"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12008:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12017:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"12024:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12017:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12016:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4648,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12029:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12016:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12015:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12039:2:31","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"12015:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12008:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4654,"nodeType":"ExpressionStatement","src":"12008:33:31"},{"expression":{"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4655,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"12051:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4656,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12064:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12051:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4658,"nodeType":"ExpressionStatement","src":"12051:17:31"},{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4659,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12079:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12088:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4661,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"12095:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12088:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12087:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4664,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12100:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12087:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12086:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3132","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12110:2:31","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"12086:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12079:33:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4670,"nodeType":"ExpressionStatement","src":"12079:33:31"},{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4671,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"12122:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4672,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"12135:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12122:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4674,"nodeType":"ExpressionStatement","src":"12122:17:31"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"12650:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4676,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"12660:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12650:19:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12649:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4679,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12673:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12649:30:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12648:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4682,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"12683:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12648:42:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12647:44:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12694:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"12647:50:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4269,"id":4687,"nodeType":"Return","src":"12640:57:31"}]},"documentation":{"id":4263,"nodeType":"StructuredDocumentation","src":"7117:203:31","text":" @dev Natural exponentiation (e^x) with signed 18 decimal fixed point exponent.\n Reverts if `x` is smaller than MIN_NATURAL_EXPONENT, or larger than `MAX_NATURAL_EXPONENT`."},"id":4689,"implemented":true,"kind":"function","modifiers":[],"name":"exp","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4689,"src":"7338:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4264,"name":"int256","nodeType":"ElementaryTypeName","src":"7338:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7337:10:31"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4689,"src":"7371:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4267,"name":"int256","nodeType":"ElementaryTypeName","src":"7371:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7370:8:31"},"scope":5318,"src":"7325:5379:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4760,"nodeType":"Block","src":"12888:753:31","statements":[{"assignments":[4700],"declarations":[{"constant":false,"id":4700,"mutability":"mutable","name":"logBase","nodeType":"VariableDeclaration","scope":4760,"src":"13118:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4699,"name":"int256","nodeType":"ElementaryTypeName","src":"13118:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4701,"nodeType":"VariableDeclarationStatement","src":"13118:14:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"13146:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4703,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13166:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13146:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13174:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4706,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"13181:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13174:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13146:52:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4724,"nodeType":"Block","src":"13253:53:31","statements":[{"expression":{"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4716,"name":"logBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"13267:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4718,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13281:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4717,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"13277:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13277:9:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4720,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"13289:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13277:18:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13267:28:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4723,"nodeType":"ExpressionStatement","src":"13267:28:31"}]},"id":4725,"nodeType":"IfStatement","src":"13142:164:31","trueBody":{"id":4715,"nodeType":"Block","src":"13200:47:31","statements":[{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"logBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"13214:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4711,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13231:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4710,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"13224:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13224:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13214:22:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4714,"nodeType":"ExpressionStatement","src":"13214:22:31"}]}},{"assignments":[4727],"declarations":[{"constant":false,"id":4727,"mutability":"mutable","name":"logArg","nodeType":"VariableDeclaration","scope":4760,"src":"13316:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4726,"name":"int256","nodeType":"ElementaryTypeName","src":"13316:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4728,"nodeType":"VariableDeclarationStatement","src":"13316:13:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"13343:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4730,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"13363:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13343:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"13370:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4733,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"13376:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13370:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13343:50:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4751,"nodeType":"Block","src":"13446:51:31","statements":[{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4743,"name":"logArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"13460:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4745,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"13473:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4744,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"13469:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13469:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4747,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"13480:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13469:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13460:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4750,"nodeType":"ExpressionStatement","src":"13460:26:31"}]},"id":4752,"nodeType":"IfStatement","src":"13339:158:31","trueBody":{"id":4742,"nodeType":"Block","src":"13395:45:31","statements":[{"expression":{"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4736,"name":"logArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"13409:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4738,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"13425:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4737,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"13418:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13418:11:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13409:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4741,"nodeType":"ExpressionStatement","src":"13409:20:31"}]}},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"logArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"13608:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4754,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"13617:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13608:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13607:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4757,"name":"logBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"13627:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13607:27:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4698,"id":4759,"nodeType":"Return","src":"13600:34:31"}]},"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"12710:104:31","text":" @dev Logarithm (log(arg, base), with signed 18 decimal fixed point base and argument."},"id":4761,"implemented":true,"kind":"function","modifiers":[],"name":"log","nodeType":"FunctionDefinition","parameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"arg","nodeType":"VariableDeclaration","scope":4761,"src":"12832:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4691,"name":"int256","nodeType":"ElementaryTypeName","src":"12832:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4694,"mutability":"mutable","name":"base","nodeType":"VariableDeclaration","scope":4761,"src":"12844:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4693,"name":"int256","nodeType":"ElementaryTypeName","src":"12844:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12831:25:31"},"returnParameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4697,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4761,"src":"12880:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4696,"name":"int256","nodeType":"ElementaryTypeName","src":"12880:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12879:8:31"},"scope":5318,"src":"12819:822:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4797,"nodeType":"Block","src":"13799:292:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"13901:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13905:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13901:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4773,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"13908:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"13908:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4769,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"13892:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13892:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4776,"nodeType":"ExpressionStatement","src":"13892:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"13943:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"13963:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13943:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"13968:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4781,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"13972:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13968:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13943:46:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4795,"nodeType":"Block","src":"14047:38:31","statements":[{"expression":{"arguments":[{"id":4792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"14072:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4791,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"14068:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14068:6:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4768,"id":4794,"nodeType":"Return","src":"14061:13:31"}]},"id":4796,"nodeType":"IfStatement","src":"13939:146:31","trueBody":{"id":4790,"nodeType":"Block","src":"13991:50:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"14019:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4784,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"14012:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14012:9:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4787,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"14024:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14012:18:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4768,"id":4789,"nodeType":"Return","src":"14005:25:31"}]}}]},"documentation":{"id":4762,"nodeType":"StructuredDocumentation","src":"13647:94:31","text":" @dev Natural logarithm (ln(a)) with signed 18 decimal fixed point argument."},"id":4798,"implemented":true,"kind":"function","modifiers":[],"name":"ln","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4798,"src":"13758:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4763,"name":"int256","nodeType":"ElementaryTypeName","src":"13758:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13757:10:31"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4798,"src":"13791:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4766,"name":"int256","nodeType":"ElementaryTypeName","src":"13791:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13790:8:31"},"scope":5318,"src":"13746:345:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5162,"nodeType":"Block","src":"14258:4906:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"14272:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4807,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"14276:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14272:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4821,"nodeType":"IfStatement","src":"14268:382:31","trueBody":{"id":4820,"nodeType":"Block","src":"14284:366:31","statements":[{"expression":{"components":[{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14611:27:31","subExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4810,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"14617:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4811,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"14626:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14617:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14616:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"14636:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14616:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4809,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"14612:3:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14612:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14610:29:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4805,"id":4819,"nodeType":"Return","src":"14603:36:31"}]}},{"assignments":[4823],"declarations":[{"constant":false,"id":4823,"mutability":"mutable","name":"sum","nodeType":"VariableDeclaration","scope":5162,"src":"15975:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4822,"name":"int256","nodeType":"ElementaryTypeName","src":"15975:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4825,"initialValue":{"hexValue":"30","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15988:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15975:14:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16003:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4827,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"16008:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4828,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"16013:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16008:11:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16003:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4840,"nodeType":"IfStatement","src":"15999:114:31","trueBody":{"id":4839,"nodeType":"Block","src":"16021:92:31","statements":[{"expression":{"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16035:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":4832,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"16040:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16035:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4834,"nodeType":"ExpressionStatement","src":"16035:7:31"},{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4835,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16093:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4836,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"16100:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16093:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4838,"nodeType":"ExpressionStatement","src":"16093:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16127:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4842,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"16132:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4843,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"16137:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16132:11:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16127:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"nodeType":"IfStatement","src":"16123:114:31","trueBody":{"id":4854,"nodeType":"Block","src":"16145:92:31","statements":[{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16159:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":4847,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"16164:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16159:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4849,"nodeType":"ExpressionStatement","src":"16159:7:31"},{"expression":{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4850,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16217:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4851,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"16224:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16217:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4853,"nodeType":"ExpressionStatement","src":"16217:9:31"}]}},{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4856,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16368:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"313030","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16375:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"16368:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4859,"nodeType":"ExpressionStatement","src":"16368:10:31"},{"expression":{"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16388:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"313030","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16393:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"16388:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4863,"nodeType":"ExpressionStatement","src":"16388:8:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16523:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4865,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"16528:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16523:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4881,"nodeType":"IfStatement","src":"16519:82:31","trueBody":{"id":4880,"nodeType":"Block","src":"16532:69:31","statements":[{"expression":{"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16546:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16551:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4869,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"16555:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16551:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16550:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4872,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"16565:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16550:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16546:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4875,"nodeType":"ExpressionStatement","src":"16546:21:31"},{"expression":{"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16581:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4877,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"16588:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16581:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4879,"nodeType":"ExpressionStatement","src":"16581:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16615:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4883,"name":"a3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"16620:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16615:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4899,"nodeType":"IfStatement","src":"16611:82:31","trueBody":{"id":4898,"nodeType":"Block","src":"16624:69:31","statements":[{"expression":{"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16638:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16643:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4887,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"16647:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16643:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16642:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4890,"name":"a3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"16657:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16642:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16638:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4893,"nodeType":"ExpressionStatement","src":"16638:21:31"},{"expression":{"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4894,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16673:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4895,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"16680:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16673:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4897,"nodeType":"ExpressionStatement","src":"16673:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16707:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4901,"name":"a4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"16712:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16707:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4917,"nodeType":"IfStatement","src":"16703:82:31","trueBody":{"id":4916,"nodeType":"Block","src":"16716:69:31","statements":[{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16730:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16735:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4905,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"16739:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16735:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16734:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4908,"name":"a4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"16749:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16734:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16730:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4911,"nodeType":"ExpressionStatement","src":"16730:21:31"},{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4912,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16765:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4913,"name":"x4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"16772:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16765:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4915,"nodeType":"ExpressionStatement","src":"16765:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16799:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4919,"name":"a5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"16804:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16799:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"16795:82:31","trueBody":{"id":4934,"nodeType":"Block","src":"16808:69:31","statements":[{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16822:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16827:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4923,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"16831:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16827:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16826:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4926,"name":"a5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"16841:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16826:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16822:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4929,"nodeType":"ExpressionStatement","src":"16822:21:31"},{"expression":{"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4930,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16857:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4931,"name":"x5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"16864:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16857:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4933,"nodeType":"ExpressionStatement","src":"16857:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16891:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4937,"name":"a6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16896:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16891:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4953,"nodeType":"IfStatement","src":"16887:82:31","trueBody":{"id":4952,"nodeType":"Block","src":"16900:69:31","statements":[{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16914:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16919:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4941,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"16923:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16919:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16918:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4944,"name":"a6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16933:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16918:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16914:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4947,"nodeType":"ExpressionStatement","src":"16914:21:31"},{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16949:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4949,"name":"x6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"16956:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16949:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4951,"nodeType":"ExpressionStatement","src":"16949:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"16983:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4955,"name":"a7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"16988:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16983:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"IfStatement","src":"16979:82:31","trueBody":{"id":4970,"nodeType":"Block","src":"16992:69:31","statements":[{"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17006:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17011:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4959,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17015:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17011:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17010:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4962,"name":"a7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"17025:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17010:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17006:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4965,"nodeType":"ExpressionStatement","src":"17006:21:31"},{"expression":{"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4966,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"17041:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4967,"name":"x7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"17048:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17041:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4969,"nodeType":"ExpressionStatement","src":"17041:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17075:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4973,"name":"a8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"17080:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17075:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"nodeType":"IfStatement","src":"17071:82:31","trueBody":{"id":4988,"nodeType":"Block","src":"17084:69:31","statements":[{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17098:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17103:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4977,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17107:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17103:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17102:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4980,"name":"a8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"17117:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17102:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17098:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4983,"nodeType":"ExpressionStatement","src":"17098:21:31"},{"expression":{"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4984,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"17133:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4985,"name":"x8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"17140:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17133:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4987,"nodeType":"ExpressionStatement","src":"17133:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17167:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4991,"name":"a9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"17172:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17167:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5007,"nodeType":"IfStatement","src":"17163:82:31","trueBody":{"id":5006,"nodeType":"Block","src":"17176:69:31","statements":[{"expression":{"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17190:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17195:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4995,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17199:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17195:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17194:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4998,"name":"a9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"17209:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17194:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17190:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5001,"nodeType":"ExpressionStatement","src":"17190:21:31"},{"expression":{"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"17225:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5003,"name":"x9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17232:2:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17225:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5005,"nodeType":"ExpressionStatement","src":"17225:9:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17259:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5009,"name":"a10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"17264:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17259:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5025,"nodeType":"IfStatement","src":"17255:85:31","trueBody":{"id":5024,"nodeType":"Block","src":"17269:71:31","statements":[{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17283:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17288:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5013,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17292:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17288:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17287:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5016,"name":"a10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"17302:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17287:18:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17283:22:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5019,"nodeType":"ExpressionStatement","src":"17283:22:31"},{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"17319:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5021,"name":"x10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"17326:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17319:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5023,"nodeType":"ExpressionStatement","src":"17319:10:31"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17354:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5027,"name":"a11","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"17359:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17354:8:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"17350:85:31","trueBody":{"id":5042,"nodeType":"Block","src":"17364:71:31","statements":[{"expression":{"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17378:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17383:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5031,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17387:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17383:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17382:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5034,"name":"a11","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"17397:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17382:18:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17378:22:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5037,"nodeType":"ExpressionStatement","src":"17378:22:31"},{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5038,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"17414:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5039,"name":"x11","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"17421:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17414:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5041,"nodeType":"ExpressionStatement","src":"17414:10:31"}]}},{"assignments":[5045],"declarations":[{"constant":false,"id":5045,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":5162,"src":"17937:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5044,"name":"int256","nodeType":"ElementaryTypeName","src":"17937:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5058,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17950:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5047,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17954:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17950:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17949:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5050,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17964:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17949:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17948:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17975:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5054,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"17979:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17975:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17974:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17948:38:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"17937:49:31"},{"assignments":[5060],"declarations":[{"constant":false,"id":5060,"mutability":"mutable","name":"z_squared","nodeType":"VariableDeclaration","scope":5162,"src":"17996:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5059,"name":"int256","nodeType":"ElementaryTypeName","src":"17996:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5067,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"18016:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5062,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"18020:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18016:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18015:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5065,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18025:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18015:16:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"17996:35:31"},{"assignments":[5069],"declarations":[{"constant":false,"id":5069,"mutability":"mutable","name":"num","nodeType":"VariableDeclaration","scope":5162,"src":"18112:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5068,"name":"int256","nodeType":"ElementaryTypeName","src":"18112:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5071,"initialValue":{"id":5070,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"18125:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"18112:14:31"},{"assignments":[5073],"declarations":[{"constant":false,"id":5073,"mutability":"mutable","name":"seriesSum","nodeType":"VariableDeclaration","scope":5162,"src":"18240:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5072,"name":"int256","nodeType":"ElementaryTypeName","src":"18240:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5075,"initialValue":{"id":5074,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18259:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"18240:22:31"},{"expression":{"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5076,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18333:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18340:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5078,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"18346:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18340:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18339:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5081,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18359:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18339:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18333:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5084,"nodeType":"ExpressionStatement","src":"18333:32:31"},{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5085,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"18375:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18388:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18394:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"18388:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18375:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5090,"nodeType":"ExpressionStatement","src":"18375:20:31"},{"expression":{"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5091,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18406:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18413:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5093,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"18419:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18413:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18412:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5096,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18432:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18412:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18406:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5099,"nodeType":"ExpressionStatement","src":"18406:32:31"},{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5100,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"18448:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18461:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18467:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"18461:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18448:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5105,"nodeType":"ExpressionStatement","src":"18448:20:31"},{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18479:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5107,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18486:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5108,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"18492:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18486:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18485:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5111,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18505:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18485:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18479:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5114,"nodeType":"ExpressionStatement","src":"18479:32:31"},{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"18521:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18534:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"37","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18540:1:31","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"18534:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18521:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5120,"nodeType":"ExpressionStatement","src":"18521:20:31"},{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5121,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18552:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18559:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5123,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"18565:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18559:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18558:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5126,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18578:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18558:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18552:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5129,"nodeType":"ExpressionStatement","src":"18552:32:31"},{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"18594:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18607:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"39","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18613:1:31","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"18607:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18594:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5135,"nodeType":"ExpressionStatement","src":"18594:20:31"},{"expression":{"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18625:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18632:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5138,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"18638:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18632:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18631:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5141,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18651:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18631:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18625:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5144,"nodeType":"ExpressionStatement","src":"18625:32:31"},{"expression":{"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5145,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"18667:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"18680:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18686:2:31","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"18680:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18667:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5150,"nodeType":"ExpressionStatement","src":"18667:21:31"},{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5151,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"18847:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"32","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18860:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"18847:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5154,"nodeType":"ExpressionStatement","src":"18847:14:31"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"19135:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5156,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"19141:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19135:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19134:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19154:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"19134:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4805,"id":5161,"nodeType":"Return","src":"19127:30:31"}]},"documentation":{"id":4799,"nodeType":"StructuredDocumentation","src":"14097:103:31","text":" @dev Internal natural logarithm (ln(a)) with signed 18 decimal fixed point argument."},"id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"_ln","nodeType":"FunctionDefinition","parameters":{"id":4802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4801,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5163,"src":"14218:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4800,"name":"int256","nodeType":"ElementaryTypeName","src":"14218:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"14217:10:31"},"returnParameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4804,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5163,"src":"14250:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4803,"name":"int256","nodeType":"ElementaryTypeName","src":"14250:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"14249:8:31"},"scope":5318,"src":"14205:4959:31","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5316,"nodeType":"Block","src":"19486:1658:31","statements":[{"expression":{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"19700:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":5172,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"19705:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19700:11:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5174,"nodeType":"ExpressionStatement","src":"19700:11:31"},{"assignments":[5176],"declarations":[{"constant":false,"id":5176,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":5316,"src":"20072:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5175,"name":"int256","nodeType":"ElementaryTypeName","src":"20072:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5189,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5177,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"20085:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5178,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20089:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20085:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20084:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5181,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20099:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20084:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20083:23:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"20110:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5185,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20114:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20110:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20109:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20083:38:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"20072:49:31"},{"assignments":[5191],"declarations":[{"constant":false,"id":5191,"mutability":"mutable","name":"z_squared","nodeType":"VariableDeclaration","scope":5316,"src":"20131:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5190,"name":"int256","nodeType":"ElementaryTypeName","src":"20131:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5198,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"20151:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5193,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"20155:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20151:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20150:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5196,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20160:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20150:16:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"20131:35:31"},{"assignments":[5200],"declarations":[{"constant":false,"id":5200,"mutability":"mutable","name":"num","nodeType":"VariableDeclaration","scope":5316,"src":"20247:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5199,"name":"int256","nodeType":"ElementaryTypeName","src":"20247:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5202,"initialValue":{"id":5201,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"20260:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"20247:14:31"},{"assignments":[5204],"declarations":[{"constant":false,"id":5204,"mutability":"mutable","name":"seriesSum","nodeType":"VariableDeclaration","scope":5316,"src":"20375:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5203,"name":"int256","nodeType":"ElementaryTypeName","src":"20375:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5206,"initialValue":{"id":5205,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20394:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"20375:22:31"},{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5207,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20468:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5208,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20475:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5209,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20481:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20475:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20474:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5212,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20494:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20474:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20468:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5215,"nodeType":"ExpressionStatement","src":"20468:32:31"},{"expression":{"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20510:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20523:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20529:1:31","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"20523:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20510:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5221,"nodeType":"ExpressionStatement","src":"20510:20:31"},{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5222,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20541:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5223,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20548:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5224,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20554:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20548:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20547:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5227,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20567:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20547:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5230,"nodeType":"ExpressionStatement","src":"20541:32:31"},{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5231,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20583:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20596:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20602:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"20596:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20583:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5236,"nodeType":"ExpressionStatement","src":"20583:20:31"},{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5237,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20614:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20621:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5239,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20627:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20621:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20620:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5242,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20640:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20620:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20614:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5245,"nodeType":"ExpressionStatement","src":"20614:32:31"},{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20656:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20669:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"37","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20675:1:31","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"20669:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20656:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5251,"nodeType":"ExpressionStatement","src":"20656:20:31"},{"expression":{"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5252,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20687:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20694:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5254,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20700:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20694:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20693:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5257,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20713:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20693:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20687:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5260,"nodeType":"ExpressionStatement","src":"20687:32:31"},{"expression":{"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20729:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20742:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"39","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20748:1:31","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"20742:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20729:20:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5266,"nodeType":"ExpressionStatement","src":"20729:20:31"},{"expression":{"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5267,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20760:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20767:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5269,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20773:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20767:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20766:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5272,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20786:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20766:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20760:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5275,"nodeType":"ExpressionStatement","src":"20760:32:31"},{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20802:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20815:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20821:2:31","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"20815:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20802:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5281,"nodeType":"ExpressionStatement","src":"20802:21:31"},{"expression":{"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5282,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20834:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20841:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5284,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20847:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20841:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20840:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5287,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20860:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20840:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20834:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5290,"nodeType":"ExpressionStatement","src":"20834:32:31"},{"expression":{"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20876:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20889:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3133","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20895:2:31","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"20889:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20876:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5296,"nodeType":"ExpressionStatement","src":"20876:21:31"},{"expression":{"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5297,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20908:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20915:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5299,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"20921:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20915:15:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20914:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5302,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"20934:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20914:26:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20908:32:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5305,"nodeType":"ExpressionStatement","src":"20908:32:31"},{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5306,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20950:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5307,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"20963:3:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3135","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20969:2:31","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"20963:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20950:21:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5311,"nodeType":"ExpressionStatement","src":"20950:21:31"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5312,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21124:9:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21136:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"21124:13:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5170,"id":5315,"nodeType":"Return","src":"21117:20:31"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"19170:255:31","text":" @dev Intrnal high precision (36 decimal places) natural logarithm (ln(x)) with signed 18 decimal fixed point argument,\n for x close to one.\n Should only be used if x is between LN_36_LOWER_BOUND and LN_36_UPPER_BOUND."},"id":5317,"implemented":true,"kind":"function","modifiers":[],"name":"_ln_36","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":5317,"src":"19446:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5165,"name":"int256","nodeType":"ElementaryTypeName","src":"19446:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19445:10:31"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5317,"src":"19478:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5168,"name":"int256","nodeType":"ElementaryTypeName","src":"19478:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19477:8:31"},"scope":5318,"src":"19430:1714:31","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5319,"src":"1681:19465:31"}],"src":"1094:20053:31"},"id":31},"contracts/math/Math.sol":{"ast":{"absolutePath":"contracts/math/Math.sol","exportedSymbols":{"Math":[5589]},"id":5590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5320,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:32"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":5321,"nodeType":"ImportDirective","scope":5590,"sourceUnit":574,"src":"58:90:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5322,"nodeType":"StructuredDocumentation","src":"150:139:32","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow checks.\n Adapted from OpenZeppelin's SafeMath library."},"fullyImplemented":true,"id":5589,"linearizedBaseContracts":[5589],"name":"Math","nodeType":"ContractDefinition","nodes":[{"body":{"id":5331,"nodeType":"Block","src":"490:188:32","statements":[{"AST":{"nodeType":"YulBlock","src":"588:84:32","statements":[{"nodeType":"YulVariableDeclaration","src":"602:20:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"615:3:32","type":"","value":"255"},{"name":"a","nodeType":"YulIdentifier","src":"620:1:32"}],"functionName":{"name":"sar","nodeType":"YulIdentifier","src":"611:3:32"},"nodeType":"YulFunctionCall","src":"611:11:32"},"variables":[{"name":"s","nodeType":"YulTypedName","src":"606:1:32","type":""}]},{"nodeType":"YulAssignment","src":"635:27:32","value":{"arguments":[{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"653:1:32"},{"name":"s","nodeType":"YulIdentifier","src":"656:1:32"}],"functionName":{"name":"xor","nodeType":"YulIdentifier","src":"649:3:32"},"nodeType":"YulFunctionCall","src":"649:9:32"},{"name":"s","nodeType":"YulIdentifier","src":"660:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"645:3:32"},"nodeType":"YulFunctionCall","src":"645:17:32"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"635:6:32"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5325,"isOffset":false,"isSlot":false,"src":"620:1:32","valueSize":1},{"declaration":5325,"isOffset":false,"isSlot":false,"src":"653:1:32","valueSize":1},{"declaration":5328,"isOffset":false,"isSlot":false,"src":"635:6:32","valueSize":1}],"id":5330,"nodeType":"InlineAssembly","src":"579:93:32"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"352:71:32","text":" @dev Returns the absolute value of a signed integer."},"id":5332,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5332,"src":"441:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5324,"name":"int256","nodeType":"ElementaryTypeName","src":"441:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"440:10:32"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5332,"src":"474:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5327,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"473:16:32"},"scope":5589,"src":"428:250:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5358,"nodeType":"Block","src":"861:99:32","statements":[{"assignments":[5343],"declarations":[{"constant":false,"id":5343,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5358,"src":"871:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5347,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"883:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"887:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"883:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"871:17:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"907:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"912:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"907:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5352,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"915:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":71,"src":"915:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5348,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"898:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"898:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5355,"nodeType":"ExpressionStatement","src":"898:37:32"},{"expression":{"id":5356,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"952:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5341,"id":5357,"nodeType":"Return","src":"945:8:32"}]},"documentation":{"id":5333,"nodeType":"StructuredDocumentation","src":"684:105:32","text":" @dev Returns the addition of two unsigned integers of 256 bits, reverting on overflow."},"id":5359,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5359,"src":"807:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5334,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5337,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5359,"src":"818:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"806:22:32"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5359,"src":"852:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"851:9:32"},"scope":5589,"src":"794:166:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5399,"nodeType":"Block","src":"1126:130:32","statements":[{"assignments":[5370],"declarations":[{"constant":false,"id":5370,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5399,"src":"1136:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5369,"name":"int256","nodeType":"ElementaryTypeName","src":"1136:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5374,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"1147:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"1151:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1147:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1136:16:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"1172:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1177:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1172:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"1182:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"1187:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1182:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1172:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1171:18:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"1194:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5387,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"1203:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"1207:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1203:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1194:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1193:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1171:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5393,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1211:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":71,"src":"1211:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5375,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1162:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1162:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"ExpressionStatement","src":"1162:69:32"},{"expression":{"id":5397,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"1248:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5368,"id":5398,"nodeType":"Return","src":"1241:8:32"}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"966:91:32","text":" @dev Returns the addition of two signed integers, reverting on overflow."},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5400,"src":"1075:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5361,"name":"int256","nodeType":"ElementaryTypeName","src":"1075:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5400,"src":"1085:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5363,"name":"int256","nodeType":"ElementaryTypeName","src":"1085:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1074:20:32"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5400,"src":"1118:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5366,"name":"int256","nodeType":"ElementaryTypeName","src":"1118:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1117:8:32"},"scope":5589,"src":"1062:194:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"1442:99:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"1461:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"1466:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1461:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5414,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1469:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":74,"src":"1469:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1452:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1452:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"ExpressionStatement","src":"1452:37:32"},{"assignments":[5419],"declarations":[{"constant":false,"id":5419,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5426,"src":"1499:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5423,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"1511:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"1515:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1511:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1499:17:32"},{"expression":{"id":5424,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"1533:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5409,"id":5425,"nodeType":"Return","src":"1526:8:32"}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"1262:108:32","text":" @dev Returns the subtraction of two unsigned integers of 256 bits, reverting on overflow."},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5427,"src":"1388:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5405,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5427,"src":"1399:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1387:22:32"},"returnParameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5427,"src":"1433:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1432:9:32"},"scope":5589,"src":"1375:166:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5467,"nodeType":"Block","src":"1710:130:32","statements":[{"assignments":[5438],"declarations":[{"constant":false,"id":5438,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5467,"src":"1720:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5437,"name":"int256","nodeType":"ElementaryTypeName","src":"1720:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5442,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"1731:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"1735:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1731:5:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1720:16:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"1756:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1761:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1756:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"1766:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"1771:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1766:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1756:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1755:18:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"1778:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1782:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1778:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"1787:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"1791:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1787:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1778:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1777:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1755:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5461,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1795:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":74,"src":"1795:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5443,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1746:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1746:69:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5464,"nodeType":"ExpressionStatement","src":"1746:69:32"},{"expression":{"id":5465,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"1832:1:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5436,"id":5466,"nodeType":"Return","src":"1825:8:32"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"1547:94:32","text":" @dev Returns the subtraction of two signed integers, reverting on overflow."},"id":5468,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5468,"src":"1659:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5429,"name":"int256","nodeType":"ElementaryTypeName","src":"1659:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5432,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5468,"src":"1669:8:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5431,"name":"int256","nodeType":"ElementaryTypeName","src":"1669:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1658:20:32"},"returnParameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5468,"src":"1702:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5434,"name":"int256","nodeType":"ElementaryTypeName","src":"1702:6:32","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1701:8:32"},"scope":5589,"src":"1646:194:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5479,"nodeType":"Block","src":"1996:154:32","statements":[{"AST":{"nodeType":"YulBlock","src":"2078:66:32","statements":[{"nodeType":"YulAssignment","src":"2092:42:32","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2106:1:32"},{"arguments":[{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2117:1:32"},{"name":"b","nodeType":"YulIdentifier","src":"2120:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2113:3:32"},"nodeType":"YulFunctionCall","src":"2113:9:32"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2127:1:32"},{"name":"b","nodeType":"YulIdentifier","src":"2130:1:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2124:2:32"},"nodeType":"YulFunctionCall","src":"2124:8:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2109:3:32"},"nodeType":"YulFunctionCall","src":"2109:24:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2102:3:32"},"nodeType":"YulFunctionCall","src":"2102:32:32"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2092:6:32"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5471,"isOffset":false,"isSlot":false,"src":"2106:1:32","valueSize":1},{"declaration":5471,"isOffset":false,"isSlot":false,"src":"2117:1:32","valueSize":1},{"declaration":5471,"isOffset":false,"isSlot":false,"src":"2127:1:32","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"2120:1:32","valueSize":1},{"declaration":5473,"isOffset":false,"isSlot":false,"src":"2130:1:32","valueSize":1},{"declaration":5476,"isOffset":false,"isSlot":false,"src":"2092:6:32","valueSize":1}],"id":5478,"nodeType":"InlineAssembly","src":"2069:75:32"}]},"documentation":{"id":5469,"nodeType":"StructuredDocumentation","src":"1846:71:32","text":" @dev Returns the largest of two numbers of 256 bits."},"id":5480,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5471,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5480,"src":"1935:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1935:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5473,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5480,"src":"1946:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1934:22:32"},"returnParameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5480,"src":"1980:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1979:16:32"},"scope":5589,"src":"1922:228:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5491,"nodeType":"Block","src":"2307:143:32","statements":[{"AST":{"nodeType":"YulBlock","src":"2378:66:32","statements":[{"nodeType":"YulAssignment","src":"2392:42:32","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2406:1:32"},{"arguments":[{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2417:1:32"},{"name":"b","nodeType":"YulIdentifier","src":"2420:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2413:3:32"},"nodeType":"YulFunctionCall","src":"2413:9:32"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2427:1:32"},{"name":"b","nodeType":"YulIdentifier","src":"2430:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2424:2:32"},"nodeType":"YulFunctionCall","src":"2424:8:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2409:3:32"},"nodeType":"YulFunctionCall","src":"2409:24:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2402:3:32"},"nodeType":"YulFunctionCall","src":"2402:32:32"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2392:6:32"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5483,"isOffset":false,"isSlot":false,"src":"2406:1:32","valueSize":1},{"declaration":5483,"isOffset":false,"isSlot":false,"src":"2417:1:32","valueSize":1},{"declaration":5483,"isOffset":false,"isSlot":false,"src":"2427:1:32","valueSize":1},{"declaration":5485,"isOffset":false,"isSlot":false,"src":"2420:1:32","valueSize":1},{"declaration":5485,"isOffset":false,"isSlot":false,"src":"2430:1:32","valueSize":1},{"declaration":5488,"isOffset":false,"isSlot":false,"src":"2392:6:32","valueSize":1}],"id":5490,"nodeType":"InlineAssembly","src":"2369:75:32"}]},"documentation":{"id":5481,"nodeType":"StructuredDocumentation","src":"2156:72:32","text":" @dev Returns the smallest of two numbers of 256 bits."},"id":5492,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5492,"src":"2246:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5485,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5492,"src":"2257:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2257:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2245:22:32"},"returnParameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5492,"src":"2291:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2291:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:16:32"},"scope":5589,"src":"2233:217:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5523,"nodeType":"Block","src":"2523:113:32","statements":[{"assignments":[5502],"declarations":[{"constant":false,"id":5502,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5523,"src":"2533:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5506,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2545:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"2549:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2545:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2533:17:32"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2569:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2574:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2569:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2579:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"2583:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2579:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"2588:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2579:10:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2569:20:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5517,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2591:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MUL_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":80,"src":"2591:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5507,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2560:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2560:51:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5520,"nodeType":"ExpressionStatement","src":"2560:51:32"},{"expression":{"id":5521,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2628:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5500,"id":5522,"nodeType":"Return","src":"2621:8:32"}]},"id":5524,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5524,"src":"2469:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5496,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5524,"src":"2480:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2468:22:32"},"returnParameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5524,"src":"2514:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2514:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2513:9:32"},"scope":5589,"src":"2456:180:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5546,"nodeType":"Block","src":"2753:61:32","statements":[{"expression":{"condition":{"id":5535,"name":"roundUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"2770:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"2802:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"2805:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"name":"divDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2794:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2794:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2770:37:32","trueExpression":{"arguments":[{"id":5537,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"2786:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"2789:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5536,"name":"divUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"2780:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2780:11:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5534,"id":5545,"nodeType":"Return","src":"2763:44:32"}]},"id":5547,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5547,"src":"2664:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2664:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5547,"src":"2683:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2683:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5530,"mutability":"mutable","name":"roundUp","nodeType":"VariableDeclaration","scope":5547,"src":"2702:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5529,"name":"bool","nodeType":"ElementaryTypeName","src":"2702:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2654:66:32"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5547,"src":"2744:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2744:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2743:9:32"},"scope":5589,"src":"2642:172:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5568,"nodeType":"Block","src":"2891:77:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"2910:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2910:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5560,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2918:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":83,"src":"2918:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5556,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2901:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2901:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5563,"nodeType":"ExpressionStatement","src":"2901:38:32"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5564,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"2956:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5565,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"2960:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2956:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5555,"id":5567,"nodeType":"Return","src":"2949:12:32"}]},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5549,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5569,"src":"2837:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2837:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5551,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5569,"src":"2848:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2836:22:32"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5569,"src":"2882:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:32"},"scope":5589,"src":"2820:148:32","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5587,"nodeType":"Block","src":"3050:233:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"3069:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3074:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3069:6:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5582,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3077:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":83,"src":"3077:20:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5578,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"3060:8:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3060:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5585,"nodeType":"ExpressionStatement","src":"3060:38:32"},{"AST":{"nodeType":"YulBlock","src":"3194:83:32","statements":[{"nodeType":"YulAssignment","src":"3208:59:32","value":{"arguments":[{"arguments":[{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3236:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3229:6:32"},"nodeType":"YulFunctionCall","src":"3229:9:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3222:6:32"},"nodeType":"YulFunctionCall","src":"3222:17:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3245:1:32","type":"","value":"1"},{"arguments":[{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3256:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"3259:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3252:3:32"},"nodeType":"YulFunctionCall","src":"3252:9:32"},{"name":"b","nodeType":"YulIdentifier","src":"3263:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3248:3:32"},"nodeType":"YulFunctionCall","src":"3248:17:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:32"},"nodeType":"YulFunctionCall","src":"3241:25:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3218:3:32"},"nodeType":"YulFunctionCall","src":"3218:49:32"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3208:6:32"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5571,"isOffset":false,"isSlot":false,"src":"3236:1:32","valueSize":1},{"declaration":5571,"isOffset":false,"isSlot":false,"src":"3256:1:32","valueSize":1},{"declaration":5573,"isOffset":false,"isSlot":false,"src":"3263:1:32","valueSize":1},{"declaration":5576,"isOffset":false,"isSlot":false,"src":"3208:6:32","valueSize":1}],"id":5586,"nodeType":"InlineAssembly","src":"3185:92:32"}]},"id":5588,"implemented":true,"kind":"function","modifiers":[],"name":"divUp","nodeType":"FunctionDefinition","parameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5588,"src":"2989:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5573,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5588,"src":"3000:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3000:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2988:22:32"},"returnParameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":5588,"src":"3034:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"3034:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3033:16:32"},"scope":5589,"src":"2974:309:32","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5590,"src":"290:2995:32"}],"src":"33:3253:32"},"id":32},"contracts/openzeppelin/Address.sol":{"ast":{"absolutePath":"contracts/openzeppelin/Address.sol","exportedSymbols":{"Address":[5756]},"id":5757,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5591,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"254:23:33"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":5592,"nodeType":"ImportDirective","scope":5757,"sourceUnit":574,"src":"279:90:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"371:67:33","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":5756,"linearizedBaseContracts":[5756],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":5609,"nodeType":"Block","src":"1097:367:33","statements":[{"assignments":[5602],"declarations":[{"constant":false,"id":5602,"mutability":"mutable","name":"size","nodeType":"VariableDeclaration","scope":5609,"src":"1294:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5603,"nodeType":"VariableDeclarationStatement","src":"1294:12:33"},{"AST":{"nodeType":"YulBlock","src":"1381:52:33","statements":[{"nodeType":"YulAssignment","src":"1395:28:33","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1415:7:33"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1403:11:33"},"nodeType":"YulFunctionCall","src":"1403:20:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1395:4:33"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5596,"isOffset":false,"isSlot":false,"src":"1415:7:33","valueSize":1},{"declaration":5602,"isOffset":false,"isSlot":false,"src":"1395:4:33","valueSize":1}],"id":5604,"nodeType":"InlineAssembly","src":"1372:61:33"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"1449:4:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1456:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1449:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5600,"id":5608,"nodeType":"Return","src":"1442:15:33"}]},"documentation":{"id":5594,"nodeType":"StructuredDocumentation","src":"461:565:33","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":5610,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":5610,"src":"1051:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5595,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1050:17:33"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5610,"src":"1091:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5598,"name":"bool","nodeType":"ElementaryTypeName","src":"1091:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1090:6:33"},"scope":5756,"src":"1031:433:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5645,"nodeType":"Block","src":"2492:298:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5621,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2519:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$5756","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$5756","typeString":"library Address"}],"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2511:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5619,"name":"address","nodeType":"ElementaryTypeName","src":"2511:7:33","typeDescriptions":{}}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2511:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2511:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"2536:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2511:31:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5626,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2544:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADDRESS_INSUFFICIENT_BALANCE","nodeType":"MemberAccess","referencedDeclaration":389,"src":"2544:35:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2502:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2502:78:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5629,"nodeType":"ExpressionStatement","src":"2502:78:33"},{"assignments":[5631,null],"declarations":[{"constant":false,"id":5631,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":5645,"src":"2669:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5630,"name":"bool","nodeType":"ElementaryTypeName","src":"2669:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5638,"initialValue":{"arguments":[{"hexValue":"","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2719:2:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5632,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"2687:9:33","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2687:14:33","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5634,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"2710:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2687:31:33","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2687:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2668:54:33"},{"expression":{"arguments":[{"id":5640,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"2741:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5641,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2750:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADDRESS_CANNOT_SEND_VALUE","nodeType":"MemberAccess","referencedDeclaration":392,"src":"2750:32:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5639,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2732:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2732:51:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5644,"nodeType":"ExpressionStatement","src":"2732:51:33"}]},"documentation":{"id":5611,"nodeType":"StructuredDocumentation","src":"1510:906:33","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":5646,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":5646,"src":"2440:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5612,"name":"address","nodeType":"ElementaryTypeName","src":"2440:15:33","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":5615,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":5646,"src":"2467:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2467:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:43:33"},"returnParameters":{"id":5617,"nodeType":"ParameterList","parameters":[],"src":"2492:0:33"},"scope":5756,"src":"2421:369:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5670,"nodeType":"Block","src":"3583:189:33","statements":[{"assignments":[5657,5659],"declarations":[{"constant":false,"id":5657,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":5670,"src":"3653:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5656,"name":"bool","nodeType":"ElementaryTypeName","src":"3653:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5659,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":5670,"src":"3667:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5658,"name":"bytes","nodeType":"ElementaryTypeName","src":"3667:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5664,"initialValue":{"arguments":[{"id":5662,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"3706:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5660,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"3694:6:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3694:11:33","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3694:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3652:59:33"},{"expression":{"arguments":[{"id":5666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"3745:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5667,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3754:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5665,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"3728:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory) pure returns (bytes memory)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3728:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5655,"id":5669,"nodeType":"Return","src":"3721:44:33"}]},"documentation":{"id":5647,"nodeType":"StructuredDocumentation","src":"2796:693:33","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":5671,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":5671,"src":"3516:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5648,"name":"address","nodeType":"ElementaryTypeName","src":"3516:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5651,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":5671,"src":"3532:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5650,"name":"bytes","nodeType":"ElementaryTypeName","src":"3532:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3515:35:33"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5671,"src":"3569:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5653,"name":"bytes","nodeType":"ElementaryTypeName","src":"3569:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3568:14:33"},"scope":5756,"src":"3494:278:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5699,"nodeType":"Block","src":"4155:205:33","statements":[{"assignments":[5684,5686],"declarations":[{"constant":false,"id":5684,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":5699,"src":"4225:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5683,"name":"bool","nodeType":"ElementaryTypeName","src":"4225:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5686,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":5699,"src":"4239:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5685,"name":"bytes","nodeType":"ElementaryTypeName","src":"4239:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5693,"initialValue":{"arguments":[{"id":5691,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"4294:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5687,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"4266:6:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4266:11:33","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"4286:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4266:27:33","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4224:75:33"},{"expression":{"arguments":[{"id":5695,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"4333:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5696,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"4342:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5694,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"4316:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory) pure returns (bytes memory)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4316:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5682,"id":5698,"nodeType":"Return","src":"4309:44:33"}]},"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"3817:190:33","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but passing some native ETH as msg.value to the call.\n _Available since v3.4._"},"id":5700,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":5700,"src":"4052:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5673,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5676,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":5700,"src":"4076:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5675,"name":"bytes","nodeType":"ElementaryTypeName","src":"4076:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5678,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":5700,"src":"4103:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5677,"name":"uint256","nodeType":"ElementaryTypeName","src":"4103:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4042:80:33"},"returnParameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5700,"src":"4141:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5680,"name":"bytes","nodeType":"ElementaryTypeName","src":"4141:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4140:14:33"},"scope":5756,"src":"4012:348:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"4636:197:33","statements":[{"assignments":[5711,5713],"declarations":[{"constant":false,"id":5711,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":5724,"src":"4706:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5710,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5713,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":5724,"src":"4720:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5712,"name":"bytes","nodeType":"ElementaryTypeName","src":"4720:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5718,"initialValue":{"arguments":[{"id":5716,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"4767:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5714,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"4747:6:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"4747:19:33","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4705:67:33"},{"expression":{"arguments":[{"id":5720,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"4806:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5721,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"4815:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5719,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"4789:16:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory) pure returns (bytes memory)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4789:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5709,"id":5723,"nodeType":"Return","src":"4782:44:33"}]},"documentation":{"id":5701,"nodeType":"StructuredDocumentation","src":"4366:168:33","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":5725,"src":"4569:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5702,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":5725,"src":"4585:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5704,"name":"bytes","nodeType":"ElementaryTypeName","src":"4585:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4568:35:33"},"returnParameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5725,"src":"4622:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5707,"name":"bytes","nodeType":"ElementaryTypeName","src":"4622:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4621:14:33"},"scope":5756,"src":"4539:294:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5754,"nodeType":"Block","src":"5159:612:33","statements":[{"condition":{"id":5735,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"5173:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5752,"nodeType":"Block","src":"5230:535:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5739,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"5314:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5314:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5334:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5314:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5750,"nodeType":"Block","src":"5685:70:33","statements":[{"expression":{"arguments":[{"expression":{"id":5746,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"5711:6:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LOW_LEVEL_CALL_FAILED","nodeType":"MemberAccess","referencedDeclaration":422,"src":"5711:28:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5745,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":48,"src":"5703:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5703:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5749,"nodeType":"ExpressionStatement","src":"5703:37:33"}]},"id":5751,"nodeType":"IfStatement","src":"5310:445:33","trueBody":{"id":5744,"nodeType":"Block","src":"5337:342:33","statements":[{"AST":{"nodeType":"YulBlock","src":"5520:145:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5542:40:33","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"5571:10:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5565:5:33"},"nodeType":"YulFunctionCall","src":"5565:17:33"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"5546:15:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5614:2:33","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"5618:10:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:33"},"nodeType":"YulFunctionCall","src":"5610:19:33"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"5631:15:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5603:6:33"},"nodeType":"YulFunctionCall","src":"5603:44:33"},"nodeType":"YulExpressionStatement","src":"5603:44:33"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5730,"isOffset":false,"isSlot":false,"src":"5571:10:33","valueSize":1},{"declaration":5730,"isOffset":false,"isSlot":false,"src":"5618:10:33","valueSize":1}],"id":5743,"nodeType":"InlineAssembly","src":"5511:154:33"}]}}]},"id":5753,"nodeType":"IfStatement","src":"5169:596:33","trueBody":{"id":5738,"nodeType":"Block","src":"5182:42:33","statements":[{"expression":{"id":5736,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"5203:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5734,"id":5737,"nodeType":"Return","src":"5196:17:33"}]}}]},"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"4839:213:33","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling up the\n revert reason or using the one provided.\n _Available since v4.3._"},"id":5755,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":5755,"src":"5083:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5727,"name":"bool","nodeType":"ElementaryTypeName","src":"5083:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5730,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":5755,"src":"5097:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5729,"name":"bytes","nodeType":"ElementaryTypeName","src":"5097:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5082:39:33"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5755,"src":"5145:12:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5732,"name":"bytes","nodeType":"ElementaryTypeName","src":"5145:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5144:14:33"},"scope":5756,"src":"5057:714:33","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5757,"src":"439:5334:33"}],"src":"254:5520:33"},"id":33},"contracts/openzeppelin/Create2.sol":{"ast":{"absolutePath":"contracts/openzeppelin/Create2.sol","exportedSymbols":{"Create2":[5865]},"id":5866,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5758,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:34"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":5759,"nodeType":"ImportDirective","scope":5866,"sourceUnit":574,"src":"58:90:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5760,"nodeType":"StructuredDocumentation","src":"150:367:34","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":5865,"linearizedBaseContracts":[5865],"name":"Create2","nodeType":"ContractDefinition","nodes":[{"body":{"id":5807,"nodeType":"Block","src":"1231:423:34","statements":[{"assignments":[5773],"declarations":[{"constant":false,"id":5773,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":5807,"src":"1241:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5772,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5774,"nodeType":"VariableDeclarationStatement","src":"1241:12:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5778,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1279:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5865","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5865","typeString":"library Create2"}],"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1271:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5776,"name":"address","nodeType":"ElementaryTypeName","src":"1271:7:34","typeDescriptions":{}}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1271:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1271:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"1296:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"435245415445325f494e53554646494349454e545f42414c414e4345","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1304:30:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_2aeee4534c5f10d1783514f399421362ae3c6ef4687e81ecfd3e4ee82e81307f","typeString":"literal_string \"CREATE2_INSUFFICIENT_BALANCE\""},"value":"CREATE2_INSUFFICIENT_BALANCE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aeee4534c5f10d1783514f399421362ae3c6ef4687e81ecfd3e4ee82e81307f","typeString":"literal_string \"CREATE2_INSUFFICIENT_BALANCE\""}],"id":5775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1263:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1263:72:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5785,"nodeType":"ExpressionStatement","src":"1263:72:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5787,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"1353:8:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1353:15:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1372:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1353:20:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"435245415445325f42595445434f44455f5a45524f","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1375:23:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1ba132d421c12698d650afa3deba12f9ef08eab57aae4d8c8332657faf108fc","typeString":"literal_string \"CREATE2_BYTECODE_ZERO\""},"value":"CREATE2_BYTECODE_ZERO"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e1ba132d421c12698d650afa3deba12f9ef08eab57aae4d8c8332657faf108fc","typeString":"literal_string \"CREATE2_BYTECODE_ZERO\""}],"id":5786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1345:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1345:54:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5793,"nodeType":"ExpressionStatement","src":"1345:54:34"},{"AST":{"nodeType":"YulBlock","src":"1474:91:34","statements":[{"nodeType":"YulAssignment","src":"1488:67:34","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1504:6:34"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1516:8:34"},{"kind":"number","nodeType":"YulLiteral","src":"1526:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:34"},"nodeType":"YulFunctionCall","src":"1512:19:34"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1539:8:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1533:5:34"},"nodeType":"YulFunctionCall","src":"1533:15:34"},{"name":"salt","nodeType":"YulIdentifier","src":"1550:4:34"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1496:7:34"},"nodeType":"YulFunctionCall","src":"1496:59:34"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1488:4:34"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5773,"isOffset":false,"isSlot":false,"src":"1488:4:34","valueSize":1},{"declaration":5763,"isOffset":false,"isSlot":false,"src":"1504:6:34","valueSize":1},{"declaration":5767,"isOffset":false,"isSlot":false,"src":"1516:8:34","valueSize":1},{"declaration":5767,"isOffset":false,"isSlot":false,"src":"1539:8:34","valueSize":1},{"declaration":5765,"isOffset":false,"isSlot":false,"src":"1550:4:34","valueSize":1}],"id":5794,"nodeType":"InlineAssembly","src":"1465:100:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1582:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1590:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5797,"name":"address","nodeType":"ElementaryTypeName","src":"1590:7:34","typeDescriptions":{}}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1590:10:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1582:18:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"435245415445325f4445504c4f595f4641494c4544","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1602:23:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_71db1c0de03fce50db004ce1a4abf214be4bf858ae9e7e5ea1d0b0cdaccd9d9f","typeString":"literal_string \"CREATE2_DEPLOY_FAILED\""},"value":"CREATE2_DEPLOY_FAILED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71db1c0de03fce50db004ce1a4abf214be4bf858ae9e7e5ea1d0b0cdaccd9d9f","typeString":"literal_string \"CREATE2_DEPLOY_FAILED\""}],"id":5795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1574:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1574:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"ExpressionStatement","src":"1574:52:34"},{"expression":{"id":5805,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5773,"src":"1643:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5771,"id":5806,"nodeType":"Return","src":"1636:11:34"}]},"documentation":{"id":5761,"nodeType":"StructuredDocumentation","src":"540:560:34","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":5808,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":5808,"src":"1130:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5765,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":5808,"src":"1154:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1154:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5767,"mutability":"mutable","name":"bytecode","nodeType":"VariableDeclaration","scope":5808,"src":"1176:21:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5766,"name":"bytes","nodeType":"ElementaryTypeName","src":"1176:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1120:83:34"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5808,"src":"1222:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5769,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1221:9:34"},"scope":5865,"src":"1105:549:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5827,"nodeType":"Block","src":"1950:73:34","statements":[{"expression":{"arguments":[{"id":5819,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"1982:4:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5820,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"1988:12:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5823,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2010:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5865","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5865","typeString":"library Create2"}],"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2002:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5821,"name":"address","nodeType":"ElementaryTypeName","src":"2002:7:34","typeDescriptions":{}}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2002:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5818,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[5828,5864],"referencedDeclaration":5864,"src":"1967:14:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1967:49:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5817,"id":5826,"nodeType":"Return","src":"1960:56:34"}]},"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"1660:193:34","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":5828,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":5828,"src":"1882:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1882:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5813,"mutability":"mutable","name":"bytecodeHash","nodeType":"VariableDeclaration","scope":5828,"src":"1896:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1881:36:34"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5828,"src":"1941:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5815,"name":"address","nodeType":"ElementaryTypeName","src":"1941:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1940:9:34"},"scope":5865,"src":"1858:165:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5863,"nodeType":"Block","src":"2406:144:34","statements":[{"assignments":[5841],"declarations":[{"constant":false,"id":5841,"mutability":"mutable","name":"_data","nodeType":"VariableDeclaration","scope":5863,"src":"2416:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2416:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5854,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30786666","id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2466:4:34","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2459:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5845,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2459:6:34","typeDescriptions":{}}},"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2459:12:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"id":5849,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"2473:8:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5850,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"2483:4:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5851,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"2489:12:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5843,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2442:3:34","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2442:16:34","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2442:60:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5842,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2432:9:34","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2432:71:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2416:87:34"},{"expression":{"arguments":[{"arguments":[{"id":5859,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"2536:5:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2528:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:34","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2528:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2520:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5855,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:34","typeDescriptions":{}}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2520:23:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":5839,"id":5862,"nodeType":"Return","src":"2513:30:34"}]},"documentation":{"id":5829,"nodeType":"StructuredDocumentation","src":"2029:232:34","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":5864,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nodeType":"FunctionDefinition","parameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":5864,"src":"2299:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"bytecodeHash","nodeType":"VariableDeclaration","scope":5864,"src":"2321:20:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2321:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5835,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","scope":5864,"src":"2351:16:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5834,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:84:34"},"returnParameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5864,"src":"2397:7:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5837,"name":"address","nodeType":"ElementaryTypeName","src":"2397:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2396:9:34"},"scope":5865,"src":"2266:284:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5866,"src":"518:2034:34"}],"src":"33:2520:34"},"id":34},"contracts/openzeppelin/EIP712.sol":{"ast":{"absolutePath":"contracts/openzeppelin/EIP712.sol","exportedSymbols":{"EIP712":[5956]},"id":5957,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5867,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:35"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"58:1142:35","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":5956,"linearizedBaseContracts":[5956],"name":"EIP712","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5870,"mutability":"immutable","name":"_HASHED_NAME","nodeType":"VariableDeclaration","scope":5956,"src":"1277:38:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1277:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5872,"mutability":"immutable","name":"_HASHED_VERSION","nodeType":"VariableDeclaration","scope":5956,"src":"1321:41:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1321:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5874,"mutability":"immutable","name":"_TYPE_HASH","nodeType":"VariableDeclaration","scope":5956,"src":"1368:36:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1368:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":5906,"nodeType":"Block","src":"2075:225:35","statements":[{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5882,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"2085:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5886,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"2116:4:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2110:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5884,"name":"bytes","nodeType":"ElementaryTypeName","src":"2110:5:35","typeDescriptions":{}}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2110:11:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5883,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2100:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2100:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2085:37:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5890,"nodeType":"ExpressionStatement","src":"2085:37:35"},{"expression":{"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5891,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"2132:15:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5895,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"2166:7:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2160:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5893,"name":"bytes","nodeType":"ElementaryTypeName","src":"2160:5:35","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2160:14:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5892,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2150:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2150:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2132:43:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5899,"nodeType":"ExpressionStatement","src":"2132:43:35"},{"expression":{"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5900,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"2185:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2208:84:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":5901,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2198:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2198:95:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2185:108:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5905,"nodeType":"ExpressionStatement","src":"2185:108:35"}]},"documentation":{"id":5875,"nodeType":"StructuredDocumentation","src":"1456:559:35","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":5907,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":5907,"src":"2032:18:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5876,"name":"string","nodeType":"ElementaryTypeName","src":"2032:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5879,"mutability":"mutable","name":"version","nodeType":"VariableDeclaration","scope":5907,"src":"2052:21:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5878,"name":"string","nodeType":"ElementaryTypeName","src":"2052:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2031:43:35"},"returnParameters":{"id":5881,"nodeType":"ParameterList","parameters":[],"src":"2075:0:35"},"scope":5956,"src":"2020:280:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"2456:118:35","statements":[{"expression":{"arguments":[{"arguments":[{"id":5916,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"2494:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5917,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"2506:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5918,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"2520:15:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5919,"name":"_getChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"2537:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2537:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5923,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2560:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5956","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5956","typeString":"contract EIP712"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2552:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5921,"name":"address","nodeType":"ElementaryTypeName","src":"2552:7:35","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2552:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5914,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2483:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2483:10:35","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2483:83:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5913,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2473:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2473:94:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5912,"id":5927,"nodeType":"Return","src":"2466:101:35"}]},"documentation":{"id":5908,"nodeType":"StructuredDocumentation","src":"2306:75:35","text":" @dev Returns the domain separator for the current chain."},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nodeType":"FunctionDefinition","parameters":{"id":5909,"nodeType":"ParameterList","parameters":[],"src":"2413:2:35"},"returnParameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5929,"src":"2447:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2447:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2446:9:35"},"scope":5956,"src":"2386:188:35","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5947,"nodeType":"Block","src":"3285:97:35","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3329:10:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string \"\u0019\u0001\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":5941,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"3341:18:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3341:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5943,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"3363:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string \"\u0019\u0001\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5938,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3312:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3312:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3312:62:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5937,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3302:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:73:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5936,"id":5946,"nodeType":"Return","src":"3295:80:35"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"2580:614:35","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":5948,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":5948,"src":"3225:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3225:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3224:20:35"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5948,"src":"3276:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3276:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3275:9:35"},"scope":5956,"src":"3199:183:35","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5954,"nodeType":"Block","src":"3495:125:35","statements":[{"AST":{"nodeType":"YulBlock","src":"3570:44:35","statements":[{"nodeType":"YulAssignment","src":"3584:20:35","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"3595:7:35"},"nodeType":"YulFunctionCall","src":"3595:9:35"},"variableNames":[{"name":"chainId","nodeType":"YulIdentifier","src":"3584:7:35"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5951,"isOffset":false,"isSlot":false,"src":"3584:7:35","valueSize":1}],"id":5953,"nodeType":"InlineAssembly","src":"3561:53:35"}]},"id":5955,"implemented":true,"kind":"function","modifiers":[],"name":"_getChainId","nodeType":"FunctionDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[],"src":"3453:2:35"},"returnParameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"chainId","nodeType":"VariableDeclaration","scope":5955,"src":"3478:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:17:35"},"scope":5956,"src":"3433:187:35","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":5957,"src":"1201:2421:35"}],"src":"33:3590:35"},"id":35},"contracts/openzeppelin/ERC20.sol":{"ast":{"absolutePath":"contracts/openzeppelin/ERC20.sol","exportedSymbols":{"ERC20":[6447]},"id":6448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5958,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:36"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":5959,"nodeType":"ImportDirective","scope":6448,"sourceUnit":574,"src":"58:90:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":5960,"nodeType":"ImportDirective","scope":6448,"sourceUnit":763,"src":"149:87:36","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/SafeMath.sol","file":"./SafeMath.sol","id":5961,"nodeType":"ImportDirective","scope":6448,"sourceUnit":8285,"src":"238:24:36","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5963,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1445:6:36","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":5964,"nodeType":"InheritanceSpecifier","src":"1445:6:36"}],"contractDependencies":[762],"contractKind":"contract","documentation":{"id":5962,"nodeType":"StructuredDocumentation","src":"264:1162:36","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":6447,"linearizedBaseContracts":[6447,762],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"id":5967,"libraryName":{"id":5965,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":8284,"src":"1464:8:36","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$8284","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1458:27:36","typeName":{"id":5966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1477:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":5971,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":6447,"src":"1491:45:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5970,"keyType":{"id":5968,"name":"address","nodeType":"ElementaryTypeName","src":"1499:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1491:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":5977,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","scope":6447,"src":"1543:67:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":5976,"keyType":{"id":5972,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1543:47:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":5975,"keyType":{"id":5973,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1562:27:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":5974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":5979,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","scope":6447,"src":"1617:28:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5981,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":6447,"src":"1652:20:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5980,"name":"string","nodeType":"ElementaryTypeName","src":"1652:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":5983,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":6447,"src":"1678:22:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5982,"name":"string","nodeType":"ElementaryTypeName","src":"1678:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":5985,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","scope":6447,"src":"1706:23:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5984,"name":"uint8","nodeType":"ElementaryTypeName","src":"1706:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":6005,"nodeType":"Block","src":"2108:81:36","statements":[{"expression":{"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5993,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"2118:5:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5994,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"2126:5:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2118:13:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5996,"nodeType":"ExpressionStatement","src":"2118:13:36"},{"expression":{"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5997,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"2141:7:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5998,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"2151:7:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2141:17:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6000,"nodeType":"ExpressionStatement","src":"2141:17:36"},{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6001,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"2168:9:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2180:2:36","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2168:14:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6004,"nodeType":"ExpressionStatement","src":"2168:14:36"}]},"documentation":{"id":5986,"nodeType":"StructuredDocumentation","src":"1736:311:36","text":" @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."},"id":6006,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"name_","nodeType":"VariableDeclaration","scope":6006,"src":"2064:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5987,"name":"string","nodeType":"ElementaryTypeName","src":"2064:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5990,"mutability":"mutable","name":"symbol_","nodeType":"VariableDeclaration","scope":6006,"src":"2085:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5989,"name":"string","nodeType":"ElementaryTypeName","src":"2085:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2063:44:36"},"returnParameters":{"id":5992,"nodeType":"ParameterList","parameters":[],"src":"2108:0:36"},"scope":6447,"src":"2052:137:36","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6014,"nodeType":"Block","src":"2306:29:36","statements":[{"expression":{"id":6012,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"2323:5:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6011,"id":6013,"nodeType":"Return","src":"2316:12:36"}]},"documentation":{"id":6007,"nodeType":"StructuredDocumentation","src":"2195:54:36","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":6015,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":6008,"nodeType":"ParameterList","parameters":[],"src":"2267:2:36"},"returnParameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6015,"src":"2291:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6009,"name":"string","nodeType":"ElementaryTypeName","src":"2291:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2290:15:36"},"scope":6447,"src":"2254:81:36","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6023,"nodeType":"Block","src":"2502:31:36","statements":[{"expression":{"id":6021,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"2519:7:36","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6020,"id":6022,"nodeType":"Return","src":"2512:14:36"}]},"documentation":{"id":6016,"nodeType":"StructuredDocumentation","src":"2341:102:36","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":6024,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":6017,"nodeType":"ParameterList","parameters":[],"src":"2463:2:36"},"returnParameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6024,"src":"2487:13:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6018,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2486:15:36"},"scope":6447,"src":"2448:85:36","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6032,"nodeType":"Block","src":"3204:33:36","statements":[{"expression":{"id":6030,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"3221:9:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6029,"id":6031,"nodeType":"Return","src":"3214:16:36"}]},"documentation":{"id":6025,"nodeType":"StructuredDocumentation","src":"2539:612:36","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":6033,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[],"src":"3173:2:36"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6033,"src":"3197:5:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6027,"name":"uint8","nodeType":"ElementaryTypeName","src":"3197:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3196:7:36"},"scope":6447,"src":"3156:81:36","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[693],"body":{"id":6042,"nodeType":"Block","src":"3570:36:36","statements":[{"expression":{"id":6040,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"3587:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6039,"id":6041,"nodeType":"Return","src":"3580:19:36"}]},"documentation":{"id":6034,"nodeType":"StructuredDocumentation","src":"3243:252:36","text":" @dev See {IERC20-totalSupply}. The total supply should only be read using this function\n Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other\n storage values)."},"functionSelector":"18160ddd","id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":{"id":6036,"nodeType":"OverrideSpecifier","overrides":[],"src":"3543:8:36"},"parameters":{"id":6035,"nodeType":"ParameterList","parameters":[],"src":"3520:2:36"},"returnParameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6043,"src":"3561:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3561:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3560:9:36"},"scope":6447,"src":"3500:106:36","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":6053,"nodeType":"Block","src":"3927:37:36","statements":[{"expression":{"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6049,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"3937:12:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3952:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3937:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6052,"nodeType":"ExpressionStatement","src":"3937:20:36"}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"3612:253:36","text":" @dev Sets a new value for the total supply. It should only be set using this function.\n * Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other\n storage values)."},"id":6054,"implemented":true,"kind":"function","modifiers":[],"name":"_setTotalSupply","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":6054,"src":"3895:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3895:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3894:15:36"},"returnParameters":{"id":6048,"nodeType":"ParameterList","parameters":[],"src":"3927:0:36"},"scope":6447,"src":"3870:94:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[701],"body":{"id":6067,"nodeType":"Block","src":"4097:42:36","statements":[{"expression":{"baseExpression":{"id":6063,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"4114:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6065,"indexExpression":{"id":6064,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"4124:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4114:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6062,"id":6066,"nodeType":"Return","src":"4107:25:36"}]},"documentation":{"id":6055,"nodeType":"StructuredDocumentation","src":"3970:47:36","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":6059,"nodeType":"OverrideSpecifier","overrides":[],"src":"4070:8:36"},"parameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":6068,"src":"4041:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6056,"name":"address","nodeType":"ElementaryTypeName","src":"4041:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4040:17:36"},"returnParameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6068,"src":"4088:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6060,"name":"uint256","nodeType":"ElementaryTypeName","src":"4088:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4087:9:36"},"scope":6447,"src":"4022:117:36","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[711],"body":{"id":6088,"nodeType":"Block","src":"4434:78:36","statements":[{"expression":{"arguments":[{"expression":{"id":6080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4454:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4454:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6082,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"4466:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"4477:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6079,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"4444:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4444:40:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6085,"nodeType":"ExpressionStatement","src":"4444:40:36"},{"expression":{"hexValue":"74727565","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4501:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6078,"id":6087,"nodeType":"Return","src":"4494:11:36"}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"4145:192:36","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":6089,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":6075,"nodeType":"OverrideSpecifier","overrides":[],"src":"4410:8:36"},"parameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":6089,"src":"4360:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6070,"name":"address","nodeType":"ElementaryTypeName","src":"4360:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6073,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6089,"src":"4379:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4359:35:36"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6089,"src":"4428:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6076,"name":"bool","nodeType":"ElementaryTypeName","src":"4428:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4427:6:36"},"scope":6447,"src":"4342:170:36","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[721],"body":{"id":6106,"nodeType":"Block","src":"4668:51:36","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":6100,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"4685:11:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6102,"indexExpression":{"id":6101,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"4697:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4685:18:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6104,"indexExpression":{"id":6103,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"4704:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4685:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6099,"id":6105,"nodeType":"Return","src":"4678:34:36"}]},"documentation":{"id":6090,"nodeType":"StructuredDocumentation","src":"4518:47:36","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":6107,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":6096,"nodeType":"OverrideSpecifier","overrides":[],"src":"4641:8:36"},"parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":6107,"src":"4589:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6091,"name":"address","nodeType":"ElementaryTypeName","src":"4589:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6094,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":6107,"src":"4604:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6093,"name":"address","nodeType":"ElementaryTypeName","src":"4604:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4588:32:36"},"returnParameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6107,"src":"4659:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4659:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4658:9:36"},"scope":6447,"src":"4570:149:36","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[731],"body":{"id":6127,"nodeType":"Block","src":"4946:75:36","statements":[{"expression":{"arguments":[{"expression":{"id":6119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4965:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4965:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6121,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"4977:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6122,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"4986:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6118,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"4956:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4956:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6124,"nodeType":"ExpressionStatement","src":"4956:37:36"},{"expression":{"hexValue":"74727565","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5010:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6117,"id":6126,"nodeType":"Return","src":"5003:11:36"}]},"documentation":{"id":6108,"nodeType":"StructuredDocumentation","src":"4725:127:36","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":6114,"nodeType":"OverrideSpecifier","overrides":[],"src":"4922:8:36"},"parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":6128,"src":"4874:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6109,"name":"address","nodeType":"ElementaryTypeName","src":"4874:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6112,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6128,"src":"4891:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4891:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4873:33:36"},"returnParameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6128,"src":"4940:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6115,"name":"bool","nodeType":"ElementaryTypeName","src":"4940:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4939:6:36"},"scope":6447,"src":"4857:164:36","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[743],"body":{"id":6166,"nodeType":"Block","src":"5630:244:36","statements":[{"expression":{"arguments":[{"id":6142,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5650:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6143,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"5658:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"5669:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6141,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"5640:9:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5640:36:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"ExpressionStatement","src":"5640:36:36"},{"expression":{"arguments":[{"id":6148,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5708:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5728:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5728:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":6158,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"5788:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6159,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"5796:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_EXCEEDS_ALLOWANCE","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5796:39:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":6151,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"5752:11:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6153,"indexExpression":{"id":6152,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5764:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5752:19:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6156,"indexExpression":{"expression":{"id":6154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5772:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5772:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5752:31:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"5752:35:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:84:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6147,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"5686:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5686:160:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6163,"nodeType":"ExpressionStatement","src":"5686:160:36"},{"expression":{"hexValue":"74727565","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5863:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6140,"id":6165,"nodeType":"Return","src":"5856:11:36"}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"5027:456:36","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":6137,"nodeType":"OverrideSpecifier","overrides":[],"src":"5606:8:36"},"parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":6167,"src":"5519:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6130,"name":"address","nodeType":"ElementaryTypeName","src":"5519:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":6167,"src":"5543:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6132,"name":"address","nodeType":"ElementaryTypeName","src":"5543:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6167,"src":"5570:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6134,"name":"uint256","nodeType":"ElementaryTypeName","src":"5570:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5509:81:36"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6167,"src":"5624:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6138,"name":"bool","nodeType":"ElementaryTypeName","src":"5624:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5623:6:36"},"scope":6447,"src":"5488:386:36","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6194,"nodeType":"Block","src":"6363:117:36","statements":[{"expression":{"arguments":[{"expression":{"id":6178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6382:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6382:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6180,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"6394:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6188,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"6440:10:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":6181,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"6403:11:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6184,"indexExpression":{"expression":{"id":6182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6415:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6415:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6403:23:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6186,"indexExpression":{"id":6185,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"6427:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6403:32:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"6403:36:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6403:48:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6177,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"6373:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6373:79:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6191,"nodeType":"ExpressionStatement","src":"6373:79:36"},{"expression":{"hexValue":"74727565","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6469:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6176,"id":6193,"nodeType":"Return","src":"6462:11:36"}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"5880:384:36","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":6195,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":6195,"src":"6296:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6169,"name":"address","nodeType":"ElementaryTypeName","src":"6296:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","scope":6195,"src":"6313:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6313:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:37:36"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6195,"src":"6357:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6174,"name":"bool","nodeType":"ElementaryTypeName","src":"6357:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6356:6:36"},"scope":6447,"src":"6269:211:36","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6224,"nodeType":"Block","src":"7066:213:36","statements":[{"expression":{"arguments":[{"expression":{"id":6206,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7098:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7098:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6208,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"7122:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6216,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"7180:15:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6217,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7197:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO","nodeType":"MemberAccess","referencedDeclaration":377,"src":"7197:43:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":6209,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"7143:11:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6212,"indexExpression":{"expression":{"id":6210,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7155:3:36","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7155:10:36","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7143:23:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6214,"indexExpression":{"id":6213,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"7167:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7143:32:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"7143:36:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7143:98:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6205,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"7076:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7076:175:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6221,"nodeType":"ExpressionStatement","src":"7076:175:36"},{"expression":{"hexValue":"74727565","id":6222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7268:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6204,"id":6223,"nodeType":"Return","src":"7261:11:36"}]},"documentation":{"id":6196,"nodeType":"StructuredDocumentation","src":"6486:476:36","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":6225,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":6225,"src":"6994:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6197,"name":"address","nodeType":"ElementaryTypeName","src":"6994:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6200,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","scope":6225,"src":"7011:23:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7011:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6993:42:36"},"returnParameters":{"id":6204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6225,"src":"7060:4:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6202,"name":"bool","nodeType":"ElementaryTypeName","src":"7060:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7059:6:36"},"scope":6447,"src":"6967:312:36","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6293,"nodeType":"Block","src":"7870:442:36","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6236,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"7889:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7907:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7899:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6237,"name":"address","nodeType":"ElementaryTypeName","src":"7899:7:36","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7899:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7889:20:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6242,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7911:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_FROM_ZERO_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":356,"src":"7911:39:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6235,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"7880:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7880:71:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6245,"nodeType":"ExpressionStatement","src":"7880:71:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6247,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"7970:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7991:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7983:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6248,"name":"address","nodeType":"ElementaryTypeName","src":"7983:7:36","typeDescriptions":{}}},"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7970:23:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6253,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7995:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_TO_ZERO_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":359,"src":"7995:37:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6246,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"7961:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7961:72:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6256,"nodeType":"ExpressionStatement","src":"7961:72:36"},{"expression":{"arguments":[{"id":6258,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"8065:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6259,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"8073:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6260,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"8084:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6257,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8044:20:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:47:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6262,"nodeType":"ExpressionStatement","src":"8044:47:36"},{"expression":{"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6263,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"8102:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6265,"indexExpression":{"id":6264,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"8112:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8102:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6270,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"8144:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6271,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8152:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_EXCEEDS_BALANCE","nodeType":"MemberAccess","referencedDeclaration":380,"src":"8152:37:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6266,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"8122:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6268,"indexExpression":{"id":6267,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"8132:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8122:17:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"8122:21:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:68:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8102:88:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6275,"nodeType":"ExpressionStatement","src":"8102:88:36"},{"expression":{"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6276,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"8200:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6278,"indexExpression":{"id":6277,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"8210:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8200:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6283,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"8248:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6279,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"8223:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6281,"indexExpression":{"id":6280,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"8233:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8223:20:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"8223:24:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8223:32:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8200:55:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6286,"nodeType":"ExpressionStatement","src":"8200:55:36"},{"eventCall":{"arguments":[{"id":6288,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"8279:6:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6289,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"8287:9:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6290,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"8298:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6287,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8270:8:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8270:35:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6292,"nodeType":"EmitStatement","src":"8265:40:36"}]},"documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"7285:463:36","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":6294,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":6294,"src":"7781:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6227,"name":"address","nodeType":"ElementaryTypeName","src":"7781:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6230,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":6294,"src":"7805:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6229,"name":"address","nodeType":"ElementaryTypeName","src":"7805:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6232,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6294,"src":"7832:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"7832:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7771:81:36"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[],"src":"7870:0:36"},"scope":6447,"src":"7753:559:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6339,"nodeType":"Block","src":"8648:232:36","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8679:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6303,"name":"address","nodeType":"ElementaryTypeName","src":"8679:7:36","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8679:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6307,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"8691:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"8700:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6302,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"8658:20:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8658:49:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"ExpressionStatement","src":"8658:49:36"},{"expression":{"arguments":[{"arguments":[{"id":6315,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"8752:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6312,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8734:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8734:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"8734:17:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8734:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6311,"name":"_setTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"8718:15:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6318,"nodeType":"ExpressionStatement","src":"8718:42:36"},{"expression":{"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6319,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"8770:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6321,"indexExpression":{"id":6320,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"8780:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8770:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6326,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"8814:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6322,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"8791:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6324,"indexExpression":{"id":6323,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"8801:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8791:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"8791:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8791:30:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8770:51:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6329,"nodeType":"ExpressionStatement","src":"8770:51:36"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8853:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8845:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6331,"name":"address","nodeType":"ElementaryTypeName","src":"8845:7:36","typeDescriptions":{}}},"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8845:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"8857:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6336,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"8866:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6330,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8836:8:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8836:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6338,"nodeType":"EmitStatement","src":"8831:42:36"}]},"documentation":{"id":6295,"nodeType":"StructuredDocumentation","src":"8318:260:36","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."},"id":6340,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":6340,"src":"8598:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6296,"name":"address","nodeType":"ElementaryTypeName","src":"8598:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6299,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6340,"src":"8615:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"8615:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8597:33:36"},"returnParameters":{"id":6301,"nodeType":"ParameterList","parameters":[],"src":"8648:0:36"},"scope":6447,"src":"8583:297:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6398,"nodeType":"Block","src":"9265:346:36","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6349,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"9284:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9303:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9295:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6350,"name":"address","nodeType":"ElementaryTypeName","src":"9295:7:36","typeDescriptions":{}}},"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9295:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9284:21:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6355,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9307:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_BURN_FROM_ZERO_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":365,"src":"9307:35:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6348,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"9275:8:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9275:68:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"ExpressionStatement","src":"9275:68:36"},{"expression":{"arguments":[{"id":6360,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"9375:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9392:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9384:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6361,"name":"address","nodeType":"ElementaryTypeName","src":"9384:7:36","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9384:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6365,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9396:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6359,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"9354:20:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9354:49:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"ExpressionStatement","src":"9354:49:36"},{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6368,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"9414:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6370,"indexExpression":{"id":6369,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"9424:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9414:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9458:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6376,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9466:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_BURN_EXCEEDS_BALANCE","nodeType":"MemberAccess","referencedDeclaration":434,"src":"9466:33:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6371,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"9435:9:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6373,"indexExpression":{"id":6372,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"9445:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9435:18:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"9435:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9435:65:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:86:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6380,"nodeType":"ExpressionStatement","src":"9414:86:36"},{"expression":{"arguments":[{"arguments":[{"id":6385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9544:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6382,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"9526:11:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9526:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":8255,"src":"9526:17:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9526:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6381,"name":"_setTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"9510:15:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9510:42:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6388,"nodeType":"ExpressionStatement","src":"9510:42:36"},{"eventCall":{"arguments":[{"id":6390,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"9576:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9593:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9585:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6391,"name":"address","nodeType":"ElementaryTypeName","src":"9585:7:36","typeDescriptions":{}}},"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9585:10:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6395,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"9597:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6389,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9567:8:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9567:37:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6397,"nodeType":"EmitStatement","src":"9562:42:36"}]},"documentation":{"id":6341,"nodeType":"StructuredDocumentation","src":"8886:309:36","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":6399,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6343,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":6399,"src":"9215:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6342,"name":"address","nodeType":"ElementaryTypeName","src":"9215:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6345,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6399,"src":"9232:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"9232:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9214:33:36"},"returnParameters":{"id":6347,"nodeType":"ParameterList","parameters":[],"src":"9265:0:36"},"scope":6447,"src":"9200:411:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6423,"nodeType":"Block","src":"10147:100:36","statements":[{"expression":{"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6409,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"10157:11:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":6412,"indexExpression":{"id":6410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"10169:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10157:18:36","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6413,"indexExpression":{"id":6411,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"10176:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10157:27:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"10187:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10157:36:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6416,"nodeType":"ExpressionStatement","src":"10157:36:36"},{"eventCall":{"arguments":[{"id":6418,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"10217:5:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6419,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"10224:7:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6420,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"10233:6:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6417,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10208:8:36","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10208:32:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"EmitStatement","src":"10203:37:36"}]},"documentation":{"id":6400,"nodeType":"StructuredDocumentation","src":"9617:412:36","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":6424,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":6424,"src":"10061:13:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6401,"name":"address","nodeType":"ElementaryTypeName","src":"10061:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6404,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":6424,"src":"10084:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6403,"name":"address","nodeType":"ElementaryTypeName","src":"10084:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6406,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6424,"src":"10109:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10109:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10051:78:36"},"returnParameters":{"id":6408,"nodeType":"ParameterList","parameters":[],"src":"10147:0:36"},"scope":6447,"src":"10034:213:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6434,"nodeType":"Block","src":"10620:38:36","statements":[{"expression":{"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6430,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"10630:9:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6431,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"10642:9:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10630:21:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6433,"nodeType":"ExpressionStatement","src":"10630:21:36"}]},"documentation":{"id":6425,"nodeType":"StructuredDocumentation","src":"10253:312:36","text":" @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."},"id":6435,"implemented":true,"kind":"function","modifiers":[],"name":"_setupDecimals","nodeType":"FunctionDefinition","parameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"decimals_","nodeType":"VariableDeclaration","scope":6435,"src":"10594:15:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6426,"name":"uint8","nodeType":"ElementaryTypeName","src":"10594:5:36","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10593:17:36"},"returnParameters":{"id":6429,"nodeType":"ParameterList","parameters":[],"src":"10620:0:36"},"scope":6447,"src":"10570:88:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6445,"nodeType":"Block","src":"11364:64:36","statements":[]},"documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"10664:576:36","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":6446,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":6446,"src":"11284:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6437,"name":"address","nodeType":"ElementaryTypeName","src":"11284:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":6446,"src":"11306:10:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6439,"name":"address","nodeType":"ElementaryTypeName","src":"11306:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6446,"src":"11326:14:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6441,"name":"uint256","nodeType":"ElementaryTypeName","src":"11326:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11274:72:36"},"returnParameters":{"id":6444,"nodeType":"ParameterList","parameters":[],"src":"11364:0:36"},"scope":6447,"src":"11245:183:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":6448,"src":"1427:10003:36"}],"src":"33:11398:36"},"id":36},"contracts/openzeppelin/ERC20Burnable.sol":{"ast":{"absolutePath":"contracts/openzeppelin/ERC20Burnable.sol","exportedSymbols":{"ERC20Burnable":[6504]},"id":6505,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6449,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:37"},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"./ERC20.sol","id":6450,"nodeType":"ImportDirective","scope":6505,"sourceUnit":6448,"src":"58:21:37","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6452,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"325:5:37","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":6453,"nodeType":"InheritanceSpecifier","src":"325:5:37"}],"contractDependencies":[762,6447],"contractKind":"contract","documentation":{"id":6451,"nodeType":"StructuredDocumentation","src":"81:208:37","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":6504,"linearizedBaseContracts":[6504,6447,762],"name":"ERC20Burnable","nodeType":"ContractDefinition","nodes":[{"id":6456,"libraryName":{"id":6454,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":8284,"src":"343:8:37","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$8284","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"337:27:37","typeName":{"id":6455,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":6468,"nodeType":"Block","src":"518:42:37","statements":[{"expression":{"arguments":[{"expression":{"id":6463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"534:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"534:10:37","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6465,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"546:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6462,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"528:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"528:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6467,"nodeType":"ExpressionStatement","src":"528:25:37"}]},"documentation":{"id":6457,"nodeType":"StructuredDocumentation","src":"370:98:37","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":6469,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6469,"src":"487:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6458,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"486:16:37"},"returnParameters":{"id":6461,"nodeType":"ParameterList","parameters":[],"src":"518:0:37"},"scope":6504,"src":"473:87:37","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6502,"nodeType":"Block","src":"932:217:37","statements":[{"assignments":[6478],"declarations":[{"constant":false,"id":6478,"mutability":"mutable","name":"decreasedAllowance","nodeType":"VariableDeclaration","scope":6502,"src":"942:26:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6477,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6489,"initialValue":{"arguments":[{"id":6485,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"1006:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6486,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1014:6:37","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_BURN_EXCEEDS_ALLOWANCE","nodeType":"MemberAccess","referencedDeclaration":383,"src":"1014:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6480,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"981:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"990:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"990:10:37","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6479,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"971:9:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"971:30:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"971:34:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"971:79:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"942:108:37"},{"expression":{"arguments":[{"id":6491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"1070:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6492,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1079:3:37","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1079:10:37","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6494,"name":"decreasedAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"1091:18:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6490,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"1061:8:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1061:49:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6496,"nodeType":"ExpressionStatement","src":"1061:49:37"},{"expression":{"arguments":[{"id":6498,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"1126:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6499,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"1135:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6497,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1120:5:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1120:22:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6501,"nodeType":"ExpressionStatement","src":"1120:22:37"}]},"documentation":{"id":6470,"nodeType":"StructuredDocumentation","src":"566:295:37","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":6503,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nodeType":"FunctionDefinition","parameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6472,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":6503,"src":"884:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6471,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6474,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":6503,"src":"901:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6473,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"883:33:37"},"returnParameters":{"id":6476,"nodeType":"ParameterList","parameters":[],"src":"932:0:37"},"scope":6504,"src":"866:283:37","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":6505,"src":"290:861:37"}],"src":"33:1119:37"},"id":37},"contracts/openzeppelin/ERC20Permit.sol":{"ast":{"absolutePath":"contracts/openzeppelin/ERC20Permit.sol","exportedSymbols":{"ERC20Permit":[6613]},"id":6614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6506,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:38"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol","id":6507,"nodeType":"ImportDirective","scope":6614,"sourceUnit":799,"src":"58:93:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"./ERC20.sol","id":6508,"nodeType":"ImportDirective","scope":6614,"sourceUnit":6448,"src":"153:21:38","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/EOASignaturesValidator.sol","file":"../helpers/EOASignaturesValidator.sol","id":6509,"nodeType":"ImportDirective","scope":6614,"sourceUnit":1959,"src":"175:47:38","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6511,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"775:5:38","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":6512,"nodeType":"InheritanceSpecifier","src":"775:5:38"},{"baseName":{"id":6513,"name":"IERC20Permit","nodeType":"UserDefinedTypeName","referencedDeclaration":798,"src":"782:12:38","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$798","typeString":"contract IERC20Permit"}},"id":6514,"nodeType":"InheritanceSpecifier","src":"782:12:38"},{"baseName":{"id":6515,"name":"EOASignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":1958,"src":"796:22:38","typeDescriptions":{"typeIdentifier":"t_contract$_EOASignaturesValidator_$1958","typeString":"contract EOASignaturesValidator"}},"id":6516,"nodeType":"InheritanceSpecifier","src":"796:22:38"}],"contractDependencies":[636,762,798,1958,5956,6447],"contractKind":"contract","documentation":{"id":6510,"nodeType":"StructuredDocumentation","src":"224:517:38","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":6613,"linearizedBaseContracts":[6613,1958,5956,636,798,6447,762],"name":"ERC20Permit","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6521,"mutability":"constant","name":"_PERMIT_TYPEHASH","nodeType":"VariableDeclaration","scope":6613,"src":"877:153:38","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"940:84:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":6518,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"921:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:109:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":6531,"nodeType":"Block","src":"1312:64:38","statements":[]},"documentation":{"id":6522,"nodeType":"StructuredDocumentation","src":"1037:220:38","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":6532,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6527,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1301:4:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1307:3:38","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":6529,"modifierName":{"id":6526,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"1294:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EIP712_$5956_$","typeString":"type(contract EIP712)"}},"nodeType":"ModifierInvocation","src":"1294:17:38"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6524,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":6532,"src":"1274:18:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6523,"name":"string","nodeType":"ElementaryTypeName","src":"1274:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1273:20:38"},"returnParameters":{"id":6530,"nodeType":"ParameterList","parameters":[],"src":"1312:0:38"},"scope":6613,"src":"1262:114:38","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[783],"body":{"id":6586,"nodeType":"Block","src":"1635:310:38","statements":[{"assignments":[6552],"declarations":[{"constant":false,"id":6552,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":6586,"src":"1645:18:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1645:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6566,"initialValue":{"arguments":[{"arguments":[{"id":6556,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"1700:16:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"1718:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"1725:7:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"1734:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6561,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"1754:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6560,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1741:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1741:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6563,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"1762:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6554,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1689:3:38","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1689:10:38","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1689:82:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6553,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1666:9:38","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1666:115:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1645:136:38"},{"expression":{"arguments":[{"id":6568,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"1814:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6569,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"1821:10:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":6571,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"1851:1:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6572,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"1854:1:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6573,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"1857:1:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6570,"name":"_toArraySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"1833:17:38","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint8,bytes32,bytes32) pure returns (bytes memory)"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1833:26:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6575,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"1861:8:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6576,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1871:6:38","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"1871:24:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6567,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1883,"src":"1792:21:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256,uint256)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1792:104:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6579,"nodeType":"ExpressionStatement","src":"1792:104:38"},{"expression":{"arguments":[{"id":6581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"1916:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6582,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"1923:7:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"1932:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6580,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"1907:8:38","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:31:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6585,"nodeType":"ExpressionStatement","src":"1907:31:38"}]},"documentation":{"id":6533,"nodeType":"StructuredDocumentation","src":"1382:50:38","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":6587,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","overrides":{"id":6549,"nodeType":"OverrideSpecifier","overrides":[],"src":"1626:8:38"},"parameters":{"id":6548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":6587,"src":"1462:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6534,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6537,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":6587,"src":"1485:15:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6536,"name":"address","nodeType":"ElementaryTypeName","src":"1485:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6539,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":6587,"src":"1510:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6541,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":6587,"src":"1533:16:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6543,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":6587,"src":"1559:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6542,"name":"uint8","nodeType":"ElementaryTypeName","src":"1559:5:38","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6545,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":6587,"src":"1576:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1576:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6547,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":6587,"src":"1595:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1595:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1452:158:38"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[],"src":"1635:0:38"},"scope":6613,"src":"1437:508:38","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[791],"body":{"id":6600,"nodeType":"Block","src":"2076:43:38","statements":[{"expression":{"arguments":[{"id":6597,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"2106:5:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6596,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2093:12:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2093:19:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6595,"id":6599,"nodeType":"Return","src":"2086:26:38"}]},"documentation":{"id":6588,"nodeType":"StructuredDocumentation","src":"1951:50:38","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nodeType":"FunctionDefinition","overrides":{"id":6592,"nodeType":"OverrideSpecifier","overrides":[],"src":"2049:8:38"},"parameters":{"id":6591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6590,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":6601,"src":"2022:13:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6589,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2021:15:38"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6601,"src":"2067:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2066:9:38"},"scope":6613,"src":"2006:113:38","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[797],"body":{"id":6611,"nodeType":"Block","src":"2312:44:38","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6608,"name":"getDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"2329:18:38","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2329:20:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6607,"id":6610,"nodeType":"Return","src":"2322:27:38"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"2125:60:38","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":6612,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nodeType":"FunctionDefinition","overrides":{"id":6604,"nodeType":"OverrideSpecifier","overrides":[],"src":"2285:8:38"},"parameters":{"id":6603,"nodeType":"ParameterList","parameters":[],"src":"2268:2:38"},"returnParameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6612,"src":"2303:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2303:7:38","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2302:9:38"},"scope":6613,"src":"2243:113:38","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6614,"src":"742:1616:38"}],"src":"33:2326:38"},"id":38},"contracts/openzeppelin/EnumerableMap.sol":{"ast":{"absolutePath":"contracts/openzeppelin/EnumerableMap.sol","exportedSymbols":{"EnumerableMap":[7383]},"id":7384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6615,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"694:23:39"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":6616,"nodeType":"ImportDirective","scope":7384,"sourceUnit":574,"src":"719:90:39","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":6617,"nodeType":"ImportDirective","scope":7384,"sourceUnit":763,"src":"810:87:39","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"899:607:39","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```"},"fullyImplemented":true,"id":7383,"linearizedBaseContracts":[7383],"name":"EnumerableMap","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableMap.IERC20ToBytes32MapEntry","id":6623,"members":[{"constant":false,"id":6620,"mutability":"mutable","name":"_key","nodeType":"VariableDeclaration","scope":6623,"src":"1943:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6619,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1943:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6622,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":6623,"src":"1964:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1964:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"IERC20ToBytes32MapEntry","nodeType":"StructDefinition","scope":7383,"src":"1902:83:39","visibility":"public"},{"canonicalName":"EnumerableMap.IERC20ToBytes32Map","id":6634,"members":[{"constant":false,"id":6625,"mutability":"mutable","name":"_length","nodeType":"VariableDeclaration","scope":6634,"src":"2067:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6629,"mutability":"mutable","name":"_entries","nodeType":"VariableDeclaration","scope":6634,"src":"2134:52:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry)"},"typeName":{"id":6628,"keyType":{"id":6626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2134:43:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry)"},"valueType":{"id":6627,"name":"IERC20ToBytes32MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":6623,"src":"2153:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry"}}},"visibility":"internal"},{"constant":false,"id":6633,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","scope":6634,"src":"2335:35:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"},"typeName":{"id":6632,"keyType":{"id":6630,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2343:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Mapping","src":"2335:26:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"},"valueType":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2353:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"IERC20ToBytes32Map","nodeType":"StructDefinition","scope":7383,"src":"1991:386:39","visibility":"public"},{"body":{"id":6708,"nodeType":"Block","src":"2730:733:39","statements":[{"assignments":[6647],"declarations":[{"constant":false,"id":6647,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","scope":6708,"src":"2838:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6652,"initialValue":{"baseExpression":{"expression":{"id":6648,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"2857:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"2857:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6651,"indexExpression":{"id":6650,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6639,"src":"2870:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2857:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2838:36:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"2934:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2946:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2934:13:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6706,"nodeType":"Block","src":"3365:92:39","statements":[{"expression":{"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":6693,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"3379:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"3379:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6699,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"3392:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3403:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3392:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3379:26:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"id":6700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6622,"src":"3379:33:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"3415:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3379:41:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6703,"nodeType":"ExpressionStatement","src":"3379:41:39"},{"expression":{"hexValue":"66616c7365","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3441:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6645,"id":6705,"nodeType":"Return","src":"3434:12:39"}]},"id":6707,"nodeType":"IfStatement","src":"2930:527:39","trueBody":{"id":6692,"nodeType":"Block","src":"2949:410:39","statements":[{"assignments":[6657],"declarations":[{"constant":false,"id":6657,"mutability":"mutable","name":"previousLength","nodeType":"VariableDeclaration","scope":6692,"src":"2963:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6660,"initialValue":{"expression":{"id":6658,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"2988:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":6625,"src":"2988:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2963:36:39"},{"expression":{"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6661,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"3013:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"3013:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6665,"indexExpression":{"id":6663,"name":"previousLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"3026:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3013:28:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6667,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6639,"src":"3076:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"3089:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6666,"name":"IERC20ToBytes32MapEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"3044:23:39","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr_$","typeString":"type(struct EnumerableMap.IERC20ToBytes32MapEntry storage pointer)"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"3044:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_memory_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry memory"}},"src":"3013:84:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"id":6671,"nodeType":"ExpressionStatement","src":"3013:84:39"},{"expression":{"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6672,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"3111:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":6625,"src":"3111:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6675,"name":"previousLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"3125:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3142:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3125:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3111:32:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6679,"nodeType":"ExpressionStatement","src":"3111:32:39"},{"expression":{"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6680,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"3285:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"3285:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6684,"indexExpression":{"id":6682,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6639,"src":"3298:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3285:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6685,"name":"previousLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"3305:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3322:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3305:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3285:38:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6689,"nodeType":"ExpressionStatement","src":"3285:38:39"},{"expression":{"hexValue":"74727565","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3344:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6645,"id":6691,"nodeType":"Return","src":"3337:11:39"}]}}]},"documentation":{"id":6635,"nodeType":"StructuredDocumentation","src":"2383:216:39","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":6709,"implemented":true,"kind":"function","modifiers":[],"name":"set","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6709,"src":"2626:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6636,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"2626:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6639,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":6709,"src":"2666:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6638,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2666:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6641,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":6709,"src":"2686:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2686:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2616:89:39"},"returnParameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6709,"src":"2724:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6643,"name":"bool","nodeType":"ElementaryTypeName","src":"2724:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2723:6:39"},"scope":7383,"src":"2604:859:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6728,"nodeType":"Block","src":"3978:51:39","statements":[{"expression":{"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":6719,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"3988:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"3988:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6723,"indexExpression":{"id":6721,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"4001:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3988:19:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"id":6724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6622,"src":"3988:26:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"4017:5:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3988:34:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6727,"nodeType":"ExpressionStatement","src":"3988:34:39"}]},"documentation":{"id":6710,"nodeType":"StructuredDocumentation","src":"3469:378:39","text":" @dev Updates the value for an entry, given its key's index. The key index can be retrieved via\n {unchecked_indexOf}, and it should be noted that key indices may change when calling {set} or {remove}. O(1).\n This function performs one less storage read than {set}, but it should only be used when `index` is known to be\n within bounds."},"id":6729,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_setAt","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6729,"src":"3886:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6711,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"3886:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6714,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":6729,"src":"3926:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6716,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":6729,"src":"3949:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3949:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3876:92:39"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[],"src":"3978:0:39"},"scope":7383,"src":"3852:177:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6818,"nodeType":"Block","src":"4281:1465:39","statements":[{"assignments":[6740],"declarations":[{"constant":false,"id":6740,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","scope":6818,"src":"4389:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4389:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6745,"initialValue":{"baseExpression":{"expression":{"id":6741,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"4408:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"4408:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6744,"indexExpression":{"id":6743,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"4421:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4408:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4389:36:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"4484:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4496:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4484:13:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6816,"nodeType":"Block","src":"5703:37:39","statements":[{"expression":{"hexValue":"66616c7365","id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5724:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6738,"id":6815,"nodeType":"Return","src":"5717:12:39"}]},"id":6817,"nodeType":"IfStatement","src":"4480:1260:39","trueBody":{"id":6813,"nodeType":"Block","src":"4499:1198:39","statements":[{"assignments":[6750],"declarations":[{"constant":false,"id":6750,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","scope":6813,"src":"4822:21:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6749,"name":"uint256","nodeType":"ElementaryTypeName","src":"4822:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6754,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"4846:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4857:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4846:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4822:36:39"},{"assignments":[6756],"declarations":[{"constant":false,"id":6756,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","scope":6813,"src":"4872:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6755,"name":"uint256","nodeType":"ElementaryTypeName","src":"4872:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6761,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6757,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"4892:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":6625,"src":"4892:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4906:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4892:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4872:35:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6762,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"5007:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6763,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"5024:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:26:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6792,"nodeType":"IfStatement","src":"5003:420:39","trueBody":{"id":6791,"nodeType":"Block","src":"5035:388:39","statements":[{"assignments":[6766],"declarations":[{"constant":false,"id":6766,"mutability":"mutable","name":"lastEntry","nodeType":"VariableDeclaration","scope":6791,"src":"5053:41:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry"},"typeName":{"id":6765,"name":"IERC20ToBytes32MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":6623,"src":"5053:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry"}},"visibility":"internal"}],"id":6771,"initialValue":{"baseExpression":{"expression":{"id":6767,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5097:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"5097:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6770,"indexExpression":{"id":6769,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"5110:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5097:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5053:67:39"},{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6772,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5220:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"5220:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6776,"indexExpression":{"id":6774,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"5233:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5220:27:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6777,"name":"lastEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"5250:9:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage pointer"}},"src":"5220:39:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"id":6779,"nodeType":"ExpressionStatement","src":"5220:39:39"},{"expression":{"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6780,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5333:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"5333:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6785,"indexExpression":{"expression":{"id":6782,"name":"lastEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"5346:9:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage pointer"}},"id":6783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6620,"src":"5346:14:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5333:28:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"5364:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5380:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5364:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5333:48:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6790,"nodeType":"ExpressionStatement","src":"5333:48:39"}]}},{"expression":{"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5501:30:39","subExpression":{"baseExpression":{"expression":{"id":6793,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5508:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"5508:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6796,"indexExpression":{"id":6795,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"5521:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5508:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6798,"nodeType":"ExpressionStatement","src":"5501:30:39"},{"expression":{"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6799,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5545:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":6625,"src":"5545:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6802,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"5559:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5545:23:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6804,"nodeType":"ExpressionStatement","src":"5545:23:39"},{"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5636:24:39","subExpression":{"baseExpression":{"expression":{"id":6805,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5643:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"5643:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6808,"indexExpression":{"id":6807,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"5656:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5643:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6810,"nodeType":"ExpressionStatement","src":"5636:24:39"},{"expression":{"hexValue":"74727565","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5682:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6738,"id":6812,"nodeType":"Return","src":"5675:11:39"}]}}]},"documentation":{"id":6730,"nodeType":"StructuredDocumentation","src":"4035:157:39","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":6819,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6732,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6819,"src":"4213:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6731,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"4213:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6734,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":6819,"src":"4245:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6733,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"4245:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4212:44:39"},"returnParameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6737,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6819,"src":"4275:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6736,"name":"bool","nodeType":"ElementaryTypeName","src":"4275:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4274:6:39"},"scope":7383,"src":"4197:1549:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6836,"nodeType":"Block","src":"5916:46:39","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":6829,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"5933:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"5933:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6832,"indexExpression":{"id":6831,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"5946:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5933:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5954:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5933:22:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6828,"id":6835,"nodeType":"Return","src":"5926:29:39"}]},"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"5752:68:39","text":" @dev Returns true if the key is in the map. O(1)."},"id":6837,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6837,"src":"5843:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6821,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"5843:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6824,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":6837,"src":"5875:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6823,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"5875:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"5842:44:39"},"returnParameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6837,"src":"5910:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6826,"name":"bool","nodeType":"ElementaryTypeName","src":"5910:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5909:6:39"},"scope":7383,"src":"5825:137:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6848,"nodeType":"Block","src":"6132:35:39","statements":[{"expression":{"expression":{"id":6845,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"6149:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":6625,"src":"6149:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6844,"id":6847,"nodeType":"Return","src":"6142:18:39"}]},"documentation":{"id":6838,"nodeType":"StructuredDocumentation","src":"5968:79:39","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":6849,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6849,"src":"6068:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6839,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"6068:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"}],"src":"6067:32:39"},"returnParameters":{"id":6844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6843,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6849,"src":"6123:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6842,"name":"uint256","nodeType":"ElementaryTypeName","src":"6123:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6122:9:39"},"scope":7383,"src":"6052:115:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6875,"nodeType":"Block","src":"6619:109:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6862,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"6638:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":6625,"src":"6638:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6864,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"6652:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6638:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6866,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6659:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"6659:20:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6861,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"6629:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6629:51:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6869,"nodeType":"ExpressionStatement","src":"6629:51:39"},{"expression":{"arguments":[{"id":6871,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"6710:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},{"id":6872,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"6715:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6870,"name":"unchecked_at","nodeType":"Identifier","overloadedDeclarations":[6902,7284],"referencedDeclaration":6902,"src":"6697:12:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$762_$_t_bytes32_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,uint256) view returns (contract IERC20,bytes32)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6697:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_bytes32_$","typeString":"tuple(contract IERC20,bytes32)"}},"functionReturnParameters":6860,"id":6874,"nodeType":"Return","src":"6690:31:39"}]},"documentation":{"id":6850,"nodeType":"StructuredDocumentation","src":"6173:342:39","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6876,"src":"6532:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6851,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"6532:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6854,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":6876,"src":"6564:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"6564:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6531:47:39"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6876,"src":"6602:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6856,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"6602:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6859,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6876,"src":"6610:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6610:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6601:17:39"},"scope":7383,"src":"6520:208:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6901,"nodeType":"Block","src":"7149:119:39","statements":[{"assignments":[6889],"declarations":[{"constant":false,"id":6889,"mutability":"mutable","name":"entry","nodeType":"VariableDeclaration","scope":6901,"src":"7159:37:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry"},"typeName":{"id":6888,"name":"IERC20ToBytes32MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":6623,"src":"7159:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry"}},"visibility":"internal"}],"id":6894,"initialValue":{"baseExpression":{"expression":{"id":6890,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"7199:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"7199:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6893,"indexExpression":{"id":6892,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"7212:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7199:19:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7159:59:39"},{"expression":{"components":[{"expression":{"id":6895,"name":"entry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7236:5:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage pointer"}},"id":6896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6620,"src":"7236:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"expression":{"id":6897,"name":"entry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7248:5:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage pointer"}},"id":6898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6622,"src":"7248:12:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7235:26:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_bytes32_$","typeString":"tuple(contract IERC20,bytes32)"}},"functionReturnParameters":6887,"id":6900,"nodeType":"Return","src":"7228:33:39"}]},"documentation":{"id":6877,"nodeType":"StructuredDocumentation","src":"6734:301:39","text":" @dev Same as {at}, except this doesn't revert if `index` it outside of the map (i.e. if it is equal or larger\n than {length}). O(1).\n This function performs one less storage read than {at}, but should only be used when `index` is known to be\n within bounds."},"id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_at","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6902,"src":"7062:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6878,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"7062:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":6902,"src":"7094:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6880,"name":"uint256","nodeType":"ElementaryTypeName","src":"7094:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7061:47:39"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6902,"src":"7132:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6883,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"7132:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6886,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6902,"src":"7140:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7140:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7131:17:39"},"scope":7383,"src":"7040:228:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6918,"nodeType":"Block","src":"7530:50:39","statements":[{"expression":{"expression":{"baseExpression":{"expression":{"id":6912,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"7547:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":6629,"src":"7547:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToBytes32MapEntry_$6623_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToBytes32MapEntry storage ref)"}},"id":6915,"indexExpression":{"id":6914,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"7560:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7547:19:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32MapEntry_$6623_storage","typeString":"struct EnumerableMap.IERC20ToBytes32MapEntry storage ref"}},"id":6916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6622,"src":"7547:26:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6911,"id":6917,"nodeType":"Return","src":"7540:33:39"}]},"documentation":{"id":6903,"nodeType":"StructuredDocumentation","src":"7274:145:39","text":" @dev Same as {unchecked_At}, except it only returns the value and not the key (performing one less storage\n read). O(1)."},"id":6919,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_valueAt","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6919,"src":"7451:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6904,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"7451:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6907,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":6919,"src":"7483:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6906,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7450:47:39"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6919,"src":"7521:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7521:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7520:9:39"},"scope":7383,"src":"7424:156:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6952,"nodeType":"Block","src":"7905:140:39","statements":[{"assignments":[6932],"declarations":[{"constant":false,"id":6932,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":6952,"src":"7915:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6931,"name":"uint256","nodeType":"ElementaryTypeName","src":"7915:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6937,"initialValue":{"baseExpression":{"expression":{"id":6933,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"7931:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"7931:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6936,"indexExpression":{"id":6935,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"7944:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7931:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7915:33:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"7967:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7975:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7967:9:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6942,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"7978:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6938,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"7958:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7958:30:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6944,"nodeType":"ExpressionStatement","src":"7958:30:39"},{"expression":{"arguments":[{"id":6946,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"8023:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6947,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"8028:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8036:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8028:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6945,"name":"unchecked_valueAt","nodeType":"Identifier","overloadedDeclarations":[6919,7301],"referencedDeclaration":6919,"src":"8005:17:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,uint256) view returns (bytes32)"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8005:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6930,"id":6951,"nodeType":"Return","src":"7998:40:39"}]},"documentation":{"id":6920,"nodeType":"StructuredDocumentation","src":"7586:176:39","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map. Reverts with `errorCode` otherwise."},"id":6953,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","parameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6922,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6953,"src":"7789:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6921,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"7789:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6924,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":6953,"src":"7829:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6923,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"7829:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6926,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":6953,"src":"7849:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6925,"name":"uint256","nodeType":"ElementaryTypeName","src":"7849:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7779:93:39"},"returnParameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6953,"src":"7896:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7896:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7895:9:39"},"scope":7383,"src":"7767:278:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6983,"nodeType":"Block","src":"8320:154:39","statements":[{"assignments":[6966],"declarations":[{"constant":false,"id":6966,"mutability":"mutable","name":"uncheckedIndex","nodeType":"VariableDeclaration","scope":6983,"src":"8330:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8330:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6971,"initialValue":{"arguments":[{"id":6968,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"8373:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},{"id":6969,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"8378:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"},{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":6967,"name":"unchecked_indexOf","nodeType":"Identifier","overloadedDeclarations":[7000,7382],"referencedDeclaration":7000,"src":"8355:17:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20) view returns (uint256)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8355:27:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8330:52:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"uncheckedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"8401:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8419:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8401:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6976,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"8422:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6972,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8392:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8392:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6978,"nodeType":"ExpressionStatement","src":"8392:40:39"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6979,"name":"uncheckedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"8449:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8466:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8449:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6964,"id":6982,"nodeType":"Return","src":"8442:25:39"}]},"documentation":{"id":6954,"nodeType":"StructuredDocumentation","src":"8051:122:39","text":" @dev Returns the index for `key`.\n Requirements:\n - `key` must be in the map."},"id":6984,"implemented":true,"kind":"function","modifiers":[],"name":"indexOf","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":6984,"src":"8204:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6955,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"8204:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6958,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":6984,"src":"8244:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6957,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"8244:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6960,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":6984,"src":"8264:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"8264:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8194:93:39"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6984,"src":"8311:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6962,"name":"uint256","nodeType":"ElementaryTypeName","src":"8311:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8310:9:39"},"scope":7383,"src":"8178:296:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6999,"nodeType":"Block","src":"8729:41:39","statements":[{"expression":{"baseExpression":{"expression":{"id":6994,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"8746:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage pointer"}},"id":6995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6633,"src":"8746:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":6997,"indexExpression":{"id":6996,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"8759:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8746:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6993,"id":6998,"nodeType":"Return","src":"8739:24:39"}]},"documentation":{"id":6985,"nodeType":"StructuredDocumentation","src":"8480:141:39","text":" @dev Returns the index for `key` **plus one**. Does not revert if the key is not in the map, and returns 0\n instead."},"id":7000,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_indexOf","nodeType":"FunctionDefinition","parameters":{"id":6990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7000,"src":"8653:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":6986,"name":"IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"8653:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":6989,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7000,"src":"8685:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":6988,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"8685:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"8652:44:39"},"returnParameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7000,"src":"8720:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8720:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8719:9:39"},"scope":7383,"src":"8626:144:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.IERC20ToUint256MapEntry","id":7005,"members":[{"constant":false,"id":7002,"mutability":"mutable","name":"_key","nodeType":"VariableDeclaration","scope":7005,"src":"8844:11:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7001,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"8844:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7004,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":7005,"src":"8865:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7003,"name":"uint256","nodeType":"ElementaryTypeName","src":"8865:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"IERC20ToUint256MapEntry","nodeType":"StructDefinition","scope":7383,"src":"8803:83:39","visibility":"public"},{"canonicalName":"EnumerableMap.IERC20ToUint256Map","id":7016,"members":[{"constant":false,"id":7007,"mutability":"mutable","name":"_length","nodeType":"VariableDeclaration","scope":7016,"src":"8968:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7006,"name":"uint256","nodeType":"ElementaryTypeName","src":"8968:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7011,"mutability":"mutable","name":"_entries","nodeType":"VariableDeclaration","scope":7016,"src":"9035:52:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry)"},"typeName":{"id":7010,"keyType":{"id":7008,"name":"uint256","nodeType":"ElementaryTypeName","src":"9043:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"9035:43:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry)"},"valueType":{"id":7009,"name":"IERC20ToUint256MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":7005,"src":"9054:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry"}}},"visibility":"internal"},{"constant":false,"id":7015,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","scope":7016,"src":"9236:35:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"},"typeName":{"id":7014,"keyType":{"id":7012,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"9244:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"nodeType":"Mapping","src":"9236:26:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"},"valueType":{"id":7013,"name":"uint256","nodeType":"ElementaryTypeName","src":"9254:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"IERC20ToUint256Map","nodeType":"StructDefinition","scope":7383,"src":"8892:386:39","visibility":"public"},{"body":{"id":7090,"nodeType":"Block","src":"9631:733:39","statements":[{"assignments":[7029],"declarations":[{"constant":false,"id":7029,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","scope":7090,"src":"9739:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"9739:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7034,"initialValue":{"baseExpression":{"expression":{"id":7030,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"9758:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"9758:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7033,"indexExpression":{"id":7032,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"9771:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9758:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9739:36:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7035,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"9835:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9847:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9835:13:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7088,"nodeType":"Block","src":"10266:92:39","statements":[{"expression":{"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":7075,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"10280:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"10280:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7081,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"10293:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10304:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10293:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10280:26:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"id":7082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7004,"src":"10280:33:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"10316:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10280:41:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7085,"nodeType":"ExpressionStatement","src":"10280:41:39"},{"expression":{"hexValue":"66616c7365","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10342:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7027,"id":7087,"nodeType":"Return","src":"10335:12:39"}]},"id":7089,"nodeType":"IfStatement","src":"9831:527:39","trueBody":{"id":7074,"nodeType":"Block","src":"9850:410:39","statements":[{"assignments":[7039],"declarations":[{"constant":false,"id":7039,"mutability":"mutable","name":"previousLength","nodeType":"VariableDeclaration","scope":7074,"src":"9864:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7038,"name":"uint256","nodeType":"ElementaryTypeName","src":"9864:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7042,"initialValue":{"expression":{"id":7040,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"9889:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"9889:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9864:36:39"},{"expression":{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7043,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"9914:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"9914:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7047,"indexExpression":{"id":7045,"name":"previousLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"9927:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9914:28:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7049,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"9977:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"9990:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7048,"name":"IERC20ToUint256MapEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"9945:23:39","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr_$","typeString":"type(struct EnumerableMap.IERC20ToUint256MapEntry storage pointer)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"9945:53:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_memory_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry memory"}},"src":"9914:84:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"id":7053,"nodeType":"ExpressionStatement","src":"9914:84:39"},{"expression":{"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7054,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"10012:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"10012:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7057,"name":"previousLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"10026:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10043:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10026:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10012:32:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7061,"nodeType":"ExpressionStatement","src":"10012:32:39"},{"expression":{"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7062,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"10186:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"10186:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7066,"indexExpression":{"id":7064,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"10199:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10186:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7067,"name":"previousLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"10206:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10223:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10206:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10186:38:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7071,"nodeType":"ExpressionStatement","src":"10186:38:39"},{"expression":{"hexValue":"74727565","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10245:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7027,"id":7073,"nodeType":"Return","src":"10238:11:39"}]}}]},"documentation":{"id":7017,"nodeType":"StructuredDocumentation","src":"9284:216:39","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":7091,"implemented":true,"kind":"function","modifiers":[],"name":"set","nodeType":"FunctionDefinition","parameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7091,"src":"9527:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7018,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"9527:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7021,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7091,"src":"9567:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7020,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"9567:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7023,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7091,"src":"9587:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7022,"name":"uint256","nodeType":"ElementaryTypeName","src":"9587:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9517:89:39"},"returnParameters":{"id":7027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7026,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7091,"src":"9625:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7025,"name":"bool","nodeType":"ElementaryTypeName","src":"9625:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9624:6:39"},"scope":7383,"src":"9505:859:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7110,"nodeType":"Block","src":"10879:51:39","statements":[{"expression":{"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":7101,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"10889:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"10889:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7105,"indexExpression":{"id":7103,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"10902:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10889:19:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"id":7106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7004,"src":"10889:26:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"10918:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10889:34:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7109,"nodeType":"ExpressionStatement","src":"10889:34:39"}]},"documentation":{"id":7092,"nodeType":"StructuredDocumentation","src":"10370:378:39","text":" @dev Updates the value for an entry, given its key's index. The key index can be retrieved via\n {unchecked_indexOf}, and it should be noted that key indices may change when calling {set} or {remove}. O(1).\n This function performs one less storage read than {set}, but it should only be used when `index` is known to be\n within bounds."},"id":7111,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_setAt","nodeType":"FunctionDefinition","parameters":{"id":7099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7111,"src":"10787:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7093,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"10787:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7096,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7111,"src":"10827:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7095,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7098,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7111,"src":"10850:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"10850:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10777:92:39"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[],"src":"10879:0:39"},"scope":7383,"src":"10753:177:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7200,"nodeType":"Block","src":"11182:1465:39","statements":[{"assignments":[7122],"declarations":[{"constant":false,"id":7122,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","scope":7200,"src":"11290:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7121,"name":"uint256","nodeType":"ElementaryTypeName","src":"11290:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7127,"initialValue":{"baseExpression":{"expression":{"id":7123,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"11309:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"11309:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7126,"indexExpression":{"id":7125,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"11322:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11309:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11290:36:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7128,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"11385:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11397:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11385:13:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7198,"nodeType":"Block","src":"12604:37:39","statements":[{"expression":{"hexValue":"66616c7365","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12625:5:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7120,"id":7197,"nodeType":"Return","src":"12618:12:39"}]},"id":7199,"nodeType":"IfStatement","src":"11381:1260:39","trueBody":{"id":7195,"nodeType":"Block","src":"11400:1198:39","statements":[{"assignments":[7132],"declarations":[{"constant":false,"id":7132,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","scope":7195,"src":"11723:21:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7131,"name":"uint256","nodeType":"ElementaryTypeName","src":"11723:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7136,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7133,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"11747:8:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11758:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11747:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11723:36:39"},{"assignments":[7138],"declarations":[{"constant":false,"id":7138,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","scope":7195,"src":"11773:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7143,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7139,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"11793:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"11793:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11807:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11793:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11773:35:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7144,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"11908:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7145,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"11925:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11908:26:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7174,"nodeType":"IfStatement","src":"11904:420:39","trueBody":{"id":7173,"nodeType":"Block","src":"11936:388:39","statements":[{"assignments":[7148],"declarations":[{"constant":false,"id":7148,"mutability":"mutable","name":"lastEntry","nodeType":"VariableDeclaration","scope":7173,"src":"11954:41:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry"},"typeName":{"id":7147,"name":"IERC20ToUint256MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":7005,"src":"11954:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry"}},"visibility":"internal"}],"id":7153,"initialValue":{"baseExpression":{"expression":{"id":7149,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"11998:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"11998:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7152,"indexExpression":{"id":7151,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"12011:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11998:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11954:67:39"},{"expression":{"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7154,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"12121:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"12121:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7158,"indexExpression":{"id":7156,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"12134:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12121:27:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7159,"name":"lastEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"12151:9:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage pointer"}},"src":"12121:39:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"id":7161,"nodeType":"ExpressionStatement","src":"12121:39:39"},{"expression":{"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7162,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"12234:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"12234:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7167,"indexExpression":{"expression":{"id":7164,"name":"lastEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"12247:9:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage pointer"}},"id":7165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7002,"src":"12247:14:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12234:28:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7168,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"12265:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12234:48:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7172,"nodeType":"ExpressionStatement","src":"12234:48:39"}]}},{"expression":{"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12402:30:39","subExpression":{"baseExpression":{"expression":{"id":7175,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"12409:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"12409:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7178,"indexExpression":{"id":7177,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"12422:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12409:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7180,"nodeType":"ExpressionStatement","src":"12402:30:39"},{"expression":{"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7181,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"12446:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"12446:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7184,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"12460:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12446:23:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7186,"nodeType":"ExpressionStatement","src":"12446:23:39"},{"expression":{"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12537:24:39","subExpression":{"baseExpression":{"expression":{"id":7187,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"12544:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"12544:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7190,"indexExpression":{"id":7189,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"12557:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12544:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"ExpressionStatement","src":"12537:24:39"},{"expression":{"hexValue":"74727565","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12583:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7120,"id":7194,"nodeType":"Return","src":"12576:11:39"}]}}]},"documentation":{"id":7112,"nodeType":"StructuredDocumentation","src":"10936:157:39","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":7201,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7201,"src":"11114:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7113,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"11114:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7116,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7201,"src":"11146:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7115,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"11146:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"11113:44:39"},"returnParameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7201,"src":"11176:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7118,"name":"bool","nodeType":"ElementaryTypeName","src":"11176:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11175:6:39"},"scope":7383,"src":"11098:1549:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7218,"nodeType":"Block","src":"12817:46:39","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7211,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"12834:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"12834:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7214,"indexExpression":{"id":7213,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"12847:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12834:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12855:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12834:22:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7210,"id":7217,"nodeType":"Return","src":"12827:29:39"}]},"documentation":{"id":7202,"nodeType":"StructuredDocumentation","src":"12653:68:39","text":" @dev Returns true if the key is in the map. O(1)."},"id":7219,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7219,"src":"12744:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7203,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"12744:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7206,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7219,"src":"12776:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7205,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"12776:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"12743:44:39"},"returnParameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7219,"src":"12811:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7208,"name":"bool","nodeType":"ElementaryTypeName","src":"12811:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12810:6:39"},"scope":7383,"src":"12726:137:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7230,"nodeType":"Block","src":"13033:35:39","statements":[{"expression":{"expression":{"id":7227,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"13050:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"13050:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7226,"id":7229,"nodeType":"Return","src":"13043:18:39"}]},"documentation":{"id":7220,"nodeType":"StructuredDocumentation","src":"12869:79:39","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":7231,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7231,"src":"12969:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7221,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"12969:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"}],"src":"12968:32:39"},"returnParameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7231,"src":"13024:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"13024:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13023:9:39"},"scope":7383,"src":"12953:115:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7257,"nodeType":"Block","src":"13520:109:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7244,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"13539:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_length","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"13539:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7246,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"13553:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13539:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7248,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"13560:6:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"13560:20:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7243,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"13530:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13530:51:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7251,"nodeType":"ExpressionStatement","src":"13530:51:39"},{"expression":{"arguments":[{"id":7253,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"13611:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},{"id":7254,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"13616:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7252,"name":"unchecked_at","nodeType":"Identifier","overloadedDeclarations":[6902,7284],"referencedDeclaration":7284,"src":"13598:12:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256) view returns (contract IERC20,uint256)"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13598:24:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"tuple(contract IERC20,uint256)"}},"functionReturnParameters":7242,"id":7256,"nodeType":"Return","src":"13591:31:39"}]},"documentation":{"id":7232,"nodeType":"StructuredDocumentation","src":"13074:342:39","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7258,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7258,"src":"13433:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7233,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"13433:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7236,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7258,"src":"13465:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7235,"name":"uint256","nodeType":"ElementaryTypeName","src":"13465:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13432:47:39"},"returnParameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7258,"src":"13503:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7238,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"13503:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7241,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7258,"src":"13511:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7240,"name":"uint256","nodeType":"ElementaryTypeName","src":"13511:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13502:17:39"},"scope":7383,"src":"13421:208:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7283,"nodeType":"Block","src":"14050:119:39","statements":[{"assignments":[7271],"declarations":[{"constant":false,"id":7271,"mutability":"mutable","name":"entry","nodeType":"VariableDeclaration","scope":7283,"src":"14060:37:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry"},"typeName":{"id":7270,"name":"IERC20ToUint256MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":7005,"src":"14060:23:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry"}},"visibility":"internal"}],"id":7276,"initialValue":{"baseExpression":{"expression":{"id":7272,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"14100:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"14100:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7275,"indexExpression":{"id":7274,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"14113:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14100:19:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14060:59:39"},{"expression":{"components":[{"expression":{"id":7277,"name":"entry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"14137:5:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage pointer"}},"id":7278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7002,"src":"14137:10:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"expression":{"id":7279,"name":"entry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"14149:5:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage pointer"}},"id":7280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7004,"src":"14149:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14136:26:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"tuple(contract IERC20,uint256)"}},"functionReturnParameters":7269,"id":7282,"nodeType":"Return","src":"14129:33:39"}]},"documentation":{"id":7259,"nodeType":"StructuredDocumentation","src":"13635:301:39","text":" @dev Same as {at}, except this doesn't revert if `index` it outside of the map (i.e. if it is equal or larger\n than {length}). O(1).\n This function performs one less storage read than {at}, but should only be used when `index` is known to be\n within bounds."},"id":7284,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_at","nodeType":"FunctionDefinition","parameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7261,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7284,"src":"13963:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7260,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"13963:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7263,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7284,"src":"13995:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7262,"name":"uint256","nodeType":"ElementaryTypeName","src":"13995:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13962:47:39"},"returnParameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7284,"src":"14033:6:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7265,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"14033:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7268,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7284,"src":"14041:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7267,"name":"uint256","nodeType":"ElementaryTypeName","src":"14041:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14032:17:39"},"scope":7383,"src":"13941:228:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7300,"nodeType":"Block","src":"14431:50:39","statements":[{"expression":{"expression":{"baseExpression":{"expression":{"id":7294,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"14448:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"14448:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_IERC20ToUint256MapEntry_$7005_storage_$","typeString":"mapping(uint256 => struct EnumerableMap.IERC20ToUint256MapEntry storage ref)"}},"id":7297,"indexExpression":{"id":7296,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"14461:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14448:19:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256MapEntry_$7005_storage","typeString":"struct EnumerableMap.IERC20ToUint256MapEntry storage ref"}},"id":7298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7004,"src":"14448:26:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7293,"id":7299,"nodeType":"Return","src":"14441:33:39"}]},"documentation":{"id":7285,"nodeType":"StructuredDocumentation","src":"14175:145:39","text":" @dev Same as {unchecked_At}, except it only returns the value and not the key (performing one less storage\n read). O(1)."},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_valueAt","nodeType":"FunctionDefinition","parameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7287,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7301,"src":"14352:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7286,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"14352:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7289,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7301,"src":"14384:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7288,"name":"uint256","nodeType":"ElementaryTypeName","src":"14384:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14351:47:39"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7301,"src":"14422:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7291,"name":"uint256","nodeType":"ElementaryTypeName","src":"14422:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14421:9:39"},"scope":7383,"src":"14325:156:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7334,"nodeType":"Block","src":"14806:140:39","statements":[{"assignments":[7314],"declarations":[{"constant":false,"id":7314,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7334,"src":"14816:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7313,"name":"uint256","nodeType":"ElementaryTypeName","src":"14816:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7319,"initialValue":{"baseExpression":{"expression":{"id":7315,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"14832:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"14832:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7318,"indexExpression":{"id":7317,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"14845:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14832:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14816:33:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7321,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"14868:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14876:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14868:9:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7324,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"14879:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7320,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"14859:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14859:30:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7326,"nodeType":"ExpressionStatement","src":"14859:30:39"},{"expression":{"arguments":[{"id":7328,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"14924:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7329,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"14929:5:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14937:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14929:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7327,"name":"unchecked_valueAt","nodeType":"Identifier","overloadedDeclarations":[6919,7301],"referencedDeclaration":7301,"src":"14906:17:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256) view returns (uint256)"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14906:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7312,"id":7333,"nodeType":"Return","src":"14899:40:39"}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"14487:176:39","text":" @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map. Reverts with `errorCode` otherwise."},"id":7335,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","parameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7335,"src":"14690:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7303,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"14690:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7306,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7335,"src":"14730:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7305,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"14730:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7308,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":7335,"src":"14750:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7307,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14680:93:39"},"returnParameters":{"id":7312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7311,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7335,"src":"14797:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7310,"name":"uint256","nodeType":"ElementaryTypeName","src":"14797:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14796:9:39"},"scope":7383,"src":"14668:278:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"15221:154:39","statements":[{"assignments":[7348],"declarations":[{"constant":false,"id":7348,"mutability":"mutable","name":"uncheckedIndex","nodeType":"VariableDeclaration","scope":7365,"src":"15231:22:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7347,"name":"uint256","nodeType":"ElementaryTypeName","src":"15231:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7353,"initialValue":{"arguments":[{"id":7350,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"15274:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},{"id":7351,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"15279:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"},{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":7349,"name":"unchecked_indexOf","nodeType":"Identifier","overloadedDeclarations":[7000,7382],"referencedDeclaration":7382,"src":"15256:17:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20) view returns (uint256)"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15256:27:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15231:52:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7355,"name":"uncheckedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"15302:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15320:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15302:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7358,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"15323:9:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7354,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"15293:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15293:40:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7360,"nodeType":"ExpressionStatement","src":"15293:40:39"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7361,"name":"uncheckedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"15350:14:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15367:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15350:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7346,"id":7364,"nodeType":"Return","src":"15343:25:39"}]},"documentation":{"id":7336,"nodeType":"StructuredDocumentation","src":"14952:122:39","text":" @dev Returns the index for `key`.\n Requirements:\n - `key` must be in the map."},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"indexOf","nodeType":"FunctionDefinition","parameters":{"id":7343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7366,"src":"15105:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7337,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"15105:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7340,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7366,"src":"15145:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7339,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"15145:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7342,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":7366,"src":"15165:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"15165:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15095:93:39"},"returnParameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7366,"src":"15212:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7344,"name":"uint256","nodeType":"ElementaryTypeName","src":"15212:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15211:9:39"},"scope":7383,"src":"15079:296:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7381,"nodeType":"Block","src":"15630:41:39","statements":[{"expression":{"baseExpression":{"expression":{"id":7376,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"15647:3:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map storage pointer"}},"id":7377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"15647:12:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"mapping(contract IERC20 => uint256)"}},"id":7379,"indexExpression":{"id":7378,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"15660:3:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15647:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7375,"id":7380,"nodeType":"Return","src":"15640:24:39"}]},"documentation":{"id":7367,"nodeType":"StructuredDocumentation","src":"15381:141:39","text":" @dev Returns the index for `key` **plus one**. Does not revert if the key is not in the map, and returns 0\n instead."},"id":7382,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_indexOf","nodeType":"FunctionDefinition","parameters":{"id":7372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","scope":7382,"src":"15554:30:39","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":7368,"name":"IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"15554:18:39","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"internal"},{"constant":false,"id":7371,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":7382,"src":"15586:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":7370,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"15586:6:39","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"15553:44:39"},"returnParameters":{"id":7375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7374,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7382,"src":"15621:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7373,"name":"uint256","nodeType":"ElementaryTypeName","src":"15621:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15620:9:39"},"scope":7383,"src":"15527:144:39","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7384,"src":"1507:14166:39"}],"src":"694:14980:39"},"id":39},"contracts/openzeppelin/EnumerableSet.sol":{"ast":{"absolutePath":"contracts/openzeppelin/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[7836]},"id":7837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7385,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"406:23:40"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":7386,"nodeType":"ImportDirective","scope":7837,"sourceUnit":574,"src":"431:90:40","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":7387,"nodeType":"StructuredDocumentation","src":"523:686:40","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."},"fullyImplemented":true,"id":7836,"linearizedBaseContracts":[7836],"name":"EnumerableSet","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.AddressSet","id":7395,"members":[{"constant":false,"id":7390,"mutability":"mutable","name":"_values","nodeType":"VariableDeclaration","scope":7395,"src":"1503:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7388,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7389,"nodeType":"ArrayTypeName","src":"1503:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7394,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","scope":7395,"src":"1653:36:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7393,"keyType":{"id":7391,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1653:27:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"AddressSet","nodeType":"StructDefinition","scope":7836,"src":"1442:254:40","visibility":"public"},{"body":{"id":7435,"nodeType":"Block","src":"1927:334:40","statements":[{"condition":{"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1941:21:40","subExpression":{"arguments":[{"id":7406,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"1951:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},{"id":7407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"1956:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7405,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[7539,7763],"referencedDeclaration":7539,"src":"1942:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7395_storage_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1942:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7433,"nodeType":"Block","src":"2218:37:40","statements":[{"expression":{"hexValue":"66616c7365","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2239:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7404,"id":7432,"nodeType":"Return","src":"2232:12:40"}]},"id":7434,"nodeType":"IfStatement","src":"1937:318:40","trueBody":{"id":7430,"nodeType":"Block","src":"1964:248:40","statements":[{"expression":{"arguments":[{"id":7415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"1995:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":7410,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"1978:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"1978:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1978:16:40","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1978:23:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7417,"nodeType":"ExpressionStatement","src":"1978:23:40"},{"expression":{"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7418,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"2136:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"2136:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7422,"indexExpression":{"id":7420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"2149:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2136:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":7423,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"2158:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"2158:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2158:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2136:40:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7427,"nodeType":"ExpressionStatement","src":"2136:40:40"},{"expression":{"hexValue":"74727565","id":7428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2197:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7404,"id":7429,"nodeType":"Return","src":"2190:11:40"}]}}]},"documentation":{"id":7396,"nodeType":"StructuredDocumentation","src":"1702:144:40","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, if it was not already present."},"id":7436,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":7401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7436,"src":"1864:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7397,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"1864:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7400,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7436,"src":"1888:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7399,"name":"address","nodeType":"ElementaryTypeName","src":"1888:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1863:39:40"},"returnParameters":{"id":7404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7403,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7436,"src":"1921:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7402,"name":"bool","nodeType":"ElementaryTypeName","src":"1921:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1920:6:40"},"scope":7836,"src":"1851:410:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7520,"nodeType":"Block","src":"2508:1388:40","statements":[{"assignments":[7447],"declarations":[{"constant":false,"id":7447,"mutability":"mutable","name":"valueIndex","nodeType":"VariableDeclaration","scope":7520,"src":"2618:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7452,"initialValue":{"baseExpression":{"expression":{"id":7448,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"2639:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"2639:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7451,"indexExpression":{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"2652:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2639:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2618:40:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7453,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"2673:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2687:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2673:15:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7518,"nodeType":"Block","src":"3853:37:40","statements":[{"expression":{"hexValue":"66616c7365","id":7516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3874:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7445,"id":7517,"nodeType":"Return","src":"3867:12:40"}]},"id":7519,"nodeType":"IfStatement","src":"2669:1221:40","trueBody":{"id":7515,"nodeType":"Block","src":"2690:1157:40","statements":[{"assignments":[7457],"declarations":[{"constant":false,"id":7457,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","scope":7515,"src":"3042:21:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7461,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7458,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"3066:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3079:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3066:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3042:38:40"},{"assignments":[7463],"declarations":[{"constant":false,"id":7463,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","scope":7515,"src":"3094:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3094:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7469,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7464,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"3114:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"3114:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3114:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3135:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3114:22:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3094:42:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7470,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"3236:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7471,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"3253:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3236:26:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7499,"nodeType":"IfStatement","src":"3232:389:40","trueBody":{"id":7498,"nodeType":"Block","src":"3264:357:40","statements":[{"assignments":[7474],"declarations":[{"constant":false,"id":7474,"mutability":"mutable","name":"lastValue","nodeType":"VariableDeclaration","scope":7498,"src":"3282:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7473,"name":"address","nodeType":"ElementaryTypeName","src":"3282:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7479,"initialValue":{"baseExpression":{"expression":{"id":7475,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"3302:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"3302:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7478,"indexExpression":{"id":7477,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"3314:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3302:22:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3282:42:40"},{"expression":{"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7480,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"3424:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"3424:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7484,"indexExpression":{"id":7482,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"3436:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3424:26:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7485,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"3453:9:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3424:38:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7487,"nodeType":"ExpressionStatement","src":"3424:38:40"},{"expression":{"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7488,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"3536:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"3536:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7492,"indexExpression":{"id":7490,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"3549:9:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3536:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7493,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"3562:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3578:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3562:17:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3536:43:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7497,"nodeType":"ExpressionStatement","src":"3536:43:40"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7500,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"3699:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"3699:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3699:15:40","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3699:17:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7506,"nodeType":"ExpressionStatement","src":"3699:17:40"},{"expression":{"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3784:26:40","subExpression":{"baseExpression":{"expression":{"id":7507,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"3791:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"3791:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7510,"indexExpression":{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"3804:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3791:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7512,"nodeType":"ExpressionStatement","src":"3784:26:40"},{"expression":{"hexValue":"74727565","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3832:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7445,"id":7514,"nodeType":"Return","src":"3825:11:40"}]}}]},"documentation":{"id":7437,"nodeType":"StructuredDocumentation","src":"2267:157:40","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7521,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":7442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7439,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7521,"src":"2445:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7438,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"2445:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7441,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7521,"src":"2469:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7440,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2444:39:40"},"returnParameters":{"id":7445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7444,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7521,"src":"2502:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7443,"name":"bool","nodeType":"ElementaryTypeName","src":"2502:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2501:6:40"},"scope":7836,"src":"2429:1467:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7538,"nodeType":"Block","src":"4063:48:40","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7531,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"4080:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"4080:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7534,"indexExpression":{"id":7533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"4093:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4080:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4103:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4080:24:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7530,"id":7537,"nodeType":"Return","src":"4073:31:40"}]},"documentation":{"id":7522,"nodeType":"StructuredDocumentation","src":"3902:70:40","text":" @dev Returns true if the value is in the set. O(1)."},"id":7539,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7539,"src":"3995:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7523,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"3995:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7539,"src":"4019:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7525,"name":"address","nodeType":"ElementaryTypeName","src":"4019:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:39:40"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7529,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7539,"src":"4057:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7528,"name":"bool","nodeType":"ElementaryTypeName","src":"4057:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4056:6:40"},"scope":7836,"src":"3977:134:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7551,"nodeType":"Block","src":"4264:42:40","statements":[{"expression":{"expression":{"expression":{"id":7547,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"4281:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"4281:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4281:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7546,"id":7550,"nodeType":"Return","src":"4274:25:40"}]},"documentation":{"id":7540,"nodeType":"StructuredDocumentation","src":"4117:70:40","text":" @dev Returns the number of values on the set. O(1)."},"id":7552,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7552,"src":"4208:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7541,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"4208:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"4207:24:40"},"returnParameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7545,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7552,"src":"4255:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7544,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4254:9:40"},"scope":7836,"src":"4192:114:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7577,"nodeType":"Block","src":"4731:116:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7563,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"4750:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"4750:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4750:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7566,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"4771:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4750:26:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7568,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"4778:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"4778:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7562,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"4741:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4741:58:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7571,"nodeType":"ExpressionStatement","src":"4741:58:40"},{"expression":{"arguments":[{"id":7573,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"4829:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},{"id":7574,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"4834:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7572,"name":"unchecked_at","nodeType":"Identifier","overloadedDeclarations":[7594,7818],"referencedDeclaration":7594,"src":"4816:12:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7395_storage_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4816:24:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7561,"id":7576,"nodeType":"Return","src":"4809:31:40"}]},"documentation":{"id":7553,"nodeType":"StructuredDocumentation","src":"4312:331:40","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7578,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7578,"src":"4660:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7554,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"4660:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7557,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7578,"src":"4684:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7556,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4659:39:40"},"returnParameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7560,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7578,"src":"4722:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7559,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4721:9:40"},"scope":7836,"src":"4648:199:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7593,"nodeType":"Block","src":"5305:42:40","statements":[{"expression":{"baseExpression":{"expression":{"id":7588,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5322:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7390,"src":"5322:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7591,"indexExpression":{"id":7590,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"5334:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5322:18:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7587,"id":7592,"nodeType":"Return","src":"5315:25:40"}]},"documentation":{"id":7579,"nodeType":"StructuredDocumentation","src":"4853:301:40","text":" @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\n than {length}). O(1).\n This function performs one less storage read than {at}, but should only be used when `index` is known to be\n within bounds."},"id":7594,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_at","nodeType":"FunctionDefinition","parameters":{"id":7584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7581,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7594,"src":"5234:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7580,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"5234:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7583,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7594,"src":"5258:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5258:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5233:39:40"},"returnParameters":{"id":7587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7586,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7594,"src":"5296:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7585,"name":"address","nodeType":"ElementaryTypeName","src":"5296:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5295:9:40"},"scope":7836,"src":"5212:135:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7610,"nodeType":"Block","src":"5444:47:40","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7603,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"5461:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"5461:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7606,"indexExpression":{"id":7605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"5474:5:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5483:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5461:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7602,"id":7609,"nodeType":"Return","src":"5454:30:40"}]},"id":7611,"implemented":true,"kind":"function","modifiers":[],"name":"rawIndexOf","nodeType":"FunctionDefinition","parameters":{"id":7599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7611,"src":"5373:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7595,"name":"AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"5373:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7598,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7611,"src":"5397:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7597,"name":"address","nodeType":"ElementaryTypeName","src":"5397:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5372:39:40"},"returnParameters":{"id":7602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7601,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7611,"src":"5435:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5434:9:40"},"scope":7836,"src":"5353:138:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.Bytes32Set","id":7619,"members":[{"constant":false,"id":7614,"mutability":"mutable","name":"_values","nodeType":"VariableDeclaration","scope":7619,"src":"5558:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5558:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7613,"nodeType":"ArrayTypeName","src":"5558:9:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":7618,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","scope":7619,"src":"5708:36:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":7617,"keyType":{"id":7615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5716:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"5708:27:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":7616,"name":"uint256","nodeType":"ElementaryTypeName","src":"5727:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Bytes32Set","nodeType":"StructDefinition","scope":7836,"src":"5497:254:40","visibility":"public"},{"body":{"id":7659,"nodeType":"Block","src":"5997:334:40","statements":[{"condition":{"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:21:40","subExpression":{"arguments":[{"id":7630,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"6021:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},{"id":7631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"6026:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7629,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[7539,7763],"referencedDeclaration":7763,"src":"6012:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$7619_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7657,"nodeType":"Block","src":"6288:37:40","statements":[{"expression":{"hexValue":"66616c7365","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6309:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7628,"id":7656,"nodeType":"Return","src":"6302:12:40"}]},"id":7658,"nodeType":"IfStatement","src":"6007:318:40","trueBody":{"id":7654,"nodeType":"Block","src":"6034:248:40","statements":[{"expression":{"arguments":[{"id":7639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"6065:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":7634,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"6048:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"6048:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"6048:16:40","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6048:23:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7641,"nodeType":"ExpressionStatement","src":"6048:23:40"},{"expression":{"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7642,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"6206:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7618,"src":"6206:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7646,"indexExpression":{"id":7644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"6219:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6206:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":7647,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"6228:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"6228:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6228:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6206:40:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7651,"nodeType":"ExpressionStatement","src":"6206:40:40"},{"expression":{"hexValue":"74727565","id":7652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6267:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7628,"id":7653,"nodeType":"Return","src":"6260:11:40"}]}}]},"documentation":{"id":7620,"nodeType":"StructuredDocumentation","src":"5757:159:40","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7660,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":7625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7660,"src":"5934:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7621,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"5934:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7624,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7660,"src":"5958:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5958:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5933:39:40"},"returnParameters":{"id":7628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7627,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7660,"src":"5991:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7626,"name":"bool","nodeType":"ElementaryTypeName","src":"5991:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5990:6:40"},"scope":7836,"src":"5921:410:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7744,"nodeType":"Block","src":"6571:1388:40","statements":[{"assignments":[7671],"declarations":[{"constant":false,"id":7671,"mutability":"mutable","name":"valueIndex","nodeType":"VariableDeclaration","scope":7744,"src":"6681:18:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6681:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7676,"initialValue":{"baseExpression":{"expression":{"id":7672,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"6702:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7618,"src":"6702:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7675,"indexExpression":{"id":7674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"6715:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6702:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6681:40:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"6736:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6750:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6736:15:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7742,"nodeType":"Block","src":"7916:37:40","statements":[{"expression":{"hexValue":"66616c7365","id":7740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7937:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7669,"id":7741,"nodeType":"Return","src":"7930:12:40"}]},"id":7743,"nodeType":"IfStatement","src":"6732:1221:40","trueBody":{"id":7739,"nodeType":"Block","src":"6753:1157:40","statements":[{"assignments":[7681],"declarations":[{"constant":false,"id":7681,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","scope":7739,"src":"7105:21:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7680,"name":"uint256","nodeType":"ElementaryTypeName","src":"7105:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7685,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7682,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"7129:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7129:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7105:38:40"},{"assignments":[7687],"declarations":[{"constant":false,"id":7687,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","scope":7739,"src":"7157:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7157:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7688,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"7177:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"7177:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7177:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7177:22:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7157:42:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7694,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"7299:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7695,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"7316:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7299:26:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7723,"nodeType":"IfStatement","src":"7295:389:40","trueBody":{"id":7722,"nodeType":"Block","src":"7327:357:40","statements":[{"assignments":[7698],"declarations":[{"constant":false,"id":7698,"mutability":"mutable","name":"lastValue","nodeType":"VariableDeclaration","scope":7722,"src":"7345:17:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7345:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7703,"initialValue":{"baseExpression":{"expression":{"id":7699,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"7365:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"7365:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7702,"indexExpression":{"id":7701,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"7377:9:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7365:22:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7345:42:40"},{"expression":{"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7704,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"7487:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"7487:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7708,"indexExpression":{"id":7706,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"7499:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7487:26:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7709,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"7516:9:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7487:38:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7711,"nodeType":"ExpressionStatement","src":"7487:38:40"},{"expression":{"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7712,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"7599:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7618,"src":"7599:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7716,"indexExpression":{"id":7714,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"7612:9:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7599:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7717,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"7625:13:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7625:17:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7599:43:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7721,"nodeType":"ExpressionStatement","src":"7599:43:40"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7724,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"7762:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"7762:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7762:15:40","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:17:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7730,"nodeType":"ExpressionStatement","src":"7762:17:40"},{"expression":{"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7847:26:40","subExpression":{"baseExpression":{"expression":{"id":7731,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"7854:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7618,"src":"7854:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7734,"indexExpression":{"id":7733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"7867:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7854:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7736,"nodeType":"ExpressionStatement","src":"7847:26:40"},{"expression":{"hexValue":"74727565","id":7737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7895:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7669,"id":7738,"nodeType":"Return","src":"7888:11:40"}]}}]},"documentation":{"id":7661,"nodeType":"StructuredDocumentation","src":"6337:150:40","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was present."},"id":7745,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7745,"src":"6508:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7662,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"6508:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7665,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7745,"src":"6532:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6532:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6507:39:40"},"returnParameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7745,"src":"6565:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7667,"name":"bool","nodeType":"ElementaryTypeName","src":"6565:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6564:6:40"},"scope":7836,"src":"6492:1467:40","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7762,"nodeType":"Block","src":"8126:48:40","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7755,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"8143:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7618,"src":"8143:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7758,"indexExpression":{"id":7757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"8156:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8143:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8166:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8143:24:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7754,"id":7761,"nodeType":"Return","src":"8136:31:40"}]},"documentation":{"id":7746,"nodeType":"StructuredDocumentation","src":"7965:70:40","text":" @dev Returns true if the value is in the set. O(1)."},"id":7763,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":7751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7748,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7763,"src":"8058:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7747,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"8058:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7750,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7763,"src":"8082:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8082:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8057:39:40"},"returnParameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7753,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7763,"src":"8120:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7752,"name":"bool","nodeType":"ElementaryTypeName","src":"8120:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8119:6:40"},"scope":7836,"src":"8040:134:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7775,"nodeType":"Block","src":"8327:42:40","statements":[{"expression":{"expression":{"expression":{"id":7771,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7766,"src":"8344:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"8344:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8344:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7770,"id":7774,"nodeType":"Return","src":"8337:25:40"}]},"documentation":{"id":7764,"nodeType":"StructuredDocumentation","src":"8180:70:40","text":" @dev Returns the number of values on the set. O(1)."},"id":7776,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7776,"src":"8271:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7765,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"8271:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"8270:24:40"},"returnParameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7776,"src":"8318:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8318:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8317:9:40"},"scope":7836,"src":"8255:114:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7801,"nodeType":"Block","src":"8794:116:40","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"8813:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"8813:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8813:18:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7790,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"8834:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8813:26:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7792,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8841:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":101,"src":"8841:20:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7786,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"8804:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8804:58:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7795,"nodeType":"ExpressionStatement","src":"8804:58:40"},{"expression":{"arguments":[{"id":7797,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"8892:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},{"id":7798,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7781,"src":"8897:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7796,"name":"unchecked_at","nodeType":"Identifier","overloadedDeclarations":[7594,7818],"referencedDeclaration":7818,"src":"8879:12:40","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$7619_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8879:24:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7785,"id":7800,"nodeType":"Return","src":"8872:31:40"}]},"documentation":{"id":7777,"nodeType":"StructuredDocumentation","src":"8375:331:40","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7802,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":7782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7802,"src":"8723:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7778,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"8723:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7781,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7802,"src":"8747:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7780,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8722:39:40"},"returnParameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7802,"src":"8785:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8785:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8784:9:40"},"scope":7836,"src":"8711:199:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7817,"nodeType":"Block","src":"9368:42:40","statements":[{"expression":{"baseExpression":{"expression":{"id":7812,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"9385:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":7614,"src":"9385:11:40","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7815,"indexExpression":{"id":7814,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"9397:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9385:18:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7811,"id":7816,"nodeType":"Return","src":"9378:25:40"}]},"documentation":{"id":7803,"nodeType":"StructuredDocumentation","src":"8916:301:40","text":" @dev Same as {at}, except this doesn't revert if `index` it outside of the set (i.e. if it is equal or larger\n than {length}). O(1).\n This function performs one less storage read than {at}, but should only be used when `index` is known to be\n within bounds."},"id":7818,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_at","nodeType":"FunctionDefinition","parameters":{"id":7808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7805,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7818,"src":"9297:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7804,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"9297:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7807,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":7818,"src":"9321:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"9321:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9296:39:40"},"returnParameters":{"id":7811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7810,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7818,"src":"9359:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9359:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9358:9:40"},"scope":7836,"src":"9275:135:40","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7834,"nodeType":"Block","src":"9507:47:40","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7827,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7820,"src":"9524:3:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":7618,"src":"9524:12:40","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7830,"indexExpression":{"id":7829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"9537:5:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9524:19:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9546:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9524:23:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7826,"id":7833,"nodeType":"Return","src":"9517:30:40"}]},"id":7835,"implemented":true,"kind":"function","modifiers":[],"name":"rawIndexOf","nodeType":"FunctionDefinition","parameters":{"id":7823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7820,"mutability":"mutable","name":"set","nodeType":"VariableDeclaration","scope":7835,"src":"9436:22:40","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7819,"name":"Bytes32Set","nodeType":"UserDefinedTypeName","referencedDeclaration":7619,"src":"9436:10:40","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7619_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7822,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7835,"src":"9460:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9460:7:40","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9435:39:40"},"returnParameters":{"id":7826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7825,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7835,"src":"9498:7:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7824,"name":"uint256","nodeType":"ElementaryTypeName","src":"9498:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9497:9:40"},"scope":7836,"src":"9416:138:40","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7837,"src":"1210:8346:40"}],"src":"406:9151:40"},"id":40},"contracts/openzeppelin/Ownable.sol":{"ast":{"absolutePath":"contracts/openzeppelin/Ownable.sol","exportedSymbols":{"Ownable":[7941]},"id":7942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7838,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"161:23:41"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":7839,"nodeType":"ImportDirective","scope":7942,"sourceUnit":574,"src":"186:90:41","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":7840,"nodeType":"StructuredDocumentation","src":"278:494:41","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":7941,"linearizedBaseContracts":[7941],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7842,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":7941,"src":"805:22:41","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7841,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":7848,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":7847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":7848,"src":"861:29:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7843,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7846,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":7848,"src":"892:24:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7845,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"860:57:41"},"src":"834:84:41"},{"body":{"id":7857,"nodeType":"Block","src":"1034:47:41","statements":[{"expression":{"arguments":[{"expression":{"id":7853,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1063:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1063:10:41","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7852,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"1044:18:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1044:30:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7856,"nodeType":"ExpressionStatement","src":"1044:30:41"}]},"documentation":{"id":7849,"nodeType":"StructuredDocumentation","src":"924:91:41","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":7858,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":7850,"nodeType":"ParameterList","parameters":[],"src":"1031:2:41"},"returnParameters":{"id":7851,"nodeType":"ParameterList","parameters":[],"src":"1034:0:41"},"scope":7941,"src":"1020:61:41","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7866,"nodeType":"Block","src":"1212:30:41","statements":[{"expression":{"id":7864,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"1229:6:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7863,"id":7865,"nodeType":"Return","src":"1222:13:41"}]},"documentation":{"id":7859,"nodeType":"StructuredDocumentation","src":"1087:65:41","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":7867,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":7860,"nodeType":"ParameterList","parameters":[],"src":"1171:2:41"},"returnParameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7862,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7867,"src":"1203:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7861,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1202:9:41"},"scope":7941,"src":"1157:85:41","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7881,"nodeType":"Block","src":"1351:87:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7871,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"1370:5:41","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1370:7:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1381:3:41","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1381:10:41","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1370:21:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7876,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1393:6:41","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CALLER_IS_NOT_OWNER","nodeType":"MemberAccess","referencedDeclaration":410,"src":"1393:26:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7870,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1361:8:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1361:59:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7879,"nodeType":"ExpressionStatement","src":"1361:59:41"},{"id":7880,"nodeType":"PlaceholderStatement","src":"1430:1:41"}]},"documentation":{"id":7868,"nodeType":"StructuredDocumentation","src":"1248:77:41","text":" @dev Throws if called by any account other than the owner."},"id":7882,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[],"src":"1348:2:41"},"src":"1330:108:41","virtual":false,"visibility":"internal"},{"body":{"id":7895,"nodeType":"Block","src":"1834:47:41","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":7891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1871:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1863:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7889,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:41","typeDescriptions":{}}},"id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1863:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7888,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"1844:18:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1844:30:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7894,"nodeType":"ExpressionStatement","src":"1844:30:41"}]},"documentation":{"id":7883,"nodeType":"StructuredDocumentation","src":"1444:331:41","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":7896,"implemented":true,"kind":"function","modifiers":[{"id":7886,"modifierName":{"id":7885,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"1824:9:41","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1824:9:41"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":7884,"nodeType":"ParameterList","parameters":[],"src":"1806:2:41"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[],"src":"1834:0:41"},"scope":7941,"src":"1780:101:41","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7919,"nodeType":"Block","src":"2100:113:41","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7905,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"2119:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2131:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7906,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:41","typeDescriptions":{}}},"id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2131:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2119:22:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7911,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2143:6:41","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NEW_OWNER_IS_ZERO","nodeType":"MemberAccess","referencedDeclaration":413,"src":"2143:24:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7904,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2110:8:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2110:58:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7914,"nodeType":"ExpressionStatement","src":"2110:58:41"},{"expression":{"arguments":[{"id":7916,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"2197:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7915,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"2178:18:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2178:28:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7918,"nodeType":"ExpressionStatement","src":"2178:28:41"}]},"documentation":{"id":7897,"nodeType":"StructuredDocumentation","src":"1887:138:41","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":7920,"implemented":true,"kind":"function","modifiers":[{"id":7902,"modifierName":{"id":7901,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"2090:9:41","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2090:9:41"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":7920,"src":"2057:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7898,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2056:18:41"},"returnParameters":{"id":7903,"nodeType":"ParameterList","parameters":[],"src":"2100:0:41"},"scope":7941,"src":"2030:183:41","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7939,"nodeType":"Block","src":"2430:124:41","statements":[{"assignments":[7927],"declarations":[{"constant":false,"id":7927,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":7939,"src":"2440:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7926,"name":"address","nodeType":"ElementaryTypeName","src":"2440:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7929,"initialValue":{"id":7928,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"2459:6:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2440:25:41"},{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7930,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"2475:6:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7931,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"2484:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:17:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7933,"nodeType":"ExpressionStatement","src":"2475:17:41"},{"eventCall":{"arguments":[{"id":7935,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"2528:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7936,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"2538:8:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7934,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"2507:20:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:40:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7938,"nodeType":"EmitStatement","src":"2502:45:41"}]},"documentation":{"id":7921,"nodeType":"StructuredDocumentation","src":"2219:143:41","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":7940,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":7924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7923,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":7940,"src":"2395:16:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7922,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:18:41"},"returnParameters":{"id":7925,"nodeType":"ParameterList","parameters":[],"src":"2430:0:41"},"scope":7941,"src":"2367:187:41","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":7942,"src":"773:1783:41"}],"src":"161:2396:41"},"id":41},"contracts/openzeppelin/ReentrancyGuard.sol":{"ast":{"absolutePath":"contracts/openzeppelin/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[7997]},"id":7998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7943,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"374:23:42"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":7944,"nodeType":"ImportDirective","scope":7998,"sourceUnit":574,"src":"399:90:42","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":7945,"nodeType":"StructuredDocumentation","src":"491:750:42","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":7997,"linearizedBaseContracts":[7997],"name":"ReentrancyGuard","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":7948,"mutability":"constant","name":"_NOT_ENTERED","nodeType":"VariableDeclaration","scope":7997,"src":"2030:41:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2070:1:42","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":7951,"mutability":"constant","name":"_ENTERED","nodeType":"VariableDeclaration","scope":7997,"src":"2077:37:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2077:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:1:42","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":7953,"mutability":"mutable","name":"_status","nodeType":"VariableDeclaration","scope":7997,"src":"2121:23:42","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2121:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":7960,"nodeType":"Block","src":"2165:39:42","statements":[{"expression":{"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7956,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"2175:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7957,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"2185:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2175:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7959,"nodeType":"ExpressionStatement","src":"2175:22:42"}]},"id":7961,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":7954,"nodeType":"ParameterList","parameters":[],"src":"2162:2:42"},"returnParameters":{"id":7955,"nodeType":"ParameterList","parameters":[],"src":"2165:0:42"},"scope":7997,"src":"2151:53:42","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7971,"nodeType":"Block","src":"2603:77:42","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7964,"name":"_enterNonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"2613:18:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2613:20:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7966,"nodeType":"ExpressionStatement","src":"2613:20:42"},{"id":7967,"nodeType":"PlaceholderStatement","src":"2643:1:42"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7968,"name":"_exitNonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"2654:17:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2654:19:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7970,"nodeType":"ExpressionStatement","src":"2654:19:42"}]},"documentation":{"id":7962,"nodeType":"StructuredDocumentation","src":"2210:364:42","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."},"id":7972,"name":"nonReentrant","nodeType":"ModifierDefinition","parameters":{"id":7963,"nodeType":"ParameterList","parameters":[],"src":"2600:2:42"},"src":"2579:101:42","virtual":false,"visibility":"internal"},{"body":{"id":7987,"nodeType":"Block","src":"2724:233:42","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7976,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"2818:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7977,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2829:8:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2818:19:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7979,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2839:6:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"REENTRANCY","nodeType":"MemberAccess","referencedDeclaration":332,"src":"2839:17:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7975,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2809:8:42","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2809:48:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7982,"nodeType":"ExpressionStatement","src":"2809:48:42"},{"expression":{"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7983,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"2932:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7984,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2942:8:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:18:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7986,"nodeType":"ExpressionStatement","src":"2932:18:42"}]},"id":7988,"implemented":true,"kind":"function","modifiers":[],"name":"_enterNonReentrant","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[],"src":"2713:2:42"},"returnParameters":{"id":7974,"nodeType":"ParameterList","parameters":[],"src":"2724:0:42"},"scope":7997,"src":"2686:271:42","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7995,"nodeType":"Block","src":"3000:171:42","statements":[{"expression":{"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7991,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7953,"src":"3142:7:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7992,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"3152:12:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3142:22:42","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7994,"nodeType":"ExpressionStatement","src":"3142:22:42"}]},"id":7996,"implemented":true,"kind":"function","modifiers":[],"name":"_exitNonReentrant","nodeType":"FunctionDefinition","parameters":{"id":7989,"nodeType":"ParameterList","parameters":[],"src":"2989:2:42"},"returnParameters":{"id":7990,"nodeType":"ParameterList","parameters":[],"src":"3000:0:42"},"scope":7997,"src":"2963:208:42","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":7998,"src":"1242:1931:42"}],"src":"374:2800:42"},"id":42},"contracts/openzeppelin/SafeCast.sol":{"ast":{"absolutePath":"contracts/openzeppelin/SafeCast.sol","exportedSymbols":{"SafeCast":[8052]},"id":8053,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7999,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:43"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":8000,"nodeType":"ImportDirective","scope":8053,"sourceUnit":574,"src":"58:90:43","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":8001,"nodeType":"StructuredDocumentation","src":"150:709:43","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":8052,"linearizedBaseContracts":[8052],"name":"SafeCast","nodeType":"ContractDefinition","nodes":[{"body":{"id":8024,"nodeType":"Block","src":"1117:114:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"1136:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1145:3:43","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1136:12:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1152:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1136:17:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8015,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1155:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SAFE_CAST_VALUE_CANT_FIT_INT256","nodeType":"MemberAccess","referencedDeclaration":395,"src":"1155:38:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8009,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1127:8:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1127:67:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8018,"nodeType":"ExpressionStatement","src":"1127:67:43"},{"expression":{"arguments":[{"id":8021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"1218:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1211:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8019,"name":"int256","nodeType":"ElementaryTypeName","src":"1211:6:43","typeDescriptions":{}}},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1211:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8008,"id":8023,"nodeType":"Return","src":"1204:20:43"}]},"documentation":{"id":8002,"nodeType":"StructuredDocumentation","src":"883:165:43","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nodeType":"FunctionDefinition","parameters":{"id":8005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8004,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8025,"src":"1071:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1070:15:43"},"returnParameters":{"id":8008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8007,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8025,"src":"1109:6:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8006,"name":"int256","nodeType":"ElementaryTypeName","src":"1109:6:43","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1108:8:43"},"scope":8052,"src":"1053:178:43","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8050,"nodeType":"Block","src":"1474:122:43","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"1493:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":8037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1507:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8036,"name":"uint64","nodeType":"ElementaryTypeName","src":"1507:6:43","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8035,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1502:4:43","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1502:12:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1502:16:43","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1493:25:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8041,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1520:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SAFE_CAST_VALUE_CANT_FIT_UINT64","nodeType":"MemberAccess","referencedDeclaration":458,"src":"1520:38:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8033,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1484:8:43","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1484:75:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8044,"nodeType":"ExpressionStatement","src":"1484:75:43"},{"expression":{"arguments":[{"id":8047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"1583:5:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1576:6:43","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8045,"name":"uint64","nodeType":"ElementaryTypeName","src":"1576:6:43","typeDescriptions":{}}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1576:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8032,"id":8049,"nodeType":"Return","src":"1569:20:43"}]},"documentation":{"id":8026,"nodeType":"StructuredDocumentation","src":"1237:168:43","text":" @dev Converts an unsigned uint256 into an unsigned uint64.\n Requirements:\n - input must be less than or equal to maxUint64."},"id":8051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nodeType":"FunctionDefinition","parameters":{"id":8029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8051,"src":"1428:13:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1427:15:43"},"returnParameters":{"id":8032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8031,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8051,"src":"1466:6:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8030,"name":"uint64","nodeType":"ElementaryTypeName","src":"1466:6:43","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1465:8:43"},"scope":8052,"src":"1410:186:43","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8053,"src":"860:738:43"}],"src":"33:1566:43"},"id":43},"contracts/openzeppelin/SafeERC20.sol":{"ast":{"absolutePath":"contracts/openzeppelin/SafeERC20.sol","exportedSymbols":{"SafeERC20":[8206]},"id":8207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8054,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"313:23:44"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":8055,"nodeType":"ImportDirective","scope":8207,"sourceUnit":574,"src":"338:90:44","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":8056,"nodeType":"ImportDirective","scope":8207,"sourceUnit":763,"src":"429:87:44","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":8057,"nodeType":"StructuredDocumentation","src":"518:457:44","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":8206,"linearizedBaseContracts":[8206],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"body":{"id":8115,"nodeType":"Block","src":"1102:406:44","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"1218:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1227:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1218:10:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8073,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1256:4:44","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$8206","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$8206","typeString":"library SafeERC20"}],"id":8072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1248:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8071,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:44","typeDescriptions":{}}},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:13:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8077,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"1271:2:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1263:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8075,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:44","typeDescriptions":{}}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1263:11:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8069,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"1232:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":721,"src":"1232:15:44","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1232:43:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1232:48:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1218:62:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8099,"nodeType":"IfStatement","src":"1214:183:44","trueBody":{"id":8098,"nodeType":"Block","src":"1282:115:44","statements":[{"expression":{"arguments":[{"arguments":[{"id":8086,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"1324:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":8085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1316:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8084,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:44","typeDescriptions":{}}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1316:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"expression":{"id":8090,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"1355:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":731,"src":"1355:13:44","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1355:22:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8093,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"1379:2:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":8094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1383:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":8088,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1332:3:44","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1332:22:44","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1332:53:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8083,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"1296:19:44","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1296:90:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8097,"nodeType":"ExpressionStatement","src":"1296:90:44"}]}},{"expression":{"arguments":[{"arguments":[{"id":8103,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"1435:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":8102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1427:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8101,"name":"address","nodeType":"ElementaryTypeName","src":"1427:7:44","typeDescriptions":{}}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1427:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"expression":{"id":8107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"1466:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":731,"src":"1466:13:44","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1466:22:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"1490:2:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"1494:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8105,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1443:3:44","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1443:22:44","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1443:57:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8100,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"1407:19:44","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:94:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8114,"nodeType":"ExpressionStatement","src":"1407:94:44"}]},"id":8116,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":8064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8059,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":8116,"src":"1031:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8058,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1031:6:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8061,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":8116,"src":"1053:10:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8060,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:44","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8063,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8116,"src":"1073:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1021:71:44"},"returnParameters":{"id":8065,"nodeType":"ParameterList","parameters":[],"src":"1102:0:44"},"scope":8206,"src":"1001:507:44","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8140,"nodeType":"Block","src":"1616:112:44","statements":[{"expression":{"arguments":[{"arguments":[{"id":8128,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"1654:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":8127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1646:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8126,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:44","typeDescriptions":{}}},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1646:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"expression":{"id":8132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"1685:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":711,"src":"1685:14:44","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1685:23:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8135,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"1710:2:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"1714:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8130,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1662:3:44","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1662:22:44","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:58:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8125,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"1626:19:44","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1626:95:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8139,"nodeType":"ExpressionStatement","src":"1626:95:44"}]},"id":8141,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":8123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":8141,"src":"1545:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8117,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1545:6:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8120,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":8141,"src":"1567:10:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8119,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:44","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8122,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8141,"src":"1587:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1535:71:44"},"returnParameters":{"id":8124,"nodeType":"ParameterList","parameters":[],"src":"1616:0:44"},"scope":8206,"src":"1514:214:44","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8168,"nodeType":"Block","src":"1862:122:44","statements":[{"expression":{"arguments":[{"arguments":[{"id":8155,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"1900:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"id":8154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:44","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8153,"name":"address","nodeType":"ElementaryTypeName","src":"1892:7:44","typeDescriptions":{}}},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1892:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"expression":{"id":8159,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"1931:5:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":743,"src":"1931:18:44","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1931:27:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8162,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"1960:4:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8147,"src":"1966:2:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"1970:5:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8157,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1908:3:44","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1908:22:44","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1908:68:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8152,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"1872:19:44","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1872:105:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8167,"nodeType":"ExpressionStatement","src":"1872:105:44"}]},"id":8169,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":8150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8143,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":8169,"src":"1769:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8142,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1769:6:44","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8145,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":8169,"src":"1791:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8144,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:44","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8147,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":8169,"src":"1813:10:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8146,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:44","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8149,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8169,"src":"1833:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1833:7:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:93:44"},"returnParameters":{"id":8151,"nodeType":"ParameterList","parameters":[],"src":"1862:0:44"},"scope":8206,"src":"1734:250:44","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8204,"nodeType":"Block","src":"2395:843:44","statements":[{"assignments":[8178,8180],"declarations":[{"constant":false,"id":8178,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":8204,"src":"2626:12:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8177,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8180,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":8204,"src":"2640:23:44","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8179,"name":"bytes","nodeType":"ElementaryTypeName","src":"2640:5:44","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8185,"initialValue":{"arguments":[{"id":8183,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"2678:4:44","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8181,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"2667:5:44","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2667:10:44","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2667:16:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2625:58:44"},{"AST":{"nodeType":"YulBlock","src":"2848:156:44","statements":[{"body":{"nodeType":"YulBlock","src":"2880:114:44","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:1:44","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2916:1:44","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2919:14:44"},"nodeType":"YulFunctionCall","src":"2919:16:44"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2898:14:44"},"nodeType":"YulFunctionCall","src":"2898:38:44"},"nodeType":"YulExpressionStatement","src":"2898:38:44"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2960:1:44","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2963:14:44"},"nodeType":"YulFunctionCall","src":"2963:16:44"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2953:6:44"},"nodeType":"YulFunctionCall","src":"2953:27:44"},"nodeType":"YulExpressionStatement","src":"2953:27:44"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"2868:7:44"},{"kind":"number","nodeType":"YulLiteral","src":"2877:1:44","type":"","value":"0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2865:2:44"},"nodeType":"YulFunctionCall","src":"2865:14:44"},"nodeType":"YulIf","src":"2862:2:44"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":8178,"isOffset":false,"isSlot":false,"src":"2868:7:44","valueSize":1}],"id":8186,"nodeType":"InlineAssembly","src":"2839:165:44"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8188,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"3143:10:44","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3143:17:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3164:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3143:22:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":8194,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"3180:10:44","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3193:4:44","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":8195,"name":"bool","nodeType":"ElementaryTypeName","src":"3193:4:44","typeDescriptions":{}}}],"id":8197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3192:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":8192,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3169:3:44","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3169:10:44","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3169:30:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3143:56:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8200,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3201:6:44","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SAFE_ERC20_CALL_FAILED","nodeType":"MemberAccess","referencedDeclaration":386,"src":"3201:29:44","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8187,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"3134:8:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3134:97:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8203,"nodeType":"ExpressionStatement","src":"3134:97:44"}]},"documentation":{"id":8170,"nodeType":"StructuredDocumentation","src":"1990:329:44","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n WARNING: `token` is assumed to be a contract: calls to EOAs will *not* revert."},"id":8205,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nodeType":"FunctionDefinition","parameters":{"id":8175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8172,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":8205,"src":"2353:13:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8171,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:44","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8174,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":8205,"src":"2368:17:44","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8173,"name":"bytes","nodeType":"ElementaryTypeName","src":"2368:5:44","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2352:34:44"},"returnParameters":{"id":8176,"nodeType":"ParameterList","parameters":[],"src":"2395:0:44"},"scope":8206,"src":"2324:914:44","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":8207,"src":"976:2264:44"}],"src":"313:2928:44"},"id":44},"contracts/openzeppelin/SafeMath.sol":{"ast":{"absolutePath":"contracts/openzeppelin/SafeMath.sol","exportedSymbols":{"SafeMath":[8284]},"id":8285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8208,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:45"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":8209,"nodeType":"ImportDirective","scope":8285,"sourceUnit":574,"src":"58:90:45","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":8210,"nodeType":"StructuredDocumentation","src":"150:563:45","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8284,"linearizedBaseContracts":[8284],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":8236,"nodeType":"Block","src":"1033:100:45","statements":[{"assignments":[8221],"declarations":[{"constant":false,"id":8221,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":8236,"src":"1043:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8225,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"1055:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"1059:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1055:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1043:17:45"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8227,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"1079:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"1084:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1079:6:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8230,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1087:6:45","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":71,"src":"1087:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8226,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1070:8:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1070:37:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8233,"nodeType":"ExpressionStatement","src":"1070:37:45"},{"expression":{"id":8234,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"1125:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8219,"id":8235,"nodeType":"Return","src":"1118:8:45"}]},"documentation":{"id":8211,"nodeType":"StructuredDocumentation","src":"737:224:45","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":8237,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":8216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8213,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8237,"src":"979:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8212,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8215,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8237,"src":"990:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8214,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"978:22:45"},"returnParameters":{"id":8219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8218,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8237,"src":"1024:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1023:9:45"},"scope":8284,"src":"966:167:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8254,"nodeType":"Block","src":"1471:54:45","statements":[{"expression":{"arguments":[{"id":8248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"1492:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"1495:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8250,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1498:6:45","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":74,"src":"1498:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8247,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[8255,8283],"referencedDeclaration":8283,"src":"1488:3:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1488:30:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8246,"id":8253,"nodeType":"Return","src":"1481:37:45"}]},"documentation":{"id":8238,"nodeType":"StructuredDocumentation","src":"1139:260:45","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":8255,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":8243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8240,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8255,"src":"1417:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8242,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8255,"src":"1428:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1416:22:45"},"returnParameters":{"id":8246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8245,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8255,"src":"1462:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1461:9:45"},"scope":8284,"src":"1404:121:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8282,"nodeType":"Block","src":"1932:90:45","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"1951:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"1956:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1951:6:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8271,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"1959:9:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8267,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"1942:8:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1942:27:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8273,"nodeType":"ExpressionStatement","src":"1942:27:45"},{"assignments":[8275],"declarations":[{"constant":false,"id":8275,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":8282,"src":"1979:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8279,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"1991:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"1995:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1991:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1979:17:45"},{"expression":{"id":8280,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"2014:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8266,"id":8281,"nodeType":"Return","src":"2007:8:45"}]},"documentation":{"id":8256,"nodeType":"StructuredDocumentation","src":"1531:280:45","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":8283,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":8263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8258,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8283,"src":"1838:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8260,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8283,"src":"1857:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8262,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":8283,"src":"1876:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1828:71:45"},"returnParameters":{"id":8266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8265,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8283,"src":"1923:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1922:9:45"},"scope":8284,"src":"1816:206:45","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8285,"src":"714:1310:45"}],"src":"33:1992:45"},"id":45},"contracts/test/BalancerErrorsMock.sol":{"ast":{"absolutePath":"contracts/test/BalancerErrorsMock.sol","exportedSymbols":{"BalancerErrorsMock":[8311]},"id":8312,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8286,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:46"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":8287,"nodeType":"ImportDirective","scope":8312,"sourceUnit":574,"src":"713:90:46","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8311,"linearizedBaseContracts":[8311],"name":"BalancerErrorsMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":8296,"nodeType":"Block","src":"881:30:46","statements":[{"expression":{"arguments":[{"id":8293,"name":"code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"899:4:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8292,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":48,"src":"891:7:46","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"891:13:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8295,"nodeType":"ExpressionStatement","src":"891:13:46"}]},"functionSelector":"132e4f3c","id":8297,"implemented":true,"kind":"function","modifiers":[],"name":"fail","nodeType":"FunctionDefinition","parameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8289,"mutability":"mutable","name":"code","nodeType":"VariableDeclaration","scope":8297,"src":"853:12:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"852:14:46"},"returnParameters":{"id":8291,"nodeType":"ParameterList","parameters":[],"src":"881:0:46"},"scope":8311,"src":"839:72:46","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":8309,"nodeType":"Block","src":"984:38:46","statements":[{"expression":{"arguments":[{"id":8305,"name":"code","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"1002:4:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8306,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"1008:6:46","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes3","typeString":"bytes3"}],"id":8304,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[48,68],"referencedDeclaration":68,"src":"994:7:46","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bytes3_$returns$__$","typeString":"function (uint256,bytes3) pure"}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"994:21:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8308,"nodeType":"ExpressionStatement","src":"994:21:46"}]},"functionSelector":"9aac0d2d","id":8310,"implemented":true,"kind":"function","modifiers":[],"name":"failWithPrefix","nodeType":"FunctionDefinition","parameters":{"id":8302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8299,"mutability":"mutable","name":"code","nodeType":"VariableDeclaration","scope":8310,"src":"941:12:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8298,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8301,"mutability":"mutable","name":"prefix","nodeType":"VariableDeclaration","scope":8310,"src":"955:13:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"},"typeName":{"id":8300,"name":"bytes3","nodeType":"ElementaryTypeName","src":"955:6:46","typeDescriptions":{"typeIdentifier":"t_bytes3","typeString":"bytes3"}},"visibility":"internal"}],"src":"940:29:46"},"returnParameters":{"id":8303,"nodeType":"ParameterList","parameters":[],"src":"984:0:46"},"scope":8311,"src":"917:105:46","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":8312,"src":"805:219:46"}],"src":"688:337:46"},"id":46},"contracts/test/BreakableERC20Mock.sol":{"ast":{"absolutePath":"contracts/test/BreakableERC20Mock.sol","exportedSymbols":{"BreakableERC20Mock":[8427]},"id":8428,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8313,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:47"},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":8314,"nodeType":"ImportDirective","scope":8428,"sourceUnit":6448,"src":"713:35:47","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8316,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"901:5:47","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":8317,"nodeType":"InheritanceSpecifier","src":"901:5:47"}],"contractDependencies":[762,6447],"contractKind":"contract","documentation":{"id":8315,"nodeType":"StructuredDocumentation","src":"750:119:47","text":" @dev ERC20 with a modified approve, transfer and transferFrom functions, which revert according to a preset."},"fullyImplemented":true,"id":8427,"linearizedBaseContracts":[8427,6447,762],"name":"BreakableERC20Mock","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"0dfbe1af","id":8319,"mutability":"mutable","name":"isBroken","nodeType":"VariableDeclaration","scope":8427,"src":"913:20:47","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8318,"name":"bool","nodeType":"ElementaryTypeName","src":"913:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"body":{"id":8330,"nodeType":"Block","src":"1014:2:47","statements":[]},"id":8331,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8326,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8321,"src":"1000:4:47","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8327,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"1006:6:47","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8328,"modifierName":{"id":8325,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"994:5:47","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"994:19:47"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":8324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8321,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":8331,"src":"952:18:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8320,"name":"string","nodeType":"ElementaryTypeName","src":"952:6:47","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8323,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":8331,"src":"972:20:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8322,"name":"string","nodeType":"ElementaryTypeName","src":"972:6:47","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"951:42:47"},"returnParameters":{"id":8329,"nodeType":"ParameterList","parameters":[],"src":"1014:0:47"},"scope":8427,"src":"940:76:47","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8340,"nodeType":"Block","src":"1068:37:47","statements":[{"expression":{"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8336,"name":"isBroken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1078:8:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8337,"name":"_isBroken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"1089:9:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1078:20:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8339,"nodeType":"ExpressionStatement","src":"1078:20:47"}]},"functionSelector":"3ac15e6f","id":8341,"implemented":true,"kind":"function","modifiers":[],"name":"setIsBroken","nodeType":"FunctionDefinition","parameters":{"id":8334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8333,"mutability":"mutable","name":"_isBroken","nodeType":"VariableDeclaration","scope":8341,"src":"1043:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8332,"name":"bool","nodeType":"ElementaryTypeName","src":"1043:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1042:16:47"},"returnParameters":{"id":8335,"nodeType":"ParameterList","parameters":[],"src":"1068:0:47"},"scope":8427,"src":"1022:83:47","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8353,"nodeType":"Block","src":"1169:41:47","statements":[{"expression":{"arguments":[{"id":8349,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"1185:9:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8350,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8345,"src":"1196:6:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8348,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"1179:5:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1179:24:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8352,"nodeType":"ExpressionStatement","src":"1179:24:47"}]},"functionSelector":"40c10f19","id":8354,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":8346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8343,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":8354,"src":"1125:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8342,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8345,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8354,"src":"1144:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1124:35:47"},"returnParameters":{"id":8347,"nodeType":"ParameterList","parameters":[],"src":"1169:0:47"},"scope":8427,"src":"1111:99:47","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6128],"body":{"id":8376,"nodeType":"Block","src":"1305:98:47","statements":[{"expression":{"arguments":[{"id":8366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1323:9:47","subExpression":{"id":8365,"name":"isBroken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1324:8:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42524f4b454e5f544f4b454e","id":8367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1334:14:47","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""},"value":"BROKEN_TOKEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""}],"id":8364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1315:7:47","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:34:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8369,"nodeType":"ExpressionStatement","src":"1315:34:47"},{"expression":{"arguments":[{"id":8372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"1380:7:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8373,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"1389:6:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8370,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1366:5:47","typeDescriptions":{"typeIdentifier":"t_super$_BreakableERC20Mock_$8427","typeString":"contract super BreakableERC20Mock"}},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":6128,"src":"1366:13:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:30:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8363,"id":8375,"nodeType":"Return","src":"1359:37:47"}]},"functionSelector":"095ea7b3","id":8377,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":8360,"nodeType":"OverrideSpecifier","overrides":[],"src":"1281:8:47"},"parameters":{"id":8359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8356,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":8377,"src":"1233:15:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8355,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8358,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8377,"src":"1250:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1232:33:47"},"returnParameters":{"id":8363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8362,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8377,"src":"1299:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8361,"name":"bool","nodeType":"ElementaryTypeName","src":"1299:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1298:6:47"},"scope":8427,"src":"1216:187:47","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[6089],"body":{"id":8399,"nodeType":"Block","src":"1501:101:47","statements":[{"expression":{"arguments":[{"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1519:9:47","subExpression":{"id":8388,"name":"isBroken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1520:8:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42524f4b454e5f544f4b454e","id":8390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1530:14:47","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""},"value":"BROKEN_TOKEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""}],"id":8387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1511:7:47","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1511:34:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8392,"nodeType":"ExpressionStatement","src":"1511:34:47"},{"expression":{"arguments":[{"id":8395,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"1577:9:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8396,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"1588:6:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8393,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1562:5:47","typeDescriptions":{"typeIdentifier":"t_super$_BreakableERC20Mock_$8427","typeString":"contract super BreakableERC20Mock"}},"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":6089,"src":"1562:14:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1562:33:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8386,"id":8398,"nodeType":"Return","src":"1555:40:47"}]},"functionSelector":"a9059cbb","id":8400,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":8383,"nodeType":"OverrideSpecifier","overrides":[],"src":"1477:8:47"},"parameters":{"id":8382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8379,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":8400,"src":"1427:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8378,"name":"address","nodeType":"ElementaryTypeName","src":"1427:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8381,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8400,"src":"1446:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1426:35:47"},"returnParameters":{"id":8386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8385,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8400,"src":"1495:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8384,"name":"bool","nodeType":"ElementaryTypeName","src":"1495:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1494:6:47"},"scope":8427,"src":"1409:193:47","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[6167],"body":{"id":8425,"nodeType":"Block","src":"1750:113:47","statements":[{"expression":{"arguments":[{"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1768:9:47","subExpression":{"id":8413,"name":"isBroken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"1769:8:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42524f4b454e5f544f4b454e","id":8415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1779:14:47","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""},"value":"BROKEN_TOKEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""}],"id":8412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1760:7:47","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1760:34:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8417,"nodeType":"ExpressionStatement","src":"1760:34:47"},{"expression":{"arguments":[{"id":8420,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"1830:6:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8421,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"1838:9:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8422,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"1849:6:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8418,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1811:5:47","typeDescriptions":{"typeIdentifier":"t_super$_BreakableERC20Mock_$8427","typeString":"contract super BreakableERC20Mock"}},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":6167,"src":"1811:18:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1811:45:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8411,"id":8424,"nodeType":"Return","src":"1804:52:47"}]},"functionSelector":"23b872dd","id":8426,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":8408,"nodeType":"OverrideSpecifier","overrides":[],"src":"1726:8:47"},"parameters":{"id":8407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8402,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":8426,"src":"1639:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8401,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8404,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":8426,"src":"1663:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8403,"name":"address","nodeType":"ElementaryTypeName","src":"1663:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8406,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8426,"src":"1690:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1629:81:47"},"returnParameters":{"id":8411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8410,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8426,"src":"1744:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8409,"name":"bool","nodeType":"ElementaryTypeName","src":"1744:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1743:6:47"},"scope":8427,"src":"1608:255:47","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":8428,"src":"870:995:47"}],"src":"688:1178:47"},"id":47},"contracts/test/BrokenERC20Mock.sol":{"ast":{"absolutePath":"contracts/test/BrokenERC20Mock.sol","exportedSymbols":{"BrokenERC20Mock":[8461]},"id":8462,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8429,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:48"},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":8430,"nodeType":"ImportDirective","scope":8462,"sourceUnit":6448,"src":"713:35:48","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8432,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"858:5:48","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":8433,"nodeType":"InheritanceSpecifier","src":"858:5:48"}],"contractDependencies":[762,6447],"contractKind":"contract","documentation":{"id":8431,"nodeType":"StructuredDocumentation","src":"750:79:48","text":" @dev ERC20 with a modified `approve` function, which always reverts."},"fullyImplemented":true,"id":8461,"linearizedBaseContracts":[8461,6447,762],"name":"BrokenERC20Mock","nodeType":"ContractDefinition","nodes":[{"body":{"id":8444,"nodeType":"Block","src":"944:2:48","statements":[]},"id":8445,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8440,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8435,"src":"930:4:48","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8441,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8437,"src":"936:6:48","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8442,"modifierName":{"id":8439,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"924:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"924:19:48"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":8438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8435,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":8445,"src":"882:18:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8434,"name":"string","nodeType":"ElementaryTypeName","src":"882:6:48","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8437,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":8445,"src":"902:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8436,"name":"string","nodeType":"ElementaryTypeName","src":"902:6:48","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"881:42:48"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[],"src":"944:0:48"},"scope":8461,"src":"870:76:48","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6128],"body":{"id":8459,"nodeType":"Block","src":"1026:39:48","statements":[{"expression":{"arguments":[{"hexValue":"42524f4b454e5f544f4b454e","id":8456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1043:14:48","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""},"value":"BROKEN_TOKEN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9c1de3dec538daf8b5e0518601bca56818bdee6d722b93d955204913705331f0","typeString":"literal_string \"BROKEN_TOKEN\""}],"id":8455,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1036:6:48","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1036:22:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8458,"nodeType":"ExpressionStatement","src":"1036:22:48"}]},"functionSelector":"095ea7b3","id":8460,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":8451,"nodeType":"OverrideSpecifier","overrides":[],"src":"1002:8:48"},"parameters":{"id":8450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8447,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8460,"src":"969:7:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8446,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8449,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8460,"src":"978:7:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8448,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:18:48"},"returnParameters":{"id":8454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8453,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8460,"src":"1020:4:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8452,"name":"bool","nodeType":"ElementaryTypeName","src":"1020:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1019:6:48"},"scope":8461,"src":"952:113:48","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":8462,"src":"830:237:48"}],"src":"688:380:48"},"id":48},"contracts/test/CodeDeployerFactory.sol":{"ast":{"absolutePath":"contracts/test/CodeDeployerFactory.sol","exportedSymbols":{"CodeDeployerFactory":[8489]},"id":8490,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8463,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:49"},{"absolutePath":"contracts/helpers/CodeDeployer.sol","file":"../helpers/CodeDeployer.sol","id":8464,"nodeType":"ImportDirective","scope":8490,"sourceUnit":1779,"src":"713:37:49","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8489,"linearizedBaseContracts":[8489],"name":"CodeDeployerFactory","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":8468,"name":"CodeDeployed","nodeType":"EventDefinition","parameters":{"id":8467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8466,"indexed":false,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":8468,"src":"806:19:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8465,"name":"address","nodeType":"ElementaryTypeName","src":"806:7:49","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"805:21:49"},"src":"787:40:49"},{"body":{"id":8487,"nodeType":"Block","src":"900:122:49","statements":[{"assignments":[8476],"declarations":[{"constant":false,"id":8476,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":8487,"src":"910:19:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8475,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:49","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8482,"initialValue":{"arguments":[{"id":8479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"952:4:49","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8480,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"958:16:49","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8477,"name":"CodeDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"932:12:49","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDeployer_$1778_$","typeString":"type(library CodeDeployer)"}},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"932:19:49","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bool_$returns$_t_address_$","typeString":"function (bytes memory,bool) returns (address)"}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"932:43:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"910:65:49"},{"eventCall":{"arguments":[{"id":8484,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"1003:11:49","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8483,"name":"CodeDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"990:12:49","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:25:49","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8486,"nodeType":"EmitStatement","src":"985:30:49"}]},"functionSelector":"56152960","id":8488,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nodeType":"FunctionDefinition","parameters":{"id":8473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8470,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":8488,"src":"849:17:49","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8469,"name":"bytes","nodeType":"ElementaryTypeName","src":"849:5:49","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8472,"mutability":"mutable","name":"preventExecution","nodeType":"VariableDeclaration","scope":8488,"src":"868:21:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8471,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:49","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"848:42:49"},"returnParameters":{"id":8474,"nodeType":"ParameterList","parameters":[],"src":"900:0:49"},"scope":8489,"src":"833:189:49","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8490,"src":"752:272:49"}],"src":"688:337:49"},"id":49},"contracts/test/EOASignaturesValidatorMock.sol":{"ast":{"absolutePath":"contracts/test/EOASignaturesValidatorMock.sol","exportedSymbols":{"EOASignaturesValidatorMock":[8592]},"id":8593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8491,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:50"},{"absolutePath":"contracts/helpers/EOASignaturesValidator.sol","file":"../helpers/EOASignaturesValidator.sol","id":8492,"nodeType":"ImportDirective","scope":8593,"sourceUnit":1959,"src":"58:47:50","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8493,"name":"EOASignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":1958,"src":"146:22:50","typeDescriptions":{"typeIdentifier":"t_contract$_EOASignaturesValidator_$1958","typeString":"contract EOASignaturesValidator"}},"id":8494,"nodeType":"InheritanceSpecifier","src":"146:22:50"}],"contractDependencies":[636,1958,5956],"contractKind":"contract","fullyImplemented":true,"id":8592,"linearizedBaseContracts":[8592,1958,5956,636],"name":"EOASignaturesValidatorMock","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":8496,"name":"Authenticated","nodeType":"EventDefinition","parameters":{"id":8495,"nodeType":"ParameterList","parameters":[],"src":"194:2:50"},"src":"175:22:50"},{"constant":true,"functionSelector":"0d347d5d","id":8501,"mutability":"constant","name":"MOCK_AUTHENTICATE_TYPEHASH","nodeType":"VariableDeclaration","scope":8592,"src":"203:108:50","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"203:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41757468656e7469636174652875696e7432353620616d6f756e742c75696e74323536206e6f6e636529","id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"266:44:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49","typeString":"literal_string \"Authenticate(uint256 amount,uint256 nonce)\""},"value":"Authenticate(uint256 amount,uint256 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49","typeString":"literal_string \"Authenticate(uint256 amount,uint256 nonce)\""}],"id":8498,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"256:9:50","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"256:55:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":8508,"nodeType":"Block","src":"377:64:50","statements":[]},"id":8509,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"454f41205369676e6174757265732056616c696461746f72204d6f636b","id":8504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"339:31:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_04733bf15f4ac2479d17c7474669c77945f9d314ce0c0b105d4bf7c62e2c106a","typeString":"literal_string \"EOA Signatures Validator Mock\""},"value":"EOA Signatures Validator Mock"},{"hexValue":"31","id":8505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"372:3:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":8506,"modifierName":{"id":8503,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"332:6:50","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EIP712_$5956_$","typeString":"type(contract EIP712)"}},"nodeType":"ModifierInvocation","src":"332:44:50"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":8502,"nodeType":"ParameterList","parameters":[],"src":"329:2:50"},"returnParameters":{"id":8507,"nodeType":"ParameterList","parameters":[],"src":"377:0:50"},"scope":8592,"src":"318:123:50","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8542,"nodeType":"Block","src":"567:232:50","statements":[{"assignments":[8519],"declarations":[{"constant":false,"id":8519,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":8542,"src":"577:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"577:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8530,"initialValue":{"arguments":[{"arguments":[{"id":8523,"name":"MOCK_AUTHENTICATE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"619:26:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8513,"src":"647:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8526,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"668:4:50","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8525,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"655:12:50","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"655:18:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8521,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"608:3:50","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"608:10:50","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"608:66:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8520,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"598:9:50","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"598:77:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"577:98:50"},{"expression":{"arguments":[{"id":8532,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8511,"src":"708:4:50","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8533,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"714:10:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8534,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"726:9:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":8535,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"737:6:50","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"737:24:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8531,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1839,"src":"686:21:50","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256)"}},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"686:76:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8538,"nodeType":"ExpressionStatement","src":"686:76:50"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8539,"name":"Authenticated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"777:13:50","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"777:15:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8541,"nodeType":"EmitStatement","src":"772:20:50"}]},"functionSelector":"6917a1ff","id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"authenticatedCall","nodeType":"FunctionDefinition","parameters":{"id":8516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8511,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":8543,"src":"483:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8510,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8513,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8543,"src":"505:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8512,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8515,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":8543,"src":"529:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8514,"name":"bytes","nodeType":"ElementaryTypeName","src":"529:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"473:84:50"},"returnParameters":{"id":8517,"nodeType":"ParameterList","parameters":[],"src":"567:0:50"},"scope":8592,"src":"447:352:50","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8579,"nodeType":"Block","src":"963:358:50","statements":[{"assignments":[8555],"declarations":[{"constant":false,"id":8555,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":8579,"src":"1089:18:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1089:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8566,"initialValue":{"arguments":[{"arguments":[{"id":8559,"name":"MOCK_AUTHENTICATE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"1131:26:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"1159:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8562,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"1180:4:50","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8561,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1167:12:50","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1167:18:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8557,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1120:3:50","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1120:10:50","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1120:66:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8556,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1110:9:50","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1110:77:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1089:98:50"},{"expression":{"arguments":[{"id":8568,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"1220:4:50","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8569,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8555,"src":"1226:10:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8570,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8549,"src":"1238:9:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8571,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"1249:8:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8572,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1259:6:50","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":8573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"1259:24:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8567,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1883,"src":"1198:21:50","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256,uint256)"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1198:86:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8575,"nodeType":"ExpressionStatement","src":"1198:86:50"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8576,"name":"Authenticated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"1299:13:50","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1299:15:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8578,"nodeType":"EmitStatement","src":"1294:20:50"}]},"functionSelector":"9a874583","id":8580,"implemented":true,"kind":"function","modifiers":[],"name":"authenticatedCallWithDeadline","nodeType":"FunctionDefinition","parameters":{"id":8552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8545,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":8580,"src":"853:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8544,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8547,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8580,"src":"875:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8546,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8549,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":8580,"src":"899:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8548,"name":"bytes","nodeType":"ElementaryTypeName","src":"899:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8551,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":8580,"src":"931:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8550,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"843:110:50"},"returnParameters":{"id":8553,"nodeType":"ParameterList","parameters":[],"src":"963:0:50"},"scope":8592,"src":"805:516:50","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8590,"nodeType":"Block","src":"1373:35:50","statements":[{"expression":{"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1383:18:50","subExpression":{"baseExpression":{"id":8585,"name":"_nextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1383:10:50","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8587,"indexExpression":{"id":8586,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8582,"src":"1394:4:50","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1383:16:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8589,"nodeType":"ExpressionStatement","src":"1383:18:50"}]},"functionSelector":"8247a97c","id":8591,"implemented":true,"kind":"function","modifiers":[],"name":"increaseNonce","nodeType":"FunctionDefinition","parameters":{"id":8583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8582,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":8591,"src":"1350:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8581,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1349:14:50"},"returnParameters":{"id":8584,"nodeType":"ParameterList","parameters":[],"src":"1373:0:50"},"scope":8592,"src":"1327:81:50","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8593,"src":"107:1303:50"}],"src":"33:1378:50"},"id":50},"contracts/test/ERC1271Mock.sol":{"ast":{"absolutePath":"contracts/test/ERC1271Mock.sol","exportedSymbols":{"ERC1271Mock":[8676]},"id":8677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8594,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:51"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol","id":8595,"nodeType":"ImportDirective","scope":8677,"sourceUnit":685,"src":"58:89:51","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8596,"name":"IERC1271","nodeType":"UserDefinedTypeName","referencedDeclaration":684,"src":"173:8:51","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1271_$684","typeString":"contract IERC1271"}},"id":8597,"nodeType":"InheritanceSpecifier","src":"173:8:51"}],"contractDependencies":[684],"contractKind":"contract","fullyImplemented":true,"id":8676,"linearizedBaseContracts":[8676,684],"name":"ERC1271Mock","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8601,"mutability":"mutable","name":"_approved","nodeType":"VariableDeclaration","scope":8676,"src":"188:42:51","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":8600,"keyType":{"id":8598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"196:7:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"188:24:51","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":8599,"name":"bool","nodeType":"ElementaryTypeName","src":"207:4:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":8603,"mutability":"mutable","name":"_revert","nodeType":"VariableDeclaration","scope":8676,"src":"236:20:51","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8602,"name":"bool","nodeType":"ElementaryTypeName","src":"236:4:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":8614,"nodeType":"Block","src":"306:38:51","statements":[{"expression":{"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8608,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"316:9:51","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8610,"indexExpression":{"id":8609,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"326:3:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"316:14:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"333:4:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"316:21:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8613,"nodeType":"ExpressionStatement","src":"316:21:51"}]},"functionSelector":"23d6d879","id":8615,"implemented":true,"kind":"function","modifiers":[],"name":"setApproved","nodeType":"FunctionDefinition","parameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8605,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8615,"src":"284:11:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"284:7:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"283:13:51"},"returnParameters":{"id":8607,"nodeType":"ParameterList","parameters":[],"src":"306:0:51"},"scope":8676,"src":"263:81:51","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8624,"nodeType":"Block","src":"394:36:51","statements":[{"expression":{"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8620,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"404:7:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8621,"name":"newRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"414:9:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"404:19:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8623,"nodeType":"ExpressionStatement","src":"404:19:51"}]},"functionSelector":"8fb5f171","id":8625,"implemented":true,"kind":"function","modifiers":[],"name":"setRevert","nodeType":"FunctionDefinition","parameters":{"id":8618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8617,"mutability":"mutable","name":"newRevert","nodeType":"VariableDeclaration","scope":8625,"src":"369:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8616,"name":"bool","nodeType":"ElementaryTypeName","src":"369:4:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"368:16:51"},"returnParameters":{"id":8619,"nodeType":"ParameterList","parameters":[],"src":"394:0:51"},"scope":8676,"src":"350:80:51","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8642,"nodeType":"Block","src":"522:70:51","statements":[{"expression":{"arguments":[{"arguments":[{"id":8637,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"566:6:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8638,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"574:9:51","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8635,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"549:3:51","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"549:16:51","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"549:35:51","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8634,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"539:9:51","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"539:46:51","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8633,"id":8641,"nodeType":"Return","src":"532:53:51"}]},"functionSelector":"8109f510","id":8643,"implemented":true,"kind":"function","modifiers":[],"name":"getKey","nodeType":"FunctionDefinition","parameters":{"id":8630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8627,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":8643,"src":"452:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"452:7:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8629,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":8643,"src":"468:22:51","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8628,"name":"bytes","nodeType":"ElementaryTypeName","src":"468:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"451:40:51"},"returnParameters":{"id":8633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8632,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8643,"src":"513:7:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"513:7:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"512:9:51"},"scope":8676,"src":"436:156:51","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[683],"body":{"id":8674,"nodeType":"Block","src":"704:160:51","statements":[{"expression":{"arguments":[{"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"722:8:51","subExpression":{"id":8654,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8603,"src":"723:7:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313237315f4d4f434b5f524556455254","id":8656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"732:21:51","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e4ccd234a3a7279cbdaa9ddef718100d15725c4a226f3ff14cfa38867ff1a65","typeString":"literal_string \"ERC1271_MOCK_REVERT\""},"value":"ERC1271_MOCK_REVERT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e4ccd234a3a7279cbdaa9ddef718100d15725c4a226f3ff14cfa38867ff1a65","typeString":"literal_string \"ERC1271_MOCK_REVERT\""}],"id":8653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"714:7:51","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"714:40:51","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8658,"nodeType":"ExpressionStatement","src":"714:40:51"},{"expression":{"condition":{"baseExpression":{"id":8659,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"772:9:51","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8664,"indexExpression":{"arguments":[{"id":8661,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8645,"src":"789:6:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8662,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8647,"src":"797:9:51","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8660,"name":"getKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"782:6:51","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (bytes32)"}},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"782:25:51","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"772:36:51","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30","id":8670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"855:1:51","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"848:6:51","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":8668,"name":"bytes4","nodeType":"ElementaryTypeName","src":"848:6:51","typeDescriptions":{}}},"id":8671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"848:9:51","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"772:85:51","trueExpression":{"expression":{"expression":{"id":8665,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"811:8:51","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$684_$","typeString":"type(contract IERC1271)"}},"id":8666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":683,"src":"811:25:51","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"811:34:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":8652,"id":8673,"nodeType":"Return","src":"765:92:51"}]},"functionSelector":"1626ba7e","id":8675,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignature","nodeType":"FunctionDefinition","overrides":{"id":8649,"nodeType":"OverrideSpecifier","overrides":[],"src":"678:8:51"},"parameters":{"id":8648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8645,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":8675,"src":"624:14:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"624:7:51","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8647,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":8675,"src":"640:22:51","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8646,"name":"bytes","nodeType":"ElementaryTypeName","src":"640:5:51","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"623:40:51"},"returnParameters":{"id":8652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8651,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8675,"src":"696:6:51","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8650,"name":"bytes4","nodeType":"ElementaryTypeName","src":"696:6:51","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"695:8:51"},"scope":8676,"src":"598:266:51","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8677,"src":"149:717:51"}],"src":"33:834:51"},"id":51},"contracts/test/ERC20FalseApprovalMock.sol":{"ast":{"absolutePath":"contracts/test/ERC20FalseApprovalMock.sol","exportedSymbols":{"ERC20FalseApprovalMock":[8715]},"id":8716,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8678,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:52"},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":8679,"nodeType":"ImportDirective","scope":8716,"sourceUnit":6448,"src":"713:35:52","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8681,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"871:5:52","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":8682,"nodeType":"InheritanceSpecifier","src":"871:5:52"}],"contractDependencies":[762,6447],"contractKind":"contract","documentation":{"id":8680,"nodeType":"StructuredDocumentation","src":"750:85:52","text":" @dev ERC20 with a modified `approve` function, which always returns false."},"fullyImplemented":true,"id":8715,"linearizedBaseContracts":[8715,6447,762],"name":"ERC20FalseApprovalMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":8693,"nodeType":"Block","src":"957:2:52","statements":[]},"id":8694,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8689,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"943:4:52","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8690,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"949:6:52","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8691,"modifierName":{"id":8688,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"937:5:52","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"937:19:52"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":8687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8684,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":8694,"src":"895:18:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8683,"name":"string","nodeType":"ElementaryTypeName","src":"895:6:52","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8686,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":8694,"src":"915:20:52","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8685,"name":"string","nodeType":"ElementaryTypeName","src":"915:6:52","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"894:42:52"},"returnParameters":{"id":8692,"nodeType":"ParameterList","parameters":[],"src":"957:0:52"},"scope":8715,"src":"883:76:52","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6128],"body":{"id":8713,"nodeType":"Block","src":"1054:76:52","statements":[{"expression":{"arguments":[{"expression":{"id":8705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:52","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1073:10:52","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8707,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"1085:7:52","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8698,"src":"1094:6:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8704,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"1064:8:52","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1064:37:52","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8710,"nodeType":"ExpressionStatement","src":"1064:37:52"},{"expression":{"hexValue":"66616c7365","id":8711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1118:5:52","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8703,"id":8712,"nodeType":"Return","src":"1111:12:52"}]},"functionSelector":"095ea7b3","id":8714,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":8700,"nodeType":"OverrideSpecifier","overrides":[],"src":"1030:8:52"},"parameters":{"id":8699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8696,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":8714,"src":"982:15:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8695,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:52","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8698,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8714,"src":"999:14:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8697,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:52","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:33:52"},"returnParameters":{"id":8703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8702,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8714,"src":"1048:4:52","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8701,"name":"bool","nodeType":"ElementaryTypeName","src":"1048:4:52","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1047:6:52"},"scope":8715,"src":"965:165:52","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":8716,"src":"836:296:52"}],"src":"688:445:52"},"id":52},"contracts/test/ERC20Mock.sol":{"ast":{"absolutePath":"contracts/test/ERC20Mock.sol","exportedSymbols":{"ERC20Mock":[8759]},"id":8760,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8717,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:53"},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":8718,"nodeType":"ImportDirective","scope":8760,"sourceUnit":6448,"src":"713:35:53","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8719,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"772:5:53","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":8720,"nodeType":"InheritanceSpecifier","src":"772:5:53"}],"contractDependencies":[762,6447],"contractKind":"contract","fullyImplemented":true,"id":8759,"linearizedBaseContracts":[8759,6447,762],"name":"ERC20Mock","nodeType":"ContractDefinition","nodes":[{"body":{"id":8731,"nodeType":"Block","src":"858:2:53","statements":[]},"id":8732,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8727,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8722,"src":"844:4:53","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8728,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8724,"src":"850:6:53","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8729,"modifierName":{"id":8726,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"838:5:53","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"838:19:53"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":8725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8722,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":8732,"src":"796:18:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8721,"name":"string","nodeType":"ElementaryTypeName","src":"796:6:53","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8724,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":8732,"src":"816:20:53","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8723,"name":"string","nodeType":"ElementaryTypeName","src":"816:6:53","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"795:42:53"},"returnParameters":{"id":8730,"nodeType":"ParameterList","parameters":[],"src":"858:0:53"},"scope":8759,"src":"784:76:53","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8744,"nodeType":"Block","src":"924:41:53","statements":[{"expression":{"arguments":[{"id":8740,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"940:9:53","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"951:6:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8739,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"934:5:53","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"934:24:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8743,"nodeType":"ExpressionStatement","src":"934:24:53"}]},"functionSelector":"40c10f19","id":8745,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":8737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8734,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":8745,"src":"880:17:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8733,"name":"address","nodeType":"ElementaryTypeName","src":"880:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8736,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8745,"src":"899:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8735,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"879:35:53"},"returnParameters":{"id":8738,"nodeType":"ParameterList","parameters":[],"src":"924:0:53"},"scope":8759,"src":"866:99:53","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8757,"nodeType":"Block","src":"1026:38:53","statements":[{"expression":{"arguments":[{"id":8753,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"1042:6:53","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8754,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8749,"src":"1050:6:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8752,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1036:5:53","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1036:21:53","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8756,"nodeType":"ExpressionStatement","src":"1036:21:53"}]},"functionSelector":"9dc29fac","id":8758,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":8750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8747,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":8758,"src":"985:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8746,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8749,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8758,"src":"1001:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"984:32:53"},"returnParameters":{"id":8751,"nodeType":"ParameterList","parameters":[],"src":"1026:0:53"},"scope":8759,"src":"971:93:53","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8760,"src":"750:316:53"}],"src":"688:379:53"},"id":53},"contracts/test/ERC20PermitMock.sol":{"ast":{"absolutePath":"contracts/test/ERC20PermitMock.sol","exportedSymbols":{"ERC20PermitMock":[8808]},"id":8809,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":8761,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:54"},{"absolutePath":"contracts/openzeppelin/ERC20Permit.sol","file":"../openzeppelin/ERC20Permit.sol","id":8762,"nodeType":"ImportDirective","scope":8809,"sourceUnit":6614,"src":"713:41:54","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8763,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"784:5:54","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":8764,"nodeType":"InheritanceSpecifier","src":"784:5:54"},{"baseName":{"id":8765,"name":"ERC20Permit","nodeType":"UserDefinedTypeName","referencedDeclaration":6613,"src":"791:11:54","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Permit_$6613","typeString":"contract ERC20Permit"}},"id":8766,"nodeType":"InheritanceSpecifier","src":"791:11:54"}],"contractDependencies":[636,762,798,1958,5956,6447,6613],"contractKind":"contract","fullyImplemented":true,"id":8808,"linearizedBaseContracts":[8808,6613,1958,5956,636,798,6447,762],"name":"ERC20PermitMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":8780,"nodeType":"Block","src":"901:2:54","statements":[]},"id":8781,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8773,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8768,"src":"869:4:54","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8774,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"875:6:54","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8775,"modifierName":{"id":8772,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"863:5:54","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"863:19:54"},{"arguments":[{"id":8777,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8768,"src":"895:4:54","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8778,"modifierName":{"id":8776,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"883:11:54","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Permit_$6613_$","typeString":"type(contract ERC20Permit)"}},"nodeType":"ModifierInvocation","src":"883:17:54"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":8771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8768,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":8781,"src":"821:18:54","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8767,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:54","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8770,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":8781,"src":"841:20:54","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8769,"name":"string","nodeType":"ElementaryTypeName","src":"841:6:54","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"820:42:54"},"returnParameters":{"id":8779,"nodeType":"ParameterList","parameters":[],"src":"901:0:54"},"scope":8808,"src":"809:94:54","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8793,"nodeType":"Block","src":"967:41:54","statements":[{"expression":{"arguments":[{"id":8789,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"983:9:54","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8790,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"994:6:54","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8788,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"977:5:54","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"977:24:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8792,"nodeType":"ExpressionStatement","src":"977:24:54"}]},"functionSelector":"40c10f19","id":8794,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":8786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8783,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":8794,"src":"923:17:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8782,"name":"address","nodeType":"ElementaryTypeName","src":"923:7:54","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8785,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8794,"src":"942:14:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8784,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:54","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"922:35:54"},"returnParameters":{"id":8787,"nodeType":"ParameterList","parameters":[],"src":"967:0:54"},"scope":8808,"src":"909:99:54","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8806,"nodeType":"Block","src":"1069:38:54","statements":[{"expression":{"arguments":[{"id":8802,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"1085:6:54","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"1093:6:54","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8801,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1079:5:54","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1079:21:54","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8805,"nodeType":"ExpressionStatement","src":"1079:21:54"}]},"functionSelector":"9dc29fac","id":8807,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8796,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":8807,"src":"1028:14:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8795,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:54","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8798,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":8807,"src":"1044:14:54","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1044:7:54","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:32:54"},"returnParameters":{"id":8800,"nodeType":"ParameterList","parameters":[],"src":"1069:0:54"},"scope":8808,"src":"1014:93:54","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8809,"src":"756:353:54"}],"src":"688:422:54"},"id":54},"contracts/test/EnumerableMapMock.sol":{"ast":{"absolutePath":"contracts/test/EnumerableMapMock.sol","exportedSymbols":{"EnumerableIERC20ToBytes32MapMock":[8985],"EnumerableIERC20ToUint256MapMock":[9158]},"id":9159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8810,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:55"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":8811,"nodeType":"ImportDirective","scope":9159,"sourceUnit":763,"src":"58:87:55","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/EnumerableMap.sol","file":"../openzeppelin/EnumerableMap.sol","id":8812,"nodeType":"ImportDirective","scope":9159,"sourceUnit":7384,"src":"147:43:55","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8985,"linearizedBaseContracts":[8985],"name":"EnumerableIERC20ToBytes32MapMock","nodeType":"ContractDefinition","nodes":[{"id":8815,"libraryName":{"id":8813,"name":"EnumerableMap","nodeType":"UserDefinedTypeName","referencedDeclaration":7383,"src":"287:13:55","typeDescriptions":{"typeIdentifier":"t_contract$_EnumerableMap_$7383","typeString":"library EnumerableMap"}},"nodeType":"UsingForDirective","src":"281:57:55","typeName":{"id":8814,"name":"EnumerableMap.IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"305:32:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}}},{"anonymous":false,"id":8819,"name":"OperationResult","nodeType":"EventDefinition","parameters":{"id":8818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8817,"indexed":false,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":8819,"src":"366:11:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8816,"name":"bool","nodeType":"ElementaryTypeName","src":"366:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"365:13:55"},"src":"344:35:55"},{"constant":false,"id":8821,"mutability":"mutable","name":"_map","nodeType":"VariableDeclaration","scope":8985,"src":"385:45:55","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map"},"typeName":{"id":8820,"name":"EnumerableMap.IERC20ToBytes32Map","nodeType":"UserDefinedTypeName","referencedDeclaration":6634,"src":"385:32:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage_ptr","typeString":"struct EnumerableMap.IERC20ToBytes32Map"}},"visibility":"private"},{"body":{"id":8833,"nodeType":"Block","src":"494:42:55","statements":[{"expression":{"arguments":[{"id":8830,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8823,"src":"525:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"expression":{"id":8828,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"511:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":6837,"src":"511:13:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_bool_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20) view returns (bool)"}},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"511:18:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8827,"id":8832,"nodeType":"Return","src":"504:25:55"}]},"functionSelector":"5dbe47e8","id":8834,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":8824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8823,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8834,"src":"455:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8822,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"455:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"454:12:55"},"returnParameters":{"id":8827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8826,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8834,"src":"488:4:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8825,"name":"bool","nodeType":"ElementaryTypeName","src":"488:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"487:6:55"},"scope":8985,"src":"437:99:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8853,"nodeType":"Block","src":"589:89:55","statements":[{"assignments":[8842],"declarations":[{"constant":false,"id":8842,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":8853,"src":"599:11:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8841,"name":"bool","nodeType":"ElementaryTypeName","src":"599:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8848,"initialValue":{"arguments":[{"id":8845,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8836,"src":"622:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":8846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"627:5:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8843,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"613:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":6709,"src":"613:8:55","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20,bytes32) returns (bool)"}},"id":8847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"613:20:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"599:34:55"},{"eventCall":{"arguments":[{"id":8850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8842,"src":"664:6:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8849,"name":"OperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"648:15:55","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"648:23:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8852,"nodeType":"EmitStatement","src":"643:28:55"}]},"functionSelector":"3e7b8e71","id":8854,"implemented":true,"kind":"function","modifiers":[],"name":"set","nodeType":"FunctionDefinition","parameters":{"id":8839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8836,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8854,"src":"555:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8835,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"555:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8838,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8854,"src":"567:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"567:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"554:27:55"},"returnParameters":{"id":8840,"nodeType":"ParameterList","parameters":[],"src":"589:0:55"},"scope":8985,"src":"542:136:55","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8866,"nodeType":"Block","src":"753:51:55","statements":[{"expression":{"arguments":[{"id":8863,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8856,"src":"793:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"expression":{"id":8861,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"770:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_indexOf","nodeType":"MemberAccess","referencedDeclaration":7000,"src":"770:22:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20) view returns (uint256)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"770:27:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8860,"id":8865,"nodeType":"Return","src":"763:34:55"}]},"functionSelector":"0127190b","id":8867,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_indexOf","nodeType":"FunctionDefinition","parameters":{"id":8857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8856,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8867,"src":"711:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8855,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"711:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"710:12:55"},"returnParameters":{"id":8860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8859,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8867,"src":"744:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8858,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"743:9:55"},"scope":8985,"src":"684:120:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8882,"nodeType":"Block","src":"888:52:55","statements":[{"expression":{"arguments":[{"id":8878,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"918:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":8879,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8871,"src":"923:9:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8876,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"905:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"indexOf","nodeType":"MemberAccess","referencedDeclaration":6984,"src":"905:12:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20,uint256) view returns (uint256)"}},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"905:28:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8875,"id":8881,"nodeType":"Return","src":"898:35:55"}]},"functionSelector":"e37b1903","id":8883,"implemented":true,"kind":"function","modifiers":[],"name":"indexOf","nodeType":"FunctionDefinition","parameters":{"id":8872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8883,"src":"827:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8868,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"827:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8871,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":8883,"src":"839:17:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8870,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"826:31:55"},"returnParameters":{"id":8875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8874,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8883,"src":"879:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8873,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:9:55"},"scope":8985,"src":"810:130:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8897,"nodeType":"Block","src":"1008:51:55","statements":[{"expression":{"arguments":[{"id":8893,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"1039:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"1046:5:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8890,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1018:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_setAt","nodeType":"MemberAccess","referencedDeclaration":6729,"src":"1018:20:55","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_uint256_$_t_bytes32_$returns$__$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,uint256,bytes32)"}},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1018:34:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8896,"nodeType":"ExpressionStatement","src":"1018:34:55"}]},"functionSelector":"54996d5d","id":8898,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_setAt","nodeType":"FunctionDefinition","parameters":{"id":8888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8885,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":8898,"src":"971:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8884,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8887,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8898,"src":"986:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"986:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"970:30:55"},"returnParameters":{"id":8889,"nodeType":"ParameterList","parameters":[],"src":"1008:0:55"},"scope":8985,"src":"946:113:55","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8914,"nodeType":"Block","src":"1100:85:55","statements":[{"assignments":[8904],"declarations":[{"constant":false,"id":8904,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":8914,"src":"1110:11:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8903,"name":"bool","nodeType":"ElementaryTypeName","src":"1110:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8909,"initialValue":{"arguments":[{"id":8907,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"1136:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"expression":{"id":8905,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1124:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":6819,"src":"1124:11:55","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_bool_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20) returns (bool)"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1124:16:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1110:30:55"},{"eventCall":{"arguments":[{"id":8911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8904,"src":"1171:6:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8910,"name":"OperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8819,"src":"1155:15:55","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1155:23:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8913,"nodeType":"EmitStatement","src":"1150:28:55"}]},"functionSelector":"29092d0e","id":8915,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":8901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8900,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8915,"src":"1081:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8899,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1081:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"1080:12:55"},"returnParameters":{"id":8902,"nodeType":"ParameterList","parameters":[],"src":"1100:0:55"},"scope":8985,"src":"1065:120:55","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8924,"nodeType":"Block","src":"1239:37:55","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8920,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1256:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":6849,"src":"1256:11:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer) view returns (uint256)"}},"id":8922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1256:13:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8919,"id":8923,"nodeType":"Return","src":"1249:20:55"}]},"functionSelector":"1f7b6d32","id":8925,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":8916,"nodeType":"ParameterList","parameters":[],"src":"1206:2:55"},"returnParameters":{"id":8919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8918,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8925,"src":"1230:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:55"},"scope":8985,"src":"1191:85:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8939,"nodeType":"Block","src":"1357:38:55","statements":[{"expression":{"arguments":[{"id":8936,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8927,"src":"1382:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8934,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1374:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":6876,"src":"1374:7:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$762_$_t_bytes32_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,uint256) view returns (contract IERC20,bytes32)"}},"id":8937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1374:14:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_bytes32_$","typeString":"tuple(contract IERC20,bytes32)"}},"functionReturnParameters":8933,"id":8938,"nodeType":"Return","src":"1367:21:55"}]},"functionSelector":"e0886f90","id":8940,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":8928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8927,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":8940,"src":"1294:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1293:15:55"},"returnParameters":{"id":8933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8930,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8940,"src":"1330:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8929,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1330:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8932,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8940,"src":"1342:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1342:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1329:27:55"},"scope":8985,"src":"1282:113:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8954,"nodeType":"Block","src":"1486:48:55","statements":[{"expression":{"arguments":[{"id":8951,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"1521:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8949,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1503:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_at","nodeType":"MemberAccess","referencedDeclaration":6902,"src":"1503:17:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$762_$_t_bytes32_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,uint256) view returns (contract IERC20,bytes32)"}},"id":8952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1503:24:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_bytes32_$","typeString":"tuple(contract IERC20,bytes32)"}},"functionReturnParameters":8948,"id":8953,"nodeType":"Return","src":"1496:31:55"}]},"functionSelector":"c65d2683","id":8955,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_at","nodeType":"FunctionDefinition","parameters":{"id":8943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8942,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":8955,"src":"1423:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1422:15:55"},"returnParameters":{"id":8948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8945,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8955,"src":"1459:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8944,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1459:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8947,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8955,"src":"1471:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1471:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1458:27:55"},"scope":8985,"src":"1401:133:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8967,"nodeType":"Block","src":"1618:53:55","statements":[{"expression":{"arguments":[{"id":8964,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"1658:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8962,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1635:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_valueAt","nodeType":"MemberAccess","referencedDeclaration":6919,"src":"1635:22:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,uint256) view returns (bytes32)"}},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:29:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8961,"id":8966,"nodeType":"Return","src":"1628:36:55"}]},"functionSelector":"adcd29d9","id":8968,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_valueAt","nodeType":"FunctionDefinition","parameters":{"id":8958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8957,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":8968,"src":"1567:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1567:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1566:15:55"},"returnParameters":{"id":8961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8960,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8968,"src":"1603:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1603:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1602:15:55"},"scope":8985,"src":"1540:131:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8983,"nodeType":"Block","src":"1751:48:55","statements":[{"expression":{"arguments":[{"id":8979,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8970,"src":"1777:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":8980,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8972,"src":"1782:9:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8977,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8821,"src":"1768:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToBytes32Map_$6634_storage","typeString":"struct EnumerableMap.IERC20ToBytes32Map storage ref"}},"id":8978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":6953,"src":"1768:8:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$_t_contract$_IERC20_$762_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_IERC20ToBytes32Map_$6634_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToBytes32Map storage pointer,contract IERC20,uint256) view returns (bytes32)"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1768:24:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8976,"id":8982,"nodeType":"Return","src":"1761:31:55"}]},"functionSelector":"b464631b","id":8984,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","parameters":{"id":8973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8970,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":8984,"src":"1690:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8969,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"1690:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8972,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":8984,"src":"1702:17:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1689:31:55"},"returnParameters":{"id":8976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8975,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8984,"src":"1742:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1742:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1741:9:55"},"scope":8985,"src":"1677:122:55","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9159,"src":"233:1568:55"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9158,"linearizedBaseContracts":[9158],"name":"EnumerableIERC20ToUint256MapMock","nodeType":"ContractDefinition","nodes":[{"id":8988,"libraryName":{"id":8986,"name":"EnumerableMap","nodeType":"UserDefinedTypeName","referencedDeclaration":7383,"src":"1857:13:55","typeDescriptions":{"typeIdentifier":"t_contract$_EnumerableMap_$7383","typeString":"library EnumerableMap"}},"nodeType":"UsingForDirective","src":"1851:57:55","typeName":{"id":8987,"name":"EnumerableMap.IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"1875:32:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}}},{"anonymous":false,"id":8992,"name":"OperationResult","nodeType":"EventDefinition","parameters":{"id":8991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8990,"indexed":false,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":8992,"src":"1936:11:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8989,"name":"bool","nodeType":"ElementaryTypeName","src":"1936:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1935:13:55"},"src":"1914:35:55"},{"constant":false,"id":8994,"mutability":"mutable","name":"_map","nodeType":"VariableDeclaration","scope":9158,"src":"1955:45:55","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map"},"typeName":{"id":8993,"name":"EnumerableMap.IERC20ToUint256Map","nodeType":"UserDefinedTypeName","referencedDeclaration":7016,"src":"1955:32:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage_ptr","typeString":"struct EnumerableMap.IERC20ToUint256Map"}},"visibility":"private"},{"body":{"id":9006,"nodeType":"Block","src":"2064:42:55","statements":[{"expression":{"arguments":[{"id":9003,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"2095:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"expression":{"id":9001,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2081:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7219,"src":"2081:13:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_bool_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20) view returns (bool)"}},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:18:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9000,"id":9005,"nodeType":"Return","src":"2074:25:55"}]},"functionSelector":"5dbe47e8","id":9007,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","parameters":{"id":8997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8996,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9007,"src":"2025:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":8995,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2025:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2024:12:55"},"returnParameters":{"id":9000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8999,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9007,"src":"2058:4:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8998,"name":"bool","nodeType":"ElementaryTypeName","src":"2058:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2057:6:55"},"scope":9158,"src":"2007:99:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9026,"nodeType":"Block","src":"2159:89:55","statements":[{"assignments":[9015],"declarations":[{"constant":false,"id":9015,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":9026,"src":"2169:11:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9014,"name":"bool","nodeType":"ElementaryTypeName","src":"2169:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9021,"initialValue":{"arguments":[{"id":9018,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"2192:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":9019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9011,"src":"2197:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9016,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2183:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":7091,"src":"2183:8:55","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20,uint256) returns (bool)"}},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2183:20:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2169:34:55"},{"eventCall":{"arguments":[{"id":9023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9015,"src":"2234:6:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9022,"name":"OperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8992,"src":"2218:15:55","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2218:23:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9025,"nodeType":"EmitStatement","src":"2213:28:55"}]},"functionSelector":"3825d828","id":9027,"implemented":true,"kind":"function","modifiers":[],"name":"set","nodeType":"FunctionDefinition","parameters":{"id":9012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9009,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9027,"src":"2125:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9008,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2125:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9011,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9027,"src":"2137:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2124:27:55"},"returnParameters":{"id":9013,"nodeType":"ParameterList","parameters":[],"src":"2159:0:55"},"scope":9158,"src":"2112:136:55","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9039,"nodeType":"Block","src":"2323:51:55","statements":[{"expression":{"arguments":[{"id":9036,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9029,"src":"2363:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"expression":{"id":9034,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2340:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_indexOf","nodeType":"MemberAccess","referencedDeclaration":7382,"src":"2340:22:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20) view returns (uint256)"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:27:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9033,"id":9038,"nodeType":"Return","src":"2333:34:55"}]},"functionSelector":"0127190b","id":9040,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_indexOf","nodeType":"FunctionDefinition","parameters":{"id":9030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9029,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9040,"src":"2281:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9028,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2281:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2280:12:55"},"returnParameters":{"id":9033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9032,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9040,"src":"2314:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2313:9:55"},"scope":9158,"src":"2254:120:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9055,"nodeType":"Block","src":"2458:52:55","statements":[{"expression":{"arguments":[{"id":9051,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"2488:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":9052,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"2493:9:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9049,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2475:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"indexOf","nodeType":"MemberAccess","referencedDeclaration":7366,"src":"2475:12:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20,uint256) view returns (uint256)"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2475:28:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9048,"id":9054,"nodeType":"Return","src":"2468:35:55"}]},"functionSelector":"e37b1903","id":9056,"implemented":true,"kind":"function","modifiers":[],"name":"indexOf","nodeType":"FunctionDefinition","parameters":{"id":9045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9042,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9056,"src":"2397:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9041,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2397:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9044,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":9056,"src":"2409:17:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2396:31:55"},"returnParameters":{"id":9048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9047,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9056,"src":"2449:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2448:9:55"},"scope":9158,"src":"2380:130:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9070,"nodeType":"Block","src":"2578:51:55","statements":[{"expression":{"arguments":[{"id":9066,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"2609:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"2616:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9063,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2588:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_setAt","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"2588:20:55","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256,uint256)"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2588:34:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9069,"nodeType":"ExpressionStatement","src":"2588:34:55"}]},"functionSelector":"cb52cb1a","id":9071,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_setAt","nodeType":"FunctionDefinition","parameters":{"id":9061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":9071,"src":"2541:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9060,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9071,"src":"2556:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2540:30:55"},"returnParameters":{"id":9062,"nodeType":"ParameterList","parameters":[],"src":"2578:0:55"},"scope":9158,"src":"2516:113:55","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9087,"nodeType":"Block","src":"2670:85:55","statements":[{"assignments":[9077],"declarations":[{"constant":false,"id":9077,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":9087,"src":"2680:11:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9076,"name":"bool","nodeType":"ElementaryTypeName","src":"2680:4:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":9082,"initialValue":{"arguments":[{"id":9080,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"2706:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}],"expression":{"id":9078,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2694:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7201,"src":"2694:11:55","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$returns$_t_bool_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20) returns (bool)"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2694:16:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2680:30:55"},{"eventCall":{"arguments":[{"id":9084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9077,"src":"2741:6:55","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9083,"name":"OperationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8992,"src":"2725:15:55","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2725:23:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9086,"nodeType":"EmitStatement","src":"2720:28:55"}]},"functionSelector":"29092d0e","id":9088,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","parameters":{"id":9074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9073,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9088,"src":"2651:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9072,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2651:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2650:12:55"},"returnParameters":{"id":9075,"nodeType":"ParameterList","parameters":[],"src":"2670:0:55"},"scope":9158,"src":"2635:120:55","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9097,"nodeType":"Block","src":"2809:37:55","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9093,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2826:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7231,"src":"2826:11:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer) view returns (uint256)"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2826:13:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9092,"id":9096,"nodeType":"Return","src":"2819:20:55"}]},"functionSelector":"1f7b6d32","id":9098,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","parameters":{"id":9089,"nodeType":"ParameterList","parameters":[],"src":"2776:2:55"},"returnParameters":{"id":9092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9091,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9098,"src":"2800:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2800:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2799:9:55"},"scope":9158,"src":"2761:85:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9112,"nodeType":"Block","src":"2927:38:55","statements":[{"expression":{"arguments":[{"id":9109,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9100,"src":"2952:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9107,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"2944:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7258,"src":"2944:7:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$762_$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256) view returns (contract IERC20,uint256)"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2944:14:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"tuple(contract IERC20,uint256)"}},"functionReturnParameters":9106,"id":9111,"nodeType":"Return","src":"2937:21:55"}]},"functionSelector":"e0886f90","id":9113,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","parameters":{"id":9101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9100,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":9113,"src":"2864:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2863:15:55"},"returnParameters":{"id":9106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9103,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9113,"src":"2900:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9102,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"2900:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9105,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9113,"src":"2912:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2912:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2899:27:55"},"scope":9158,"src":"2852:113:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9127,"nodeType":"Block","src":"3056:48:55","statements":[{"expression":{"arguments":[{"id":9124,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9115,"src":"3091:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9122,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"3073:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_at","nodeType":"MemberAccess","referencedDeclaration":7284,"src":"3073:17:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_uint256_$returns$_t_contract$_IERC20_$762_$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256) view returns (contract IERC20,uint256)"}},"id":9125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3073:24:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_contract$_IERC20_$762_$_t_uint256_$","typeString":"tuple(contract IERC20,uint256)"}},"functionReturnParameters":9121,"id":9126,"nodeType":"Return","src":"3066:31:55"}]},"functionSelector":"c65d2683","id":9128,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_at","nodeType":"FunctionDefinition","parameters":{"id":9116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9115,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":9128,"src":"2993:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2993:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2992:15:55"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9118,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9128,"src":"3029:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9117,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"3029:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9120,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9128,"src":"3041:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3028:27:55"},"scope":9158,"src":"2971:133:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9140,"nodeType":"Block","src":"3188:53:55","statements":[{"expression":{"arguments":[{"id":9137,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9130,"src":"3228:5:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9135,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"3205:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unchecked_valueAt","nodeType":"MemberAccess","referencedDeclaration":7301,"src":"3205:22:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,uint256) view returns (uint256)"}},"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3205:29:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9134,"id":9139,"nodeType":"Return","src":"3198:36:55"}]},"functionSelector":"adcd29d9","id":9141,"implemented":true,"kind":"function","modifiers":[],"name":"unchecked_valueAt","nodeType":"FunctionDefinition","parameters":{"id":9131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9130,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":9141,"src":"3137:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3137:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3136:15:55"},"returnParameters":{"id":9134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9133,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9141,"src":"3173:13:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3172:15:55"},"scope":9158,"src":"3110:131:55","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9156,"nodeType":"Block","src":"3321:48:55","statements":[{"expression":{"arguments":[{"id":9152,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"3347:3:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},{"id":9153,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9145,"src":"3352:9:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9150,"name":"_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"3338:4:55","typeDescriptions":{"typeIdentifier":"t_struct$_IERC20ToUint256Map_$7016_storage","typeString":"struct EnumerableMap.IERC20ToUint256Map storage ref"}},"id":9151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":7335,"src":"3338:8:55","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$_t_contract$_IERC20_$762_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_IERC20ToUint256Map_$7016_storage_ptr_$","typeString":"function (struct EnumerableMap.IERC20ToUint256Map storage pointer,contract IERC20,uint256) view returns (uint256)"}},"id":9154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3338:24:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9149,"id":9155,"nodeType":"Return","src":"3331:31:55"}]},"functionSelector":"b464631b","id":9157,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","parameters":{"id":9146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9143,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":9157,"src":"3260:10:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":9142,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"3260:6:55","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9145,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":9157,"src":"3272:17:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3259:31:55"},"returnParameters":{"id":9149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9148,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9157,"src":"3312:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3312:7:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3311:9:55"},"scope":9158,"src":"3247:122:55","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9159,"src":"1803:1568:55"}],"src":"33:3339:55"},"id":55},"contracts/test/ExtraCalldataEOASignaturesValidatorMock.sol":{"ast":{"absolutePath":"contracts/test/ExtraCalldataEOASignaturesValidatorMock.sol","exportedSymbols":{"ExtraCalldataEOASignaturesValidatorMock":[9258]},"id":9259,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9160,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:56"},{"absolutePath":"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol","file":"../helpers/ExtraCalldataEOASignaturesValidator.sol","id":9161,"nodeType":"ImportDirective","scope":9259,"sourceUnit":2315,"src":"58:60:56","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9162,"name":"ExtraCalldataEOASignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":2314,"src":"172:35:56","typeDescriptions":{"typeIdentifier":"t_contract$_ExtraCalldataEOASignaturesValidator_$2314","typeString":"contract ExtraCalldataEOASignaturesValidator"}},"id":9163,"nodeType":"InheritanceSpecifier","src":"172:35:56"}],"contractDependencies":[636,1958,2314,5956],"contractKind":"contract","fullyImplemented":true,"id":9258,"linearizedBaseContracts":[9258,2314,1958,5956,636],"name":"ExtraCalldataEOASignaturesValidatorMock","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":9168,"mutability":"constant","name":"AUTH_TYPE_HASH","nodeType":"VariableDeclaration","scope":9258,"src":"214:145:56","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"214:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"417574686f72697a6174696f6e2862797465732063616c6c646174612c616464726573732073656e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":9166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"276:77:56","typeDescriptions":{"typeIdentifier":"t_stringliteral_088e910861b9d0ac056c32bb5d44fcdd155bbfa025bdca87c7390e174ac61795","typeString":"literal_string \"Authorization(bytes calldata,address sender,uint256 nonce,uint256 deadline)\""},"value":"Authorization(bytes calldata,address sender,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_088e910861b9d0ac056c32bb5d44fcdd155bbfa025bdca87c7390e174ac61795","typeString":"literal_string \"Authorization(bytes calldata,address sender,uint256 nonce,uint256 deadline)\""}],"id":9165,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"257:9:56","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"257:102:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"anonymous":false,"id":9174,"name":"Authenticated","nodeType":"EventDefinition","parameters":{"id":9173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9170,"indexed":false,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9174,"src":"386:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9169,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9172,"indexed":false,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9174,"src":"400:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9171,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"385:30:56"},"src":"366:50:56"},{"anonymous":false,"id":9182,"name":"CalldataDecoded","nodeType":"EventDefinition","parameters":{"id":9181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9176,"indexed":false,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":9182,"src":"443:10:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9175,"name":"bytes","nodeType":"ElementaryTypeName","src":"443:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9178,"indexed":false,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":9182,"src":"455:16:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9177,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9180,"indexed":false,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":9182,"src":"473:15:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9179,"name":"bytes","nodeType":"ElementaryTypeName","src":"473:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"442:47:56"},"src":"421:69:56"},{"body":{"id":9189,"nodeType":"Block","src":"543:64:56","statements":[]},"id":9190,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c616e636572205632205661756c74","id":9185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"517:19:56","typeDescriptions":{"typeIdentifier":"t_stringliteral_546d0ab49c5920e3fe063e6971dd456a095183a2e20611f1b5815c7a1f43f069","typeString":"literal_string \"Balancer V2 Vault\""},"value":"Balancer V2 Vault"},{"hexValue":"31","id":9186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"538:3:56","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":9187,"modifierName":{"id":9184,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"510:6:56","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EIP712_$5956_$","typeString":"type(contract EIP712)"}},"nodeType":"ModifierInvocation","src":"510:32:56"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9183,"nodeType":"ParameterList","parameters":[],"src":"507:2:56"},"returnParameters":{"id":9188,"nodeType":"ParameterList","parameters":[],"src":"543:0:56"},"scope":9258,"src":"496:111:56","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9196,"nodeType":"Block","src":"648:34:56","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9193,"name":"_decodeCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"658:15:56","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"658:17:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9195,"nodeType":"ExpressionStatement","src":"658:17:56"}]},"functionSelector":"94df26d6","id":9197,"implemented":true,"kind":"function","modifiers":[],"name":"decodeCalldata","nodeType":"FunctionDefinition","parameters":{"id":9191,"nodeType":"ParameterList","parameters":[],"src":"636:2:56"},"returnParameters":{"id":9192,"nodeType":"ParameterList","parameters":[],"src":"648:0:56"},"scope":9258,"src":"613:69:56","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9217,"nodeType":"Block","src":"737:153:56","statements":[{"expression":{"arguments":[{"id":9203,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"779:4:56","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9204,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"785:6:56","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"785:24:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9202,"name":"_validateExtraCalldataSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"747:31:56","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"747:63:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9207,"nodeType":"ExpressionStatement","src":"747:63:56"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9208,"name":"_decodeCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"820:15:56","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"820:17:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9210,"nodeType":"ExpressionStatement","src":"820:17:56"},{"eventCall":{"arguments":[{"id":9212,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"866:4:56","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"872:3:56","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"872:10:56","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":9211,"name":"Authenticated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9174,"src":"852:13:56","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"852:31:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9216,"nodeType":"EmitStatement","src":"847:36:56"}]},"functionSelector":"25e51185","id":9218,"implemented":true,"kind":"function","modifiers":[],"name":"authenticateCall","nodeType":"FunctionDefinition","parameters":{"id":9200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9199,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9218,"src":"714:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9198,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:14:56"},"returnParameters":{"id":9201,"nodeType":"ParameterList","parameters":[],"src":"737:0:56"},"scope":9258,"src":"688:202:56","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9223,"nodeType":"Block","src":"944:29:56","statements":[]},"functionSelector":"78ea7ae7","id":9224,"implemented":true,"kind":"function","modifiers":[],"name":"anotherFunction","nodeType":"FunctionDefinition","parameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9224,"src":"921:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9219,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:14:56"},"returnParameters":{"id":9222,"nodeType":"ParameterList","parameters":[],"src":"944:0:56"},"scope":9258,"src":"896:77:56","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9234,"nodeType":"Block","src":"1025:35:56","statements":[{"expression":{"id":9232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1035:18:56","subExpression":{"baseExpression":{"id":9229,"name":"_nextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1035:10:56","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9231,"indexExpression":{"id":9230,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9226,"src":"1046:4:56","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1035:16:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9233,"nodeType":"ExpressionStatement","src":"1035:18:56"}]},"functionSelector":"8247a97c","id":9235,"implemented":true,"kind":"function","modifiers":[],"name":"increaseNonce","nodeType":"FunctionDefinition","parameters":{"id":9227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9226,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9235,"src":"1002:12:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9225,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1001:14:56"},"returnParameters":{"id":9228,"nodeType":"ParameterList","parameters":[],"src":"1025:0:56"},"scope":9258,"src":"979:81:56","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9247,"nodeType":"Block","src":"1102:77:56","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9239,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1133:9:56","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1133:11:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9241,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1146:9:56","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1146:11:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9243,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"1159:10:56","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1159:12:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9238,"name":"CalldataDecoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9182,"src":"1117:15:56","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory,uint256,bytes memory)"}},"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1117:55:56","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9246,"nodeType":"EmitStatement","src":"1112:60:56"}]},"id":9248,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeCalldata","nodeType":"FunctionDefinition","parameters":{"id":9236,"nodeType":"ParameterList","parameters":[],"src":"1090:2:56"},"returnParameters":{"id":9237,"nodeType":"ParameterList","parameters":[],"src":"1102:0:56"},"scope":9258,"src":"1066:113:56","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2233],"body":{"id":9256,"nodeType":"Block","src":"1257:38:56","statements":[{"expression":{"id":9254,"name":"AUTH_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9168,"src":"1274:14:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9253,"id":9255,"nodeType":"Return","src":"1267:21:56"}]},"id":9257,"implemented":true,"kind":"function","modifiers":[],"name":"_entrypointTypeHash","nodeType":"FunctionDefinition","overrides":{"id":9250,"nodeType":"OverrideSpecifier","overrides":[],"src":"1230:8:56"},"parameters":{"id":9249,"nodeType":"ParameterList","parameters":[],"src":"1213:2:56"},"returnParameters":{"id":9253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9252,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9257,"src":"1248:7:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1248:7:56","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1247:9:56"},"scope":9258,"src":"1185:110:56","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9259,"src":"120:1177:56"}],"src":"33:1265:56"},"id":56},"contracts/test/FixedPointMock.sol":{"ast":{"absolutePath":"contracts/test/FixedPointMock.sol","exportedSymbols":{"FixedPointMock":[9294]},"id":9295,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9260,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:57"},{"absolutePath":"contracts/math/FixedPoint.sol","file":"../math/FixedPoint.sol","id":9261,"nodeType":"ImportDirective","scope":9295,"sourceUnit":4021,"src":"713:32:57","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9294,"linearizedBaseContracts":[9294],"name":"FixedPointMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":9276,"nodeType":"Block","src":"846:48:57","statements":[{"expression":{"arguments":[{"id":9272,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"882:1:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9273,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"885:1:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9270,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"863:10:57","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":9271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"powDown","nodeType":"MemberAccess","referencedDeclaration":3940,"src":"863:18:57","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"863:24:57","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9269,"id":9275,"nodeType":"Return","src":"856:31:57"}]},"functionSelector":"44735d4f","id":9277,"implemented":true,"kind":"function","modifiers":[],"name":"powDown","nodeType":"FunctionDefinition","parameters":{"id":9266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9263,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":9277,"src":"794:9:57","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9262,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9265,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":9277,"src":"805:9:57","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9264,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"793:22:57"},"returnParameters":{"id":9269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9268,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9277,"src":"837:7:57","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9267,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"836:9:57"},"scope":9294,"src":"777:117:57","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":9292,"nodeType":"Block","src":"967:46:57","statements":[{"expression":{"arguments":[{"id":9288,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9279,"src":"1001:1:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9289,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9281,"src":"1004:1:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9286,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"984:10:57","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$4020_$","typeString":"type(library FixedPoint)"}},"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"powUp","nodeType":"MemberAccess","referencedDeclaration":4009,"src":"984:16:57","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"984:22:57","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9285,"id":9291,"nodeType":"Return","src":"977:29:57"}]},"functionSelector":"164c95d5","id":9293,"implemented":true,"kind":"function","modifiers":[],"name":"powUp","nodeType":"FunctionDefinition","parameters":{"id":9282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9279,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":9293,"src":"915:9:57","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9278,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9281,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":9293,"src":"926:9:57","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9280,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"914:22:57"},"returnParameters":{"id":9285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9284,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9293,"src":"958:7:57","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9283,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:57","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"957:9:57"},"scope":9294,"src":"900:113:57","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":9295,"src":"747:268:57"}],"src":"688:328:57"},"id":57},"contracts/test/LogExpMathMock.sol":{"ast":{"absolutePath":"contracts/test/LogExpMathMock.sol","exportedSymbols":{"LogExpMathMock":[9314]},"id":9315,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9296,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:58"},{"absolutePath":"contracts/math/LogExpMath.sol","file":"../math/LogExpMath.sol","id":9297,"nodeType":"ImportDirective","scope":9315,"sourceUnit":5319,"src":"713:32:58","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9314,"linearizedBaseContracts":[9314],"name":"LogExpMathMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":9312,"nodeType":"Block","src":"842:44:58","statements":[{"expression":{"arguments":[{"id":9308,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9299,"src":"874:1:58","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9309,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9301,"src":"877:1:58","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9306,"name":"LogExpMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"859:10:58","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LogExpMath_$5318_$","typeString":"type(library LogExpMath)"}},"id":9307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pow","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"859:14:58","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"859:20:58","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9305,"id":9311,"nodeType":"Return","src":"852:27:58"}]},"functionSelector":"2e4c697f","id":9313,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nodeType":"FunctionDefinition","parameters":{"id":9302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9299,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":9313,"src":"790:9:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9298,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:58","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9301,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":9313,"src":"801:9:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9300,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:58","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"789:22:58"},"returnParameters":{"id":9305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9304,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9313,"src":"833:7:58","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9303,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:58","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:9:58"},"scope":9314,"src":"777:109:58","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":9315,"src":"747:141:58"}],"src":"688:201:58"},"id":58},"contracts/test/MathMock.sol":{"ast":{"absolutePath":"contracts/test/MathMock.sol","exportedSymbols":{"MathMock":[9331]},"id":9332,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9316,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:59"},{"absolutePath":"contracts/math/Math.sol","file":"../math/Math.sol","id":9317,"nodeType":"ImportDirective","scope":9332,"sourceUnit":5590,"src":"713:26:59","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9331,"linearizedBaseContracts":[9331],"name":"MathMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":9329,"nodeType":"Block","src":"818:35:59","statements":[{"expression":{"arguments":[{"id":9326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9319,"src":"844:1:59","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":9324,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"835:4:59","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5589_$","typeString":"type(library Math)"}},"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5332,"src":"835:8:59","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":9327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"835:11:59","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9323,"id":9328,"nodeType":"Return","src":"828:18:59"}]},"functionSelector":"1b5ac4b5","id":9330,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":9320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9319,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":9330,"src":"778:8:59","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9318,"name":"int256","nodeType":"ElementaryTypeName","src":"778:6:59","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"777:10:59"},"returnParameters":{"id":9323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9322,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9330,"src":"809:7:59","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9321,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:59","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"808:9:59"},"scope":9331,"src":"765:88:59","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":9332,"src":"741:114:59"}],"src":"688:168:59"},"id":59},"contracts/test/MockBasicAuthorizer.sol":{"ast":{"absolutePath":"contracts/test/MockBasicAuthorizer.sol","exportedSymbols":{"MockBasicAuthorizer":[9577]},"id":9578,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9333,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:60"},{"id":9334,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"712:33:60"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol","id":9335,"nodeType":"ImportDirective","scope":9578,"sourceUnit":574,"src":"747:90:60","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol","id":9336,"nodeType":"ImportDirective","scope":9578,"sourceUnit":852,"src":"838:75:60","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/EnumerableSet.sol","file":"../openzeppelin/EnumerableSet.sol","id":9337,"nodeType":"ImportDirective","scope":9578,"sourceUnit":7837,"src":"915:43:60","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/InputHelpers.sol","file":"../helpers/InputHelpers.sol","id":9338,"nodeType":"ImportDirective","scope":9578,"sourceUnit":2427,"src":"959:37:60","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9339,"name":"IBasicAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":851,"src":"1030:16:60","typeDescriptions":{"typeIdentifier":"t_contract$_IBasicAuthorizer_$851","typeString":"contract IBasicAuthorizer"}},"id":9340,"nodeType":"InheritanceSpecifier","src":"1030:16:60"}],"contractDependencies":[817,851],"contractKind":"contract","fullyImplemented":true,"id":9577,"linearizedBaseContracts":[9577,851,817],"name":"MockBasicAuthorizer","nodeType":"ContractDefinition","nodes":[{"id":9343,"libraryName":{"id":9341,"name":"EnumerableSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7836,"src":"1059:13:60","typeDescriptions":{"typeIdentifier":"t_contract$_EnumerableSet_$7836","typeString":"library EnumerableSet"}},"nodeType":"UsingForDirective","src":"1053:49:60","typeName":{"id":9342,"name":"EnumerableSet.AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"1077:24:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"baseFunctions":[827],"constant":true,"functionSelector":"a217fddf","id":9347,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nodeType":"VariableDeclaration","overrides":{"id":9345,"nodeType":"OverrideSpecifier","overrides":[],"src":"1132:8:60"},"scope":9577,"src":"1108:58:60","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1108:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":9346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1162:4:60","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"MockBasicAuthorizer.RoleData","id":9352,"members":[{"constant":false,"id":9349,"mutability":"mutable","name":"members","nodeType":"VariableDeclaration","scope":9352,"src":"1199:32:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":9348,"name":"EnumerableSet.AddressSet","nodeType":"UserDefinedTypeName","referencedDeclaration":7395,"src":"1199:24:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":9351,"mutability":"mutable","name":"adminRole","nodeType":"VariableDeclaration","scope":9352,"src":"1241:17:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1241:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nodeType":"StructDefinition","scope":9577,"src":"1173:92:60","visibility":"public"},{"constant":false,"id":9356,"mutability":"mutable","name":"_roles","nodeType":"VariableDeclaration","scope":9577,"src":"1271:43:60","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData)"},"typeName":{"id":9355,"keyType":{"id":9353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1271:28:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData)"},"valueType":{"id":9354,"name":"RoleData","nodeType":"UserDefinedTypeName","referencedDeclaration":9352,"src":"1290:8:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage_ptr","typeString":"struct MockBasicAuthorizer.RoleData"}}},"visibility":"private"},{"body":{"id":9365,"nodeType":"Block","src":"1335:59:60","statements":[{"expression":{"arguments":[{"id":9360,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"1356:18:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1376:3:60","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1376:10:60","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":9359,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"1345:10:60","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":9363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1345:42:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9364,"nodeType":"ExpressionStatement","src":"1345:42:60"}]},"id":9366,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9357,"nodeType":"ParameterList","parameters":[],"src":"1332:2:60"},"returnParameters":{"id":9358,"nodeType":"ParameterList","parameters":[],"src":"1335:0:60"},"scope":9577,"src":"1321:73:60","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9383,"nodeType":"Block","src":"1475:62:60","statements":[{"expression":{"arguments":[{"id":9380,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9370,"src":"1522:7:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":9375,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"1492:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9377,"indexExpression":{"id":9376,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"1499:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1492:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":9349,"src":"1492:20:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7539,"src":"1492:29:60","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7395_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7395_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1492:38:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9374,"id":9382,"nodeType":"Return","src":"1485:45:60"}]},"functionSelector":"91d14854","id":9384,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nodeType":"FunctionDefinition","parameters":{"id":9371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9368,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9384,"src":"1417:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1417:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9370,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9384,"src":"1431:15:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9369,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1416:31:60"},"returnParameters":{"id":9374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9373,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9384,"src":"1469:4:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9372,"name":"bool","nodeType":"ElementaryTypeName","src":"1469:4:60","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1468:6:60"},"scope":9577,"src":"1400:137:60","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[816],"body":{"id":9401,"nodeType":"Block","src":"1675:50:60","statements":[{"expression":{"arguments":[{"id":9397,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"1700:8:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9398,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9388,"src":"1710:7:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9396,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"1692:7:60","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1692:26:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9395,"id":9400,"nodeType":"Return","src":"1685:33:60"}]},"functionSelector":"9be2a884","id":9402,"implemented":true,"kind":"function","modifiers":[],"name":"canPerform","nodeType":"FunctionDefinition","overrides":{"id":9392,"nodeType":"OverrideSpecifier","overrides":[],"src":"1651:8:60"},"parameters":{"id":9391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9386,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":9402,"src":"1572:16:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9388,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9402,"src":"1598:15:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9387,"name":"address","nodeType":"ElementaryTypeName","src":"1598:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9390,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9402,"src":"1623:7:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9389,"name":"address","nodeType":"ElementaryTypeName","src":"1623:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1562:74:60"},"returnParameters":{"id":9395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9394,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9402,"src":"1669:4:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9393,"name":"bool","nodeType":"ElementaryTypeName","src":"1669:4:60","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1668:6:60"},"scope":9577,"src":"1543:182:60","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[850],"body":{"id":9417,"nodeType":"Block","src":"1814:53:60","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":9410,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"1831:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9412,"indexExpression":{"id":9411,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9404,"src":"1838:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1831:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":9349,"src":"1831:20:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7552,"src":"1831:27:60","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7395_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$7395_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":9415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1831:29:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9409,"id":9416,"nodeType":"Return","src":"1824:36:60"}]},"functionSelector":"ca15c873","id":9418,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nodeType":"FunctionDefinition","overrides":{"id":9406,"nodeType":"OverrideSpecifier","overrides":[],"src":"1787:8:60"},"parameters":{"id":9405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9404,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9418,"src":"1759:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1759:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1758:14:60"},"returnParameters":{"id":9409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9408,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9418,"src":"1805:7:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1805:7:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1804:9:60"},"scope":9577,"src":"1731:136:60","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[843],"body":{"id":9436,"nodeType":"Block","src":"1966:54:60","statements":[{"expression":{"arguments":[{"id":9433,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"2007:5:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":9428,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"1983:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9430,"indexExpression":{"id":9429,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"1990:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1983:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":9349,"src":"1983:20:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7578,"src":"1983:23:60","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7395_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$7395_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1983:30:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9427,"id":9435,"nodeType":"Return","src":"1976:37:60"}]},"functionSelector":"9010d07c","id":9437,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nodeType":"FunctionDefinition","overrides":{"id":9424,"nodeType":"OverrideSpecifier","overrides":[],"src":"1939:8:60"},"parameters":{"id":9423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9420,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9437,"src":"1896:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9422,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":9437,"src":"1910:13:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1895:29:60"},"returnParameters":{"id":9427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9426,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9437,"src":"1957:7:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9425,"name":"address","nodeType":"ElementaryTypeName","src":"1957:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1956:9:60"},"scope":9577,"src":"1873:147:60","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[834],"body":{"id":9450,"nodeType":"Block","src":"2103:46:60","statements":[{"expression":{"expression":{"baseExpression":{"id":9445,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"2120:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9447,"indexExpression":{"id":9446,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9439,"src":"2127:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2120:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":9351,"src":"2120:22:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9444,"id":9449,"nodeType":"Return","src":"2113:29:60"}]},"functionSelector":"248a9ca3","id":9451,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nodeType":"FunctionDefinition","overrides":{"id":9441,"nodeType":"OverrideSpecifier","overrides":[],"src":"2076:8:60"},"parameters":{"id":9440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9439,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9451,"src":"2048:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2048:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2047:14:60"},"returnParameters":{"id":9444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9443,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9451,"src":"2094:7:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2094:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2093:9:60"},"scope":9577,"src":"2026:123:60","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9491,"nodeType":"Block","src":"2241:192:60","statements":[{"expression":{"arguments":[{"expression":{"id":9463,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"2287:5:60","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2287:12:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9465,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9457,"src":"2301:8:60","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2301:15:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9460,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"2251:12:60","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$2426_$","typeString":"type(library InputHelpers)"}},"id":9462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"2251:35:60","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2251:66:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9468,"nodeType":"ExpressionStatement","src":"2251:66:60"},{"body":{"id":9489,"nodeType":"Block","src":"2370:57:60","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9481,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"2394:5:60","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9483,"indexExpression":{"id":9482,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"2400:1:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2394:8:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":9484,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9457,"src":"2404:8:60","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9486,"indexExpression":{"id":9485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"2413:1:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2404:11:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9480,"name":"grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9518,"src":"2384:9:60","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":9487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2384:32:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9488,"nodeType":"ExpressionStatement","src":"2384:32:60"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"2347:1:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9474,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"2351:5:60","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":9475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2351:12:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2347:16:60","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9490,"initializationExpression":{"assignments":[9470],"declarations":[{"constant":false,"id":9470,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":9490,"src":"2332:9:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9472,"initialValue":{"hexValue":"30","id":9471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2344:1:60","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2332:13:60"},"loopExpression":{"expression":{"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2365:3:60","subExpression":{"id":9477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"2365:1:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9479,"nodeType":"ExpressionStatement","src":"2365:3:60"},"nodeType":"ForStatement","src":"2327:100:60"}]},"functionSelector":"a73cb2ab","id":9492,"implemented":true,"kind":"function","modifiers":[],"name":"grantRolesToMany","nodeType":"FunctionDefinition","parameters":{"id":9458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9454,"mutability":"mutable","name":"roles","nodeType":"VariableDeclaration","scope":9492,"src":"2181:22:60","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2181:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9453,"nodeType":"ArrayTypeName","src":"2181:9:60","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9457,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","scope":9492,"src":"2205:25:60","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9455,"name":"address","nodeType":"ElementaryTypeName","src":"2205:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9456,"nodeType":"ArrayTypeName","src":"2205:9:60","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2180:51:60"},"returnParameters":{"id":9459,"nodeType":"ParameterList","parameters":[],"src":"2241:0:60"},"scope":9577,"src":"2155:278:60","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9517,"nodeType":"Block","src":"2496:136:60","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":9501,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"2523:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9503,"indexExpression":{"id":9502,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"2530:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2523:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":9351,"src":"2523:22:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9505,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2547:3:60","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2547:10:60","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":9500,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"2515:7:60","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2515:43:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":9508,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2560:6:60","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"GRANT_SENDER_NOT_ADMIN","nodeType":"MemberAccess","referencedDeclaration":398,"src":"2560:29:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9499,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2506:8:60","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":9510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2506:84:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9511,"nodeType":"ExpressionStatement","src":"2506:84:60"},{"expression":{"arguments":[{"id":9513,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"2611:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9514,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"2617:7:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9512,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9560,"src":"2600:10:60","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2600:25:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9516,"nodeType":"ExpressionStatement","src":"2600:25:60"}]},"functionSelector":"2f2ff15d","id":9518,"implemented":true,"kind":"function","modifiers":[],"name":"grantRole","nodeType":"FunctionDefinition","parameters":{"id":9497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9494,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9518,"src":"2458:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2458:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9496,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9518,"src":"2472:15:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9495,"name":"address","nodeType":"ElementaryTypeName","src":"2472:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2457:31:60"},"returnParameters":{"id":9498,"nodeType":"ParameterList","parameters":[],"src":"2496:0:60"},"scope":9577,"src":"2439:193:60","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9543,"nodeType":"Block","src":"2704:139:60","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":9527,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"2731:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9529,"indexExpression":{"id":9528,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9520,"src":"2738:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2731:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":9351,"src":"2731:22:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2755:3:60","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2755:10:60","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":9526,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9384,"src":"2723:7:60","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2723:43:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":9534,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"2768:6:60","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"REVOKE_SENDER_NOT_ADMIN","nodeType":"MemberAccess","referencedDeclaration":401,"src":"2768:30:60","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9525,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[17,36],"referencedDeclaration":17,"src":"2714:8:60","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2714:85:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9537,"nodeType":"ExpressionStatement","src":"2714:85:60"},{"expression":{"arguments":[{"id":9539,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9520,"src":"2822:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9540,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"2828:7:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9538,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9576,"src":"2810:11:60","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:26:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9542,"nodeType":"ExpressionStatement","src":"2810:26:60"}]},"functionSelector":"d547741f","id":9544,"implemented":true,"kind":"function","modifiers":[],"name":"revokeRole","nodeType":"FunctionDefinition","parameters":{"id":9523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9520,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9544,"src":"2658:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2658:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9522,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9544,"src":"2672:15:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9521,"name":"address","nodeType":"ElementaryTypeName","src":"2672:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2657:31:60"},"returnParameters":{"id":9524,"nodeType":"ParameterList","parameters":[],"src":"2704:0:60"},"scope":9577,"src":"2638:205:60","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":9559,"nodeType":"Block","src":"2908:50:60","statements":[{"expression":{"arguments":[{"id":9556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"2943:7:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":9551,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"2918:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9553,"indexExpression":{"id":9552,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9546,"src":"2925:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2918:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":9349,"src":"2918:20:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7436,"src":"2918:24:60","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7395_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7395_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":9557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2918:33:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9558,"nodeType":"ExpressionStatement","src":"2918:33:60"}]},"id":9560,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nodeType":"FunctionDefinition","parameters":{"id":9549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9546,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9560,"src":"2869:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2869:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9548,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9560,"src":"2883:15:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9547,"name":"address","nodeType":"ElementaryTypeName","src":"2883:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2868:31:60"},"returnParameters":{"id":9550,"nodeType":"ParameterList","parameters":[],"src":"2908:0:60"},"scope":9577,"src":"2849:109:60","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9575,"nodeType":"Block","src":"3024:53:60","statements":[{"expression":{"arguments":[{"id":9572,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9564,"src":"3062:7:60","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":9567,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"3034:6:60","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$9352_storage_$","typeString":"mapping(bytes32 => struct MockBasicAuthorizer.RoleData storage ref)"}},"id":9569,"indexExpression":{"id":9568,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"3041:4:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3034:12:60","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$9352_storage","typeString":"struct MockBasicAuthorizer.RoleData storage ref"}},"id":9570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":9349,"src":"3034:20:60","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7395_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":9571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7521,"src":"3034:27:60","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7395_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$7395_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":9573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3034:36:60","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9574,"nodeType":"ExpressionStatement","src":"3034:36:60"}]},"id":9576,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nodeType":"FunctionDefinition","parameters":{"id":9565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9562,"mutability":"mutable","name":"role","nodeType":"VariableDeclaration","scope":9576,"src":"2985:12:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2985:7:60","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9564,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9576,"src":"2999:15:60","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9563,"name":"address","nodeType":"ElementaryTypeName","src":"2999:7:60","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2984:31:60"},"returnParameters":{"id":9566,"nodeType":"ParameterList","parameters":[],"src":"3024:0:60"},"scope":9577,"src":"2964:113:60","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":9578,"src":"998:2081:60"}],"src":"688:2392:60"},"id":60},"contracts/test/MockScalingHelpers.sol":{"ast":{"absolutePath":"contracts/test/MockScalingHelpers.sol","exportedSymbols":{"MockScalingHelpers":[9687]},"id":9688,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9579,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:61"},{"id":9580,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"712:33:61"},{"absolutePath":"contracts/helpers/ScalingHelpers.sol","file":"../helpers/ScalingHelpers.sol","id":9581,"nodeType":"ImportDirective","scope":9688,"sourceUnit":2801,"src":"747:39:61","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9687,"linearizedBaseContracts":[9687],"name":"MockScalingHelpers","nodeType":"ContractDefinition","nodes":[{"body":{"id":9595,"nodeType":"Block","src":"910:55:61","statements":[{"expression":{"arguments":[{"id":9591,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9583,"src":"936:6:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9592,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9585,"src":"944:13:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9590,"name":"_upscale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"927:8:61","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"927:31:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9589,"id":9594,"nodeType":"Return","src":"920:38:61"}]},"functionSelector":"13c809d4","id":9596,"implemented":true,"kind":"function","modifiers":[],"name":"upscale","nodeType":"FunctionDefinition","parameters":{"id":9586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9583,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9596,"src":"839:14:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9582,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9585,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":9596,"src":"855:21:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9584,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"838:39:61"},"returnParameters":{"id":9589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9588,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9596,"src":"901:7:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9587,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"900:9:61"},"scope":9687,"src":"822:143:61","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9615,"nodeType":"Block","src":"1121:79:61","statements":[{"expression":{"arguments":[{"id":9609,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9599,"src":"1145:7:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9610,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9602,"src":"1154:14:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":9608,"name":"_upscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1131:13:61","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) pure"}},"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:38:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9612,"nodeType":"ExpressionStatement","src":"1131:38:61"},{"expression":{"id":9613,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9599,"src":"1186:7:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":9607,"id":9614,"nodeType":"Return","src":"1179:14:61"}]},"functionSelector":"51d7f8e7","id":9616,"implemented":true,"kind":"function","modifiers":[],"name":"upscaleArray","nodeType":"FunctionDefinition","parameters":{"id":9603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9599,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":9616,"src":"993:24:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9597,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9598,"nodeType":"ArrayTypeName","src":"993:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9602,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":9616,"src":"1019:31:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9601,"nodeType":"ArrayTypeName","src":"1019:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"992:59:61"},"returnParameters":{"id":9607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9606,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9616,"src":"1099:16:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9605,"nodeType":"ArrayTypeName","src":"1099:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1098:18:61"},"scope":9687,"src":"971:229:61","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9630,"nodeType":"Block","src":"1300:61:61","statements":[{"expression":{"arguments":[{"id":9626,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"1332:6:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9627,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9620,"src":"1340:13:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9625,"name":"_downscaleDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"1317:14:61","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1317:37:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9624,"id":9629,"nodeType":"Return","src":"1310:44:61"}]},"functionSelector":"8f26f906","id":9631,"implemented":true,"kind":"function","modifiers":[],"name":"downscaleDown","nodeType":"FunctionDefinition","parameters":{"id":9621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9618,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9631,"src":"1229:14:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9620,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":9631,"src":"1245:21:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:39:61"},"returnParameters":{"id":9624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9623,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9631,"src":"1291:7:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:9:61"},"scope":9687,"src":"1206:155:61","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9650,"nodeType":"Block","src":"1523:85:61","statements":[{"expression":{"arguments":[{"id":9644,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9634,"src":"1553:7:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9645,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"1562:14:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":9643,"name":"_downscaleDownArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"1533:19:61","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) pure"}},"id":9646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1533:44:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9647,"nodeType":"ExpressionStatement","src":"1533:44:61"},{"expression":{"id":9648,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9634,"src":"1594:7:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":9642,"id":9649,"nodeType":"Return","src":"1587:14:61"}]},"functionSelector":"2659f004","id":9651,"implemented":true,"kind":"function","modifiers":[],"name":"downscaleDownArray","nodeType":"FunctionDefinition","parameters":{"id":9638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9634,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":9651,"src":"1395:24:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1395:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9633,"nodeType":"ArrayTypeName","src":"1395:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9637,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":9651,"src":"1421:31:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9636,"nodeType":"ArrayTypeName","src":"1421:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1394:59:61"},"returnParameters":{"id":9642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9641,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9651,"src":"1501:16:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9640,"nodeType":"ArrayTypeName","src":"1501:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1500:18:61"},"scope":9687,"src":"1367:241:61","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9665,"nodeType":"Block","src":"1706:59:61","statements":[{"expression":{"arguments":[{"id":9661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"1736:6:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9662,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9655,"src":"1744:13:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9660,"name":"_downscaleUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"1723:12:61","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1723:35:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9659,"id":9664,"nodeType":"Return","src":"1716:42:61"}]},"functionSelector":"74cd2c44","id":9666,"implemented":true,"kind":"function","modifiers":[],"name":"downscaleUp","nodeType":"FunctionDefinition","parameters":{"id":9656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9653,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9666,"src":"1635:14:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1635:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9655,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":9666,"src":"1651:21:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1651:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1634:39:61"},"returnParameters":{"id":9659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9658,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9666,"src":"1697:7:61","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:9:61"},"scope":9687,"src":"1614:151:61","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9685,"nodeType":"Block","src":"1925:83:61","statements":[{"expression":{"arguments":[{"id":9679,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"1953:7:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9680,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"1962:14:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":9678,"name":"_downscaleUpArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"1935:17:61","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) pure"}},"id":9681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1935:42:61","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9682,"nodeType":"ExpressionStatement","src":"1935:42:61"},{"expression":{"id":9683,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"1994:7:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":9677,"id":9684,"nodeType":"Return","src":"1987:14:61"}]},"functionSelector":"4f547360","id":9686,"implemented":true,"kind":"function","modifiers":[],"name":"downscaleUpArray","nodeType":"FunctionDefinition","parameters":{"id":9673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9669,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":9686,"src":"1797:24:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9668,"nodeType":"ArrayTypeName","src":"1797:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9672,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":9686,"src":"1823:31:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1823:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9671,"nodeType":"ArrayTypeName","src":"1823:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1796:59:61"},"returnParameters":{"id":9677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9676,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9686,"src":"1903:16:61","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:61","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9675,"nodeType":"ArrayTypeName","src":"1903:9:61","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1902:18:61"},"scope":9687,"src":"1771:237:61","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":9688,"src":"788:1222:61"}],"src":"688:1323:61"},"id":61},"contracts/test/MockSplitCodeFactory.sol":{"ast":{"absolutePath":"contracts/test/MockSplitCodeFactory.sol","exportedSymbols":{"MockFactoryCreatedContract":[9718],"MockSplitCodeFactory":[9761]},"id":9762,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9689,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:62"},{"absolutePath":"contracts/helpers/BaseSplitCodeFactory.sol","file":"../helpers/BaseSplitCodeFactory.sol","id":9690,"nodeType":"ImportDirective","scope":9762,"sourceUnit":1738,"src":"713:45:62","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9718,"linearizedBaseContracts":[9718],"name":"MockFactoryCreatedContract","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9692,"mutability":"mutable","name":"_id","nodeType":"VariableDeclaration","scope":9718,"src":"802:19:62","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"802:7:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":9708,"nodeType":"Block","src":"852:66:62","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9698,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9694,"src":"870:2:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:1:62","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"870:7:62","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4f4e5f5a45524f5f4944","id":9701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"879:13:62","typeDescriptions":{"typeIdentifier":"t_stringliteral_e15f350c5e30267c45eb8628f73f3cda54198c840e41e84dbb1e385a5a17e9c3","typeString":"literal_string \"NON_ZERO_ID\""},"value":"NON_ZERO_ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e15f350c5e30267c45eb8628f73f3cda54198c840e41e84dbb1e385a5a17e9c3","typeString":"literal_string \"NON_ZERO_ID\""}],"id":9697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"862:7:62","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"862:31:62","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9703,"nodeType":"ExpressionStatement","src":"862:31:62"},{"expression":{"id":9706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9704,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"903:3:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9705,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9694,"src":"909:2:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"903:8:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9707,"nodeType":"ExpressionStatement","src":"903:8:62"}]},"id":9709,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9694,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":9709,"src":"840:10:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:12:62"},"returnParameters":{"id":9696,"nodeType":"ParameterList","parameters":[],"src":"852:0:62"},"scope":9718,"src":"828:90:62","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9716,"nodeType":"Block","src":"973:27:62","statements":[{"expression":{"id":9714,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"990:3:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9713,"id":9715,"nodeType":"Return","src":"983:10:62"}]},"functionSelector":"5d1ca631","id":9717,"implemented":true,"kind":"function","modifiers":[],"name":"getId","nodeType":"FunctionDefinition","parameters":{"id":9710,"nodeType":"ParameterList","parameters":[],"src":"938:2:62"},"returnParameters":{"id":9713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9712,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9717,"src":"964:7:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"964:7:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"963:9:62"},"scope":9718,"src":"924:76:62","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9762,"src":"760:242:62"},{"abstract":false,"baseContracts":[{"baseName":{"id":9719,"name":"BaseSplitCodeFactory","nodeType":"UserDefinedTypeName","referencedDeclaration":1737,"src":"1037:20:62","typeDescriptions":{"typeIdentifier":"t_contract$_BaseSplitCodeFactory_$1737","typeString":"contract BaseSplitCodeFactory"}},"id":9720,"nodeType":"InheritanceSpecifier","src":"1037:20:62"}],"contractDependencies":[1737,9718],"contractKind":"contract","fullyImplemented":true,"id":9761,"linearizedBaseContracts":[9761,1737],"name":"MockSplitCodeFactory","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":9724,"name":"ContractCreated","nodeType":"EventDefinition","parameters":{"id":9723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9722,"indexed":false,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":9724,"src":"1086:19:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9721,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:62","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1085:21:62"},"src":"1064:43:62"},{"body":{"id":9733,"nodeType":"Block","src":"1195:64:62","statements":[]},"id":9734,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"arguments":[{"id":9728,"name":"MockFactoryCreatedContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9718,"src":"1153:26:62","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MockFactoryCreatedContract_$9718_$","typeString":"type(contract MockFactoryCreatedContract)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_MockFactoryCreatedContract_$9718_$","typeString":"type(contract MockFactoryCreatedContract)"}],"id":9727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1148:4:62","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1148:32:62","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_MockFactoryCreatedContract_$9718","typeString":"type(contract MockFactoryCreatedContract)"}},"id":9730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"creationCode","nodeType":"MemberAccess","src":"1148:45:62","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":9731,"modifierName":{"id":9726,"name":"BaseSplitCodeFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"1127:20:62","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaseSplitCodeFactory_$1737_$","typeString":"type(contract BaseSplitCodeFactory)"}},"nodeType":"ModifierInvocation","src":"1127:67:62"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9725,"nodeType":"ParameterList","parameters":[],"src":"1124:2:62"},"returnParameters":{"id":9732,"nodeType":"ParameterList","parameters":[],"src":"1195:0:62"},"scope":9761,"src":"1113:146:62","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9759,"nodeType":"Block","src":"1334:140:62","statements":[{"assignments":[9744],"declarations":[{"constant":false,"id":9744,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":9759,"src":"1344:19:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9743,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:62","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9752,"initialValue":{"arguments":[{"arguments":[{"id":9748,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"1385:2:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1374:3:62","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1374:10:62","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1374:14:62","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9750,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9738,"src":"1390:4:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9745,"name":"_create","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"1366:7:62","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes memory,bytes32) returns (address)"}},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:29:62","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1344:51:62"},{"eventCall":{"arguments":[{"id":9754,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9744,"src":"1426:11:62","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9753,"name":"ContractCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9724,"src":"1410:15:62","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1410:28:62","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9756,"nodeType":"EmitStatement","src":"1405:33:62"},{"expression":{"id":9757,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9744,"src":"1456:11:62","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9742,"id":9758,"nodeType":"Return","src":"1449:18:62"}]},"functionSelector":"634bc7db","id":9760,"implemented":true,"kind":"function","modifiers":[],"name":"create","nodeType":"FunctionDefinition","parameters":{"id":9739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9736,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":9760,"src":"1281:10:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1281:7:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9738,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":9760,"src":"1293:12:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1293:7:62","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1280:26:62"},"returnParameters":{"id":9742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9741,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9760,"src":"1325:7:62","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9740,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:62","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1324:9:62"},"scope":9761,"src":"1265:209:62","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9762,"src":"1004:472:62"}],"src":"688:789:62"},"id":62},"contracts/test/MockWordCodec.sol":{"ast":{"absolutePath":"contracts/test/MockWordCodec.sol","exportedSymbols":{"MockWordCodec":[9927]},"id":9928,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9763,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:63"},{"absolutePath":"contracts/helpers/WordCodec.sol","file":"../helpers/WordCodec.sol","id":9764,"nodeType":"ImportDirective","scope":9928,"sourceUnit":3569,"src":"713:34:63","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/WordCodecHelpers.sol","file":"../helpers/WordCodecHelpers.sol","id":9765,"nodeType":"ImportDirective","scope":9928,"sourceUnit":3643,"src":"748:41:63","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9927,"linearizedBaseContracts":[9927],"name":"MockWordCodec","nodeType":"ContractDefinition","nodes":[{"body":{"id":9786,"nodeType":"Block","src":"974:76:63","statements":[{"expression":{"arguments":[{"id":9780,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9767,"src":"1012:4:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"1018:5:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9782,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9771,"src":"1025:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9783,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"1033:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9778,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"991:9:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$3568_$","typeString":"type(library WordCodec)"}},"id":9779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"insertUint","nodeType":"MemberAccess","referencedDeclaration":3184,"src":"991:20:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256,uint256,uint256) pure returns (bytes32)"}},"id":9784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:52:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9777,"id":9785,"nodeType":"Return","src":"984:59:63"}]},"functionSelector":"4cf60a71","id":9787,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint","nodeType":"FunctionDefinition","parameters":{"id":9774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9767,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":9787,"src":"849:12:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"849:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9769,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9787,"src":"871:13:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9768,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9771,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9787,"src":"894:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9770,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9773,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9787,"src":"918:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9772,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"839:102:63"},"returnParameters":{"id":9777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9776,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9787,"src":"965:7:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"965:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"964:9:63"},"scope":9927,"src":"820:230:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9808,"nodeType":"Block","src":"1208:75:63","statements":[{"expression":{"arguments":[{"id":9802,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"1245:4:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9791,"src":"1251:5:63","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9804,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9793,"src":"1258:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9805,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9795,"src":"1266:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9800,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"1225:9:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$3568_$","typeString":"type(library WordCodec)"}},"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"insertInt","nodeType":"MemberAccess","referencedDeclaration":3245,"src":"1225:19:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_int256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,int256,uint256,uint256) pure returns (bytes32)"}},"id":9806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1225:51:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9799,"id":9807,"nodeType":"Return","src":"1218:58:63"}]},"functionSelector":"a427ee1e","id":9809,"implemented":true,"kind":"function","modifiers":[],"name":"insertInt","nodeType":"FunctionDefinition","parameters":{"id":9796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9789,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":9809,"src":"1084:12:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1084:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9791,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9809,"src":"1106:12:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9790,"name":"int256","nodeType":"ElementaryTypeName","src":"1106:6:63","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9793,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9809,"src":"1128:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1128:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9795,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9809,"src":"1152:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:101:63"},"returnParameters":{"id":9799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9798,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9809,"src":"1199:7:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1199:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1198:9:63"},"scope":9927,"src":"1056:227:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9827,"nodeType":"Block","src":"1421:70:63","statements":[{"expression":{"arguments":[{"id":9822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9811,"src":"1459:5:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9823,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9813,"src":"1466:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9824,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"1474:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9820,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"1438:9:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$3568_$","typeString":"type(library WordCodec)"}},"id":9821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeUint","nodeType":"MemberAccess","referencedDeclaration":3271,"src":"1438:20:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes32)"}},"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1438:46:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9819,"id":9826,"nodeType":"Return","src":"1431:53:63"}]},"functionSelector":"9223250a","id":9828,"implemented":true,"kind":"function","modifiers":[],"name":"encodeUint","nodeType":"FunctionDefinition","parameters":{"id":9816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9811,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9828,"src":"1318:13:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9813,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9828,"src":"1341:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9815,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9828,"src":"1365:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:80:63"},"returnParameters":{"id":9819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9818,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9828,"src":"1412:7:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1412:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1411:9:63"},"scope":9927,"src":"1289:202:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9846,"nodeType":"Block","src":"1627:69:63","statements":[{"expression":{"arguments":[{"id":9841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1664:5:63","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9842,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9832,"src":"1671:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9843,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"1679:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9839,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"1644:9:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$3568_$","typeString":"type(library WordCodec)"}},"id":9840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeInt","nodeType":"MemberAccess","referencedDeclaration":3312,"src":"1644:19:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (int256,uint256,uint256) pure returns (bytes32)"}},"id":9844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1644:45:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9838,"id":9845,"nodeType":"Return","src":"1637:52:63"}]},"functionSelector":"37b1cd81","id":9847,"implemented":true,"kind":"function","modifiers":[],"name":"encodeInt","nodeType":"FunctionDefinition","parameters":{"id":9835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9830,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9847,"src":"1525:12:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9829,"name":"int256","nodeType":"ElementaryTypeName","src":"1525:6:63","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9832,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9847,"src":"1547:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9834,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9847,"src":"1571:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1515:79:63"},"returnParameters":{"id":9838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9837,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9847,"src":"1618:7:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1618:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1617:9:63"},"scope":9927,"src":"1497:199:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9865,"nodeType":"Block","src":"1834:70:63","statements":[{"expression":{"arguments":[{"id":9860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9849,"src":"1872:5:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9861,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9851,"src":"1879:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9862,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"1887:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9858,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"1851:9:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$3568_$","typeString":"type(library WordCodec)"}},"id":9859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint","nodeType":"MemberAccess","referencedDeclaration":3326,"src":"1851:20:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256,uint256) pure returns (uint256)"}},"id":9863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1851:46:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9857,"id":9864,"nodeType":"Return","src":"1844:53:63"}]},"functionSelector":"1bbdab7f","id":9866,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint","nodeType":"FunctionDefinition","parameters":{"id":9854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9849,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9866,"src":"1731:13:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1731:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9851,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9866,"src":"1754:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9853,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9866,"src":"1778:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1721:80:63"},"returnParameters":{"id":9857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9856,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9866,"src":"1825:7:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1825:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1824:9:63"},"scope":9927,"src":"1702:202:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9884,"nodeType":"Block","src":"2040:69:63","statements":[{"expression":{"arguments":[{"id":9879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9868,"src":"2077:5:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9880,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9870,"src":"2084:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9881,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9872,"src":"2092:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9877,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2057:9:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$3568_$","typeString":"type(library WordCodec)"}},"id":9878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeInt","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"2057:19:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (bytes32,uint256,uint256) pure returns (int256)"}},"id":9882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2057:45:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9876,"id":9883,"nodeType":"Return","src":"2050:52:63"}]},"functionSelector":"2393cb9e","id":9885,"implemented":true,"kind":"function","modifiers":[],"name":"decodeInt","nodeType":"FunctionDefinition","parameters":{"id":9873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9868,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9885,"src":"1938:13:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9870,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9885,"src":"1961:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9872,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9885,"src":"1985:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1985:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1928:80:63"},"returnParameters":{"id":9876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9875,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9885,"src":"2032:6:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9874,"name":"int256","nodeType":"ElementaryTypeName","src":"2032:6:63","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2031:8:63"},"scope":9927,"src":"1910:199:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9903,"nodeType":"Block","src":"2255:85:63","statements":[{"expression":{"arguments":[{"id":9898,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9887,"src":"2309:4:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9899,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9889,"src":"2315:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9900,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"2323:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9896,"name":"WordCodecHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"2272:16:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodecHelpers_$3642_$","typeString":"type(library WordCodecHelpers)"}},"id":9897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clearWordAtPosition","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"2272:36:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256,uint256) pure returns (bytes32)"}},"id":9901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2272:61:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":9895,"id":9902,"nodeType":"Return","src":"2265:68:63"}]},"functionSelector":"4efc6d6f","id":9904,"implemented":true,"kind":"function","modifiers":[],"name":"clearWordAtPosition","nodeType":"FunctionDefinition","parameters":{"id":9892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9887,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":9904,"src":"2153:12:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9889,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9904,"src":"2175:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9891,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9904,"src":"2199:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2143:79:63"},"returnParameters":{"id":9895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9894,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9904,"src":"2246:7:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2246:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2245:9:63"},"scope":9927,"src":"2115:225:63","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":9925,"nodeType":"Block","src":"2523:109:63","statements":[{"expression":{"arguments":[{"id":9919,"name":"oldPoolState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9906,"src":"2579:12:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9920,"name":"newPoolState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9908,"src":"2593:12:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9921,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"2607:6:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9922,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"2615:9:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9917,"name":"WordCodecHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"2540:16:63","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodecHelpers_$3642_$","typeString":"type(library WordCodecHelpers)"}},"id":9918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isOtherStateUnchanged","nodeType":"MemberAccess","referencedDeclaration":3641,"src":"2540:38:63","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,bytes32,uint256,uint256) pure returns (bool)"}},"id":9923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2540:85:63","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9916,"id":9924,"nodeType":"Return","src":"2533:92:63"}]},"functionSelector":"ab2d3f47","id":9926,"implemented":true,"kind":"function","modifiers":[],"name":"isOtherStateUnchanged","nodeType":"FunctionDefinition","parameters":{"id":9913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9906,"mutability":"mutable","name":"oldPoolState","nodeType":"VariableDeclaration","scope":9926,"src":"2386:20:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2386:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9908,"mutability":"mutable","name":"newPoolState","nodeType":"VariableDeclaration","scope":9926,"src":"2416:20:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2416:7:63","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9910,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9926,"src":"2446:14:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9909,"name":"uint256","nodeType":"ElementaryTypeName","src":"2446:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9912,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":9926,"src":"2470:17:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:63","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2376:117:63"},"returnParameters":{"id":9916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9915,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9926,"src":"2517:4:63","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9914,"name":"bool","nodeType":"ElementaryTypeName","src":"2517:4:63","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2516:6:63"},"scope":9927,"src":"2346:286:63","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":9928,"src":"791:1843:63"}],"src":"688:1947:63"},"id":63},"contracts/test/OptionalOnlyCallerMock.sol":{"ast":{"absolutePath":"contracts/test/OptionalOnlyCallerMock.sol","exportedSymbols":{"OptionalOnlyCallerMock":[9956]},"id":9957,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":9929,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:64"},{"absolutePath":"contracts/helpers/OptionalOnlyCaller.sol","file":"../helpers/OptionalOnlyCaller.sol","id":9930,"nodeType":"ImportDirective","scope":9957,"sourceUnit":2560,"src":"713:43:64","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9932,"name":"OptionalOnlyCaller","nodeType":"UserDefinedTypeName","referencedDeclaration":2559,"src":"970:18:64","typeDescriptions":{"typeIdentifier":"t_contract$_OptionalOnlyCaller_$2559","typeString":"contract OptionalOnlyCaller"}},"id":9933,"nodeType":"InheritanceSpecifier","src":"970:18:64"}],"contractDependencies":[618,636,1958,2559,2850,5956],"contractKind":"contract","documentation":{"id":9931,"nodeType":"StructuredDocumentation","src":"758:176:64","text":" @dev Mock with an external method that affects an address.\n The user can opt in to a verification, so that the method becomes callable\n only by their address."},"fullyImplemented":true,"id":9956,"linearizedBaseContracts":[9956,2559,2850,1958,5956,636,618],"name":"OptionalOnlyCallerMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":9940,"nodeType":"Block","src":"1047:2:64","statements":[]},"id":9941,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f7074696f6e616c4f6e6c7943616c6c65724d6f636b","id":9936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1016:24:64","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2054c63835e632f6e1e5d539e484e40b4adeca34d185fd25083b868e71ae8cd","typeString":"literal_string \"OptionalOnlyCallerMock\""},"value":"OptionalOnlyCallerMock"},{"hexValue":"31","id":9937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1042:3:64","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":9938,"modifierName":{"id":9935,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"1009:6:64","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EIP712_$5956_$","typeString":"type(contract EIP712)"}},"nodeType":"ModifierInvocation","src":"1009:37:64"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9934,"nodeType":"ParameterList","parameters":[],"src":"1006:2:64"},"returnParameters":{"id":9939,"nodeType":"ParameterList","parameters":[],"src":"1047:0:64"},"scope":9956,"src":"995:54:64","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"id":9943,"name":"CheckFunctionCalled","nodeType":"EventDefinition","parameters":{"id":9942,"nodeType":"ParameterList","parameters":[],"src":"1080:2:64"},"src":"1055:28:64"},{"body":{"id":9954,"nodeType":"Block","src":"1160:43:64","statements":[{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9951,"name":"CheckFunctionCalled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9943,"src":"1175:19:64","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1175:21:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9953,"nodeType":"EmitStatement","src":"1170:26:64"}]},"functionSelector":"50898bb0","id":9955,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9948,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9945,"src":"1154:4:64","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9949,"modifierName":{"id":9947,"name":"optionalOnlyCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"1135:18:64","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"1135:24:64"}],"name":"checkFunction","nodeType":"FunctionDefinition","parameters":{"id":9946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9945,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9955,"src":"1112:12:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9944,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:64","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1111:14:64"},"returnParameters":{"id":9950,"nodeType":"ParameterList","parameters":[],"src":"1160:0:64"},"scope":9956,"src":"1089:114:64","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9957,"src":"935:270:64"}],"src":"688:518:64"},"id":64},"contracts/test/ReentrancyAttack.sol":{"ast":{"absolutePath":"contracts/test/ReentrancyAttack.sol","exportedSymbols":{"ReentrancyAttack":[9981]},"id":9982,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9958,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:65"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9981,"linearizedBaseContracts":[9981],"name":"ReentrancyAttack","nodeType":"ContractDefinition","nodes":[{"body":{"id":9979,"nodeType":"Block","src":"138:187:65","statements":[{"assignments":[9964,null],"declarations":[{"constant":false,"id":9964,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":9979,"src":"208:12:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9963,"name":"bool","nodeType":"ElementaryTypeName","src":"208:4:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9973,"initialValue":{"arguments":[{"arguments":[{"id":9970,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"265:4:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9968,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"242:3:65","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"242:22:65","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":9971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"242:28:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":9965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"226:3:65","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"226:10:65","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"226:15:65","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"226:45:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"207:64:65"},{"expression":{"arguments":[{"id":9975,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9964,"src":"289:7:65","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5245454e5452414e43595f41545441434b","id":9976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"298:19:65","typeDescriptions":{"typeIdentifier":"t_stringliteral_b073897cbe001a123b52a171a70b03a06b294ca00a64957392f6b2d6ffb90fe4","typeString":"literal_string \"REENTRANCY_ATTACK\""},"value":"REENTRANCY_ATTACK"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b073897cbe001a123b52a171a70b03a06b294ca00a64957392f6b2d6ffb90fe4","typeString":"literal_string \"REENTRANCY_ATTACK\""}],"id":9974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"281:7:65","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"281:37:65","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9978,"nodeType":"ExpressionStatement","src":"281:37:65"}]},"functionSelector":"0a2df1ed","id":9980,"implemented":true,"kind":"function","modifiers":[],"name":"callSender","nodeType":"FunctionDefinition","parameters":{"id":9961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9960,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":9980,"src":"118:11:65","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9959,"name":"bytes4","nodeType":"ElementaryTypeName","src":"118:6:65","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"117:13:65"},"returnParameters":{"id":9962,"nodeType":"ParameterList","parameters":[],"src":"138:0:65"},"scope":9981,"src":"98:227:65","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9982,"src":"66:261:65"}],"src":"33:295:65"},"id":65},"contracts/test/ReentrancyMock.sol":{"ast":{"absolutePath":"contracts/test/ReentrancyMock.sol","exportedSymbols":{"ReentrancyMock":[10100]},"id":10101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9983,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:66"},{"absolutePath":"contracts/openzeppelin/ReentrancyGuard.sol","file":"../openzeppelin/ReentrancyGuard.sol","id":9984,"nodeType":"ImportDirective","scope":10101,"sourceUnit":7998,"src":"58:45:66","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/test/ReentrancyAttack.sol","file":"./ReentrancyAttack.sol","id":9985,"nodeType":"ImportDirective","scope":10101,"sourceUnit":9982,"src":"105:32:66","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9986,"name":"ReentrancyGuard","nodeType":"UserDefinedTypeName","referencedDeclaration":7997,"src":"166:15:66","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyGuard_$7997","typeString":"contract ReentrancyGuard"}},"id":9987,"nodeType":"InheritanceSpecifier","src":"166:15:66"}],"contractDependencies":[7997],"contractKind":"contract","fullyImplemented":true,"id":10100,"linearizedBaseContracts":[10100,7997],"name":"ReentrancyMock","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"61bc221a","id":9989,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":10100,"src":"188:22:66","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9988,"name":"uint256","nodeType":"ElementaryTypeName","src":"188:7:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":9996,"nodeType":"Block","src":"231:28:66","statements":[{"expression":{"id":9994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9992,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"241:7:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"251:1:66","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"241:11:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9995,"nodeType":"ExpressionStatement","src":"241:11:66"}]},"id":9997,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9990,"nodeType":"ParameterList","parameters":[],"src":"228:2:66"},"returnParameters":{"id":9991,"nodeType":"ParameterList","parameters":[],"src":"231:0:66"},"scope":10100,"src":"217:42:66","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10005,"nodeType":"Block","src":"307:25:66","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10002,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10099,"src":"317:6:66","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"317:8:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10004,"nodeType":"ExpressionStatement","src":"317:8:66"}]},"functionSelector":"083b2732","id":10006,"implemented":true,"kind":"function","modifiers":[{"id":10000,"modifierName":{"id":9999,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"294:12:66","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"294:12:66"}],"name":"callback","nodeType":"FunctionDefinition","parameters":{"id":9998,"nodeType":"ParameterList","parameters":[],"src":"282:2:66"},"returnParameters":{"id":10001,"nodeType":"ParameterList","parameters":[],"src":"307:0:66"},"scope":10100,"src":"265:67:66","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10027,"nodeType":"Block","src":"398:100:66","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10013,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"412:1:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"416:1:66","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"412:5:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10026,"nodeType":"IfStatement","src":"408:84:66","trueBody":{"id":10025,"nodeType":"Block","src":"419:73:66","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10016,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10099,"src":"433:6:66","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"433:8:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10018,"nodeType":"ExpressionStatement","src":"433:8:66"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10020,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"475:1:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"479:1:66","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"475:5:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10019,"name":"countLocalRecursive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10028,"src":"455:19:66","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"455:26:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10024,"nodeType":"ExpressionStatement","src":"455:26:66"}]}}]},"functionSelector":"96ffa690","id":10028,"implemented":true,"kind":"function","modifiers":[{"id":10011,"modifierName":{"id":10010,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"385:12:66","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"385:12:66"}],"name":"countLocalRecursive","nodeType":"FunctionDefinition","parameters":{"id":10009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10008,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":10028,"src":"367:9:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10007,"name":"uint256","nodeType":"ElementaryTypeName","src":"367:7:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"366:11:66"},"returnParameters":{"id":10012,"nodeType":"ParameterList","parameters":[],"src":"398:0:66"},"scope":10100,"src":"338:160:66","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10064,"nodeType":"Block","src":"563:286:66","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10035,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"577:1:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"581:1:66","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"577:5:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10063,"nodeType":"IfStatement","src":"573:270:66","trueBody":{"id":10062,"nodeType":"Block","src":"584:259:66","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10038,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10099,"src":"598:6:66","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"598:8:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10040,"nodeType":"ExpressionStatement","src":"598:8:66"},{"assignments":[10042,null],"declarations":[{"constant":false,"id":10042,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":10062,"src":"684:12:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10041,"name":"bool","nodeType":"ElementaryTypeName","src":"684:4:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10056,"initialValue":{"arguments":[{"arguments":[{"hexValue":"636f756e74546869735265637572736976652875696e7432353629","id":10050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"745:29:66","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c5344fa6b010fdd5e2cff6c41f85eb27e8b457f2d042f418209d56095018878","typeString":"literal_string \"countThisRecursive(uint256)\""},"value":"countThisRecursive(uint256)"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10051,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"776:1:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"780:1:66","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"776:5:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8c5344fa6b010fdd5e2cff6c41f85eb27e8b457f2d042f418209d56095018878","typeString":"literal_string \"countThisRecursive(uint256)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10048,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"721:3:66","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"721:23:66","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":10054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"721:61:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":10045,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"710:4:66","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyMock_$10100","typeString":"contract ReentrancyMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReentrancyMock_$10100","typeString":"contract ReentrancyMock"}],"id":10044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"702:7:66","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10043,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:66","typeDescriptions":{}}},"id":10046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"702:13:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"702:18:66","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"702:81:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"683:100:66"},{"expression":{"arguments":[{"id":10058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10042,"src":"805:7:66","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5245454e5452414e43595f4d4f434b","id":10059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"814:17:66","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d3839c62ad0b749f6848e7b3f637bd52f68495b9cee2b2a21e0e6492bcf49d4","typeString":"literal_string \"REENTRANCY_MOCK\""},"value":"REENTRANCY_MOCK"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d3839c62ad0b749f6848e7b3f637bd52f68495b9cee2b2a21e0e6492bcf49d4","typeString":"literal_string \"REENTRANCY_MOCK\""}],"id":10057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"797:7:66","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"797:35:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10061,"nodeType":"ExpressionStatement","src":"797:35:66"}]}}]},"functionSelector":"8c5344fa","id":10065,"implemented":true,"kind":"function","modifiers":[{"id":10033,"modifierName":{"id":10032,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"550:12:66","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"550:12:66"}],"name":"countThisRecursive","nodeType":"FunctionDefinition","parameters":{"id":10031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10030,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":10065,"src":"532:9:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10029,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"531:11:66"},"returnParameters":{"id":10034,"nodeType":"ParameterList","parameters":[],"src":"563:0:66"},"scope":10100,"src":"504:345:66","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10090,"nodeType":"Block","src":"924:115:66","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10072,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10099,"src":"934:6:66","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"934:8:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10074,"nodeType":"ExpressionStatement","src":"934:8:66"},{"assignments":[10076],"declarations":[{"constant":false,"id":10076,"mutability":"mutable","name":"func","nodeType":"VariableDeclaration","scope":10090,"src":"952:11:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10075,"name":"bytes4","nodeType":"ElementaryTypeName","src":"952:6:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":10083,"initialValue":{"arguments":[{"arguments":[{"hexValue":"63616c6c6261636b2829","id":10080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"983:12:66","typeDescriptions":{"typeIdentifier":"t_stringliteral_083b2732f78169bfaad6b407fa338cc97d697ed69d3915a18239cc111d51a402","typeString":"literal_string \"callback()\""},"value":"callback()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_083b2732f78169bfaad6b407fa338cc97d697ed69d3915a18239cc111d51a402","typeString":"literal_string \"callback()\""}],"id":10079,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"973:9:66","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"973:23:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"966:6:66","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":10077,"name":"bytes4","nodeType":"ElementaryTypeName","src":"966:6:66","typeDescriptions":{}}},"id":10082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"966:31:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"952:45:66"},{"expression":{"arguments":[{"id":10087,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10076,"src":"1027:4:66","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":10084,"name":"attacker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10067,"src":"1007:8:66","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyAttack_$9981","typeString":"contract ReentrancyAttack"}},"id":10086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"callSender","nodeType":"MemberAccess","referencedDeclaration":9980,"src":"1007:19:66","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes4_$returns$__$","typeString":"function (bytes4) external"}},"id":10088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1007:25:66","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10089,"nodeType":"ExpressionStatement","src":"1007:25:66"}]},"functionSelector":"b672ad8b","id":10091,"implemented":true,"kind":"function","modifiers":[{"id":10070,"modifierName":{"id":10069,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"911:12:66","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"911:12:66"}],"name":"countAndCall","nodeType":"FunctionDefinition","parameters":{"id":10068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10067,"mutability":"mutable","name":"attacker","nodeType":"VariableDeclaration","scope":10091,"src":"877:25:66","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyAttack_$9981","typeString":"contract ReentrancyAttack"},"typeName":{"id":10066,"name":"ReentrancyAttack","nodeType":"UserDefinedTypeName","referencedDeclaration":9981,"src":"877:16:66","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyAttack_$9981","typeString":"contract ReentrancyAttack"}},"visibility":"internal"}],"src":"876:27:66"},"returnParameters":{"id":10071,"nodeType":"ParameterList","parameters":[],"src":"924:0:66"},"scope":10100,"src":"855:184:66","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10098,"nodeType":"Block","src":"1071:29:66","statements":[{"expression":{"id":10096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10094,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9989,"src":"1081:7:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":10095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1092:1:66","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1081:12:66","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10097,"nodeType":"ExpressionStatement","src":"1081:12:66"}]},"id":10099,"implemented":true,"kind":"function","modifiers":[],"name":"_count","nodeType":"FunctionDefinition","parameters":{"id":10092,"nodeType":"ParameterList","parameters":[],"src":"1060:2:66"},"returnParameters":{"id":10093,"nodeType":"ParameterList","parameters":[],"src":"1071:0:66"},"scope":10100,"src":"1045:55:66","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":10101,"src":"139:963:66"}],"src":"33:1070:66"},"id":66},"contracts/test/SafeERC20Mock.sol":{"ast":{"absolutePath":"contracts/test/SafeERC20Mock.sol","exportedSymbols":{"SafeERC20Mock":[10129]},"id":10130,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":10102,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:67"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","id":10103,"nodeType":"ImportDirective","scope":10130,"sourceUnit":763,"src":"713:87:67","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/SafeERC20.sol","file":"../openzeppelin/SafeERC20.sol","id":10104,"nodeType":"ImportDirective","scope":10130,"sourceUnit":8207,"src":"802:39:67","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10129,"linearizedBaseContracts":[10129],"name":"SafeERC20Mock","nodeType":"ContractDefinition","nodes":[{"id":10107,"libraryName":{"id":10105,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":8206,"src":"878:9:67","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$8206","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"872:27:67","typeName":{"id":10106,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"892:6:67","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}}},{"body":{"id":10110,"nodeType":"Block","src":"919:2:67","statements":[]},"id":10111,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10108,"nodeType":"ParameterList","parameters":[],"src":"916:2:67"},"returnParameters":{"id":10109,"nodeType":"ParameterList","parameters":[],"src":"919:0:67"},"scope":10129,"src":"905:16:67","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10127,"nodeType":"Block","src":"1028:45:67","statements":[{"expression":{"arguments":[{"id":10123,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10115,"src":"1056:2:67","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10117,"src":"1060:5:67","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10120,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"1038:5:67","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"id":10122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":8116,"src":"1038:17:67","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$762_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$762_$","typeString":"function (contract IERC20,address,uint256)"}},"id":10125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1038:28:67","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10126,"nodeType":"ExpressionStatement","src":"1038:28:67"}]},"functionSelector":"eb5625d9","id":10128,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":10118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10113,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":10128,"src":"957:12:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"},"typeName":{"id":10112,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":762,"src":"957:6:67","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$762","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10115,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":10128,"src":"979:10:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10114,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:67","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10117,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":10128,"src":"999:13:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10116,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:67","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"947:71:67"},"returnParameters":{"id":10119,"nodeType":"ParameterList","parameters":[],"src":"1028:0:67"},"scope":10129,"src":"927:146:67","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10130,"src":"843:236:67"}],"src":"688:392:67"},"id":67},"contracts/test/SignaturesValidatorMock.sol":{"ast":{"absolutePath":"contracts/test/SignaturesValidatorMock.sol","exportedSymbols":{"SignaturesValidatorMock":[10252]},"id":10253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10131,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"33:23:68"},{"absolutePath":"contracts/helpers/SignaturesValidator.sol","file":"../helpers/SignaturesValidator.sol","id":10132,"nodeType":"ImportDirective","scope":10253,"sourceUnit":2851,"src":"58:44:68","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10133,"name":"SignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":2850,"src":"140:19:68","typeDescriptions":{"typeIdentifier":"t_contract$_SignaturesValidator_$2850","typeString":"contract SignaturesValidator"}},"id":10134,"nodeType":"InheritanceSpecifier","src":"140:19:68"}],"contractDependencies":[636,1958,2850,5956],"contractKind":"contract","fullyImplemented":true,"id":10252,"linearizedBaseContracts":[10252,2850,1958,5956,636],"name":"SignaturesValidatorMock","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":10136,"name":"Authenticated","nodeType":"EventDefinition","parameters":{"id":10135,"nodeType":"ParameterList","parameters":[],"src":"185:2:68"},"src":"166:22:68"},{"constant":true,"functionSelector":"0d347d5d","id":10141,"mutability":"constant","name":"MOCK_AUTHENTICATE_TYPEHASH","nodeType":"VariableDeclaration","scope":10252,"src":"194:108:68","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"194:7:68","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41757468656e7469636174652875696e7432353620616d6f756e742c75696e74323536206e6f6e636529","id":10139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"257:44:68","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49","typeString":"literal_string \"Authenticate(uint256 amount,uint256 nonce)\""},"value":"Authenticate(uint256 amount,uint256 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49","typeString":"literal_string \"Authenticate(uint256 amount,uint256 nonce)\""}],"id":10138,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"247:9:68","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"247:55:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":10148,"nodeType":"Block","src":"368:64:68","statements":[]},"id":10149,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"454f41205369676e6174757265732056616c696461746f72204d6f636b","id":10144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"330:31:68","typeDescriptions":{"typeIdentifier":"t_stringliteral_04733bf15f4ac2479d17c7474669c77945f9d314ce0c0b105d4bf7c62e2c106a","typeString":"literal_string \"EOA Signatures Validator Mock\""},"value":"EOA Signatures Validator Mock"},{"hexValue":"31","id":10145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"363:3:68","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":10146,"modifierName":{"id":10143,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"323:6:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EIP712_$5956_$","typeString":"type(contract EIP712)"}},"nodeType":"ModifierInvocation","src":"323:44:68"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10142,"nodeType":"ParameterList","parameters":[],"src":"320:2:68"},"returnParameters":{"id":10147,"nodeType":"ParameterList","parameters":[],"src":"368:0:68"},"scope":10252,"src":"309:123:68","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10167,"nodeType":"Block","src":"522:88:68","statements":[{"expression":{"arguments":[{"arguments":[{"id":10161,"name":"MOCK_AUTHENTICATE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10141,"src":"560:26:68","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10162,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"588:6:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10163,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"596:5:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10159,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"549:3:68","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"549:10:68","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"549:53:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10158,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"539:9:68","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"539:64:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10157,"id":10166,"nodeType":"Return","src":"532:71:68"}]},"functionSelector":"251a104d","id":10168,"implemented":true,"kind":"function","modifiers":[],"name":"getStructHash","nodeType":"FunctionDefinition","parameters":{"id":10154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10151,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":10168,"src":"461:14:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10150,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10153,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":10168,"src":"477:13:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10152,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"460:31:68"},"returnParameters":{"id":10157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10156,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10168,"src":"513:7:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"513:7:68","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"512:9:68"},"scope":10252,"src":"438:172:68","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":10184,"nodeType":"Block","src":"696:70:68","statements":[{"expression":{"arguments":[{"arguments":[{"id":10179,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"744:6:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10180,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10172,"src":"752:5:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10178,"name":"getStructHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10168,"src":"730:13:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"730:28:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":10177,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"713:16:68","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"713:46:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10176,"id":10183,"nodeType":"Return","src":"706:53:68"}]},"functionSelector":"d8574486","id":10185,"implemented":true,"kind":"function","modifiers":[],"name":"getDigest","nodeType":"FunctionDefinition","parameters":{"id":10173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10170,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":10185,"src":"635:14:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10169,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10172,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":10185,"src":"651:13:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10171,"name":"uint256","nodeType":"ElementaryTypeName","src":"651:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:31:68"},"returnParameters":{"id":10176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10175,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10185,"src":"687:7:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"687:7:68","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"686:9:68"},"scope":10252,"src":"616:150:68","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10210,"nodeType":"Block","src":"892:154:68","statements":[{"expression":{"arguments":[{"id":10195,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"924:4:68","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10197,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"944:6:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":10199,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"965:4:68","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10198,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"952:12:68","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:18:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10196,"name":"getStructHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10168,"src":"930:13:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":10201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"930:41:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10202,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"973:9:68","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":10203,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"984:6:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":10204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"984:24:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10194,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1839,"src":"902:21:68","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256)"}},"id":10205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:107:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10206,"nodeType":"ExpressionStatement","src":"902:107:68"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10207,"name":"Authenticated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"1024:13:68","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:15:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10209,"nodeType":"EmitStatement","src":"1019:20:68"}]},"functionSelector":"6917a1ff","id":10211,"implemented":true,"kind":"function","modifiers":[],"name":"authenticatedCall","nodeType":"FunctionDefinition","parameters":{"id":10192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10187,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":10211,"src":"808:12:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10186,"name":"address","nodeType":"ElementaryTypeName","src":"808:7:68","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10189,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":10211,"src":"830:14:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10188,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10191,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":10211,"src":"854:22:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10190,"name":"bytes","nodeType":"ElementaryTypeName","src":"854:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"798:84:68"},"returnParameters":{"id":10193,"nodeType":"ParameterList","parameters":[],"src":"892:0:68"},"scope":10252,"src":"772:274:68","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10239,"nodeType":"Block","src":"1210:350:68","statements":[{"expression":{"arguments":[{"id":10223,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"1371:4:68","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10225,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"1403:6:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":10227,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"1424:4:68","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10226,"name":"getNextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1411:12:68","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1411:18:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10224,"name":"getStructHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10168,"src":"1389:13:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1389:41:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10230,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10217,"src":"1444:9:68","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10231,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10219,"src":"1467:8:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10232,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1489:6:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$573_$","typeString":"type(library Errors)"}},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":479,"src":"1489:24:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10222,"name":"_ensureValidSignature","nodeType":"Identifier","overloadedDeclarations":[1839,1883],"referencedDeclaration":1883,"src":"1336:21:68","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes memory,uint256,uint256)"}},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:187:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10235,"nodeType":"ExpressionStatement","src":"1336:187:68"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10236,"name":"Authenticated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"1538:13:68","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1538:15:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10238,"nodeType":"EmitStatement","src":"1533:20:68"}]},"functionSelector":"9a874583","id":10240,"implemented":true,"kind":"function","modifiers":[],"name":"authenticatedCallWithDeadline","nodeType":"FunctionDefinition","parameters":{"id":10220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10213,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":10240,"src":"1100:12:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10212,"name":"address","nodeType":"ElementaryTypeName","src":"1100:7:68","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10215,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":10240,"src":"1122:14:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10217,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":10240,"src":"1146:22:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10216,"name":"bytes","nodeType":"ElementaryTypeName","src":"1146:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10219,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":10240,"src":"1178:16:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1090:110:68"},"returnParameters":{"id":10221,"nodeType":"ParameterList","parameters":[],"src":"1210:0:68"},"scope":10252,"src":"1052:508:68","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10250,"nodeType":"Block","src":"1612:35:68","statements":[{"expression":{"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1622:18:68","subExpression":{"baseExpression":{"id":10245,"name":"_nextNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"1622:10:68","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10247,"indexExpression":{"id":10246,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10242,"src":"1633:4:68","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1622:16:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10249,"nodeType":"ExpressionStatement","src":"1622:18:68"}]},"functionSelector":"8247a97c","id":10251,"implemented":true,"kind":"function","modifiers":[],"name":"increaseNonce","nodeType":"FunctionDefinition","parameters":{"id":10243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10242,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":10251,"src":"1589:12:68","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10241,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:68","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1588:14:68"},"returnParameters":{"id":10244,"nodeType":"ParameterList","parameters":[],"src":"1612:0:68"},"scope":10252,"src":"1566:81:68","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10253,"src":"104:1545:68"}],"src":"33:1617:68"},"id":68},"contracts/test/SingletonAuthenticationMock.sol":{"ast":{"absolutePath":"contracts/test/SingletonAuthenticationMock.sol","exportedSymbols":{"SingletonAuthenticationMock":[10268]},"id":10269,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":10254,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:69"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":10255,"nodeType":"ImportDirective","scope":10269,"sourceUnit":1401,"src":"713:65:69","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/helpers/SingletonAuthentication.sol","file":"../helpers/SingletonAuthentication.sol","id":10256,"nodeType":"ImportDirective","scope":10269,"sourceUnit":2945,"src":"780:48:69","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10257,"name":"SingletonAuthentication","nodeType":"UserDefinedTypeName","referencedDeclaration":2944,"src":"870:23:69","typeDescriptions":{"typeIdentifier":"t_contract$_SingletonAuthentication_$2944","typeString":"contract SingletonAuthentication"}},"id":10258,"nodeType":"InheritanceSpecifier","src":"870:23:69"}],"contractDependencies":[584,1503,2944],"contractKind":"contract","fullyImplemented":true,"id":10268,"linearizedBaseContracts":[10268,2944,1503,584],"name":"SingletonAuthenticationMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":10266,"nodeType":"Block","src":"957:62:69","statements":[]},"id":10267,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10263,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10260,"src":"950:5:69","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}}],"id":10264,"modifierName":{"id":10262,"name":"SingletonAuthentication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"926:23:69","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SingletonAuthentication_$2944_$","typeString":"type(contract SingletonAuthentication)"}},"nodeType":"ModifierInvocation","src":"926:30:69"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10260,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":10267,"src":"912:12:69","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"},"typeName":{"id":10259,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":1400,"src":"912:6:69","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$1400","typeString":"contract IVault"}},"visibility":"internal"}],"src":"911:14:69"},"returnParameters":{"id":10265,"nodeType":"ParameterList","parameters":[],"src":"957:0:69"},"scope":10268,"src":"900:119:69","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10269,"src":"830:191:69"}],"src":"688:334:69"},"id":69},"contracts/test/TemporarilyPausableMock.sol":{"ast":{"absolutePath":"contracts/test/TemporarilyPausableMock.sol","exportedSymbols":{"TemporarilyPausableMock":[10314]},"id":10315,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":10270,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:70"},{"absolutePath":"contracts/helpers/TemporarilyPausable.sol","file":"../helpers/TemporarilyPausable.sol","id":10271,"nodeType":"ImportDirective","scope":10315,"sourceUnit":3142,"src":"713:44:70","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10272,"name":"TemporarilyPausable","nodeType":"UserDefinedTypeName","referencedDeclaration":3133,"src":"795:19:70","typeDescriptions":{"typeIdentifier":"t_contract$_TemporarilyPausable_$3133","typeString":"contract TemporarilyPausable"}},"id":10273,"nodeType":"InheritanceSpecifier","src":"795:19:70"}],"contractDependencies":[655,3133],"contractKind":"contract","fullyImplemented":true,"id":10314,"linearizedBaseContracts":[10314,3133,655],"name":"TemporarilyPausableMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":10284,"nodeType":"Block","src":"967:2:70","statements":[]},"id":10285,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10280,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10275,"src":"920:19:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10281,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"941:20:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10282,"modifierName":{"id":10279,"name":"TemporarilyPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"900:19:70","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TemporarilyPausable_$3133_$","typeString":"type(contract TemporarilyPausable)"}},"nodeType":"ModifierInvocation","src":"900:62:70"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10275,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":10285,"src":"833:27:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10274,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10277,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":10285,"src":"862:28:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10276,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:59:70"},"returnParameters":{"id":10283,"nodeType":"ParameterList","parameters":[],"src":"967:0:70"},"scope":10314,"src":"821:148:70","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10294,"nodeType":"Block","src":"1016:35:70","statements":[{"expression":{"arguments":[{"id":10291,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10287,"src":"1037:6:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10290,"name":"_setPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"1026:10:70","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":10292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1026:18:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10293,"nodeType":"ExpressionStatement","src":"1026:18:70"}]},"functionSelector":"16c38b3c","id":10295,"implemented":true,"kind":"function","modifiers":[],"name":"setPaused","nodeType":"FunctionDefinition","parameters":{"id":10288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10287,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":10295,"src":"994:11:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10286,"name":"bool","nodeType":"ElementaryTypeName","src":"994:4:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"993:13:70"},"returnParameters":{"id":10289,"nodeType":"ParameterList","parameters":[],"src":"1016:0:70"},"scope":10314,"src":"975:76:70","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10303,"nodeType":"Block","src":"1126:67:70","statements":[{"expression":{"expression":{"id":10300,"name":"PausableConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"1143:17:70","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PausableConstants_$3141_$","typeString":"type(library PausableConstants)"}},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_PAUSE_WINDOW_DURATION","nodeType":"MemberAccess","referencedDeclaration":3137,"src":"1143:43:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10299,"id":10302,"nodeType":"Return","src":"1136:50:70"}]},"functionSelector":"cd43a4d5","id":10304,"implemented":true,"kind":"function","modifiers":[],"name":"getMaxPauseWindowDuration","nodeType":"FunctionDefinition","parameters":{"id":10296,"nodeType":"ParameterList","parameters":[],"src":"1091:2:70"},"returnParameters":{"id":10299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10298,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10304,"src":"1117:7:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1116:9:70"},"scope":10314,"src":"1057:136:70","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":10312,"nodeType":"Block","src":"1269:68:70","statements":[{"expression":{"expression":{"id":10309,"name":"PausableConstants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"1286:17:70","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PausableConstants_$3141_$","typeString":"type(library PausableConstants)"}},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_BUFFER_PERIOD_DURATION","nodeType":"MemberAccess","referencedDeclaration":3140,"src":"1286:44:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10308,"id":10311,"nodeType":"Return","src":"1279:51:70"}]},"functionSelector":"88f1d204","id":10313,"implemented":true,"kind":"function","modifiers":[],"name":"getMaxBufferPeriodDuration","nodeType":"FunctionDefinition","parameters":{"id":10305,"nodeType":"ParameterList","parameters":[],"src":"1234:2:70"},"returnParameters":{"id":10308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10307,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10313,"src":"1260:7:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:70","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1259:9:70"},"scope":10314,"src":"1199:138:70","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":10315,"src":"759:580:70"}],"src":"688:652:70"},"id":70},"contracts/test/TestToken.sol":{"ast":{"absolutePath":"contracts/test/TestToken.sol","exportedSymbols":{"TestToken":[10373]},"id":10374,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":10316,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"688:23:71"},{"absolutePath":"contracts/openzeppelin/ERC20Burnable.sol","file":"../openzeppelin/ERC20Burnable.sol","id":10317,"nodeType":"ImportDirective","scope":10374,"sourceUnit":6505,"src":"713:43:71","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/ERC20Permit.sol","file":"../openzeppelin/ERC20Permit.sol","id":10318,"nodeType":"ImportDirective","scope":10374,"sourceUnit":6614,"src":"757:41:71","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/openzeppelin/ERC20.sol","file":"../openzeppelin/ERC20.sol","id":10319,"nodeType":"ImportDirective","scope":10374,"sourceUnit":6448,"src":"799:35:71","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10320,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":6447,"src":"858:5:71","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$6447","typeString":"contract ERC20"}},"id":10321,"nodeType":"InheritanceSpecifier","src":"858:5:71"},{"baseName":{"id":10322,"name":"ERC20Burnable","nodeType":"UserDefinedTypeName","referencedDeclaration":6504,"src":"865:13:71","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Burnable_$6504","typeString":"contract ERC20Burnable"}},"id":10323,"nodeType":"InheritanceSpecifier","src":"865:13:71"},{"baseName":{"id":10324,"name":"ERC20Permit","nodeType":"UserDefinedTypeName","referencedDeclaration":6613,"src":"880:11:71","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Permit_$6613","typeString":"contract ERC20Permit"}},"id":10325,"nodeType":"InheritanceSpecifier","src":"880:11:71"}],"contractDependencies":[636,762,798,1958,5956,6447,6504,6613],"contractKind":"contract","fullyImplemented":true,"id":10373,"linearizedBaseContracts":[10373,6613,1958,5956,636,798,6504,6447,762],"name":"TestToken","nodeType":"ContractDefinition","nodes":[{"body":{"id":10345,"nodeType":"Block","src":"1036:41:71","statements":[{"expression":{"arguments":[{"id":10342,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10331,"src":"1061:8:71","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":10341,"name":"_setupDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"1046:14:71","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":10343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1046:24:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10344,"nodeType":"ExpressionStatement","src":"1046:24:71"}]},"id":10346,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10334,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"1004:4:71","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10335,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"1010:6:71","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":10336,"modifierName":{"id":10333,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"998:5:71","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$6447_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"998:19:71"},{"arguments":[{"id":10338,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"1030:4:71","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":10339,"modifierName":{"id":10337,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"1018:11:71","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Permit_$6613_$","typeString":"type(contract ERC20Permit)"}},"nodeType":"ModifierInvocation","src":"1018:17:71"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10327,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":10346,"src":"919:18:71","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10326,"name":"string","nodeType":"ElementaryTypeName","src":"919:6:71","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10329,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":10346,"src":"947:20:71","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10328,"name":"string","nodeType":"ElementaryTypeName","src":"947:6:71","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10331,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":10346,"src":"977:14:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":10330,"name":"uint8","nodeType":"ElementaryTypeName","src":"977:5:71","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"909:88:71"},"returnParameters":{"id":10340,"nodeType":"ParameterList","parameters":[],"src":"1036:0:71"},"scope":10373,"src":"898:179:71","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10358,"nodeType":"Block","src":"1141:41:71","statements":[{"expression":{"arguments":[{"id":10354,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10348,"src":"1157:9:71","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10355,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"1168:6:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10353,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"1151:5:71","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1151:24:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10357,"nodeType":"ExpressionStatement","src":"1151:24:71"}]},"functionSelector":"40c10f19","id":10359,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":10351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10348,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":10359,"src":"1097:17:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10347,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:71","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10350,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":10359,"src":"1116:14:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1096:35:71"},"returnParameters":{"id":10352,"nodeType":"ParameterList","parameters":[],"src":"1141:0:71"},"scope":10373,"src":"1083:99:71","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10371,"nodeType":"Block","src":"1568:38:71","statements":[{"expression":{"arguments":[{"id":10367,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10361,"src":"1584:6:71","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10363,"src":"1592:6:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10366,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1578:5:71","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1578:21:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10370,"nodeType":"ExpressionStatement","src":"1578:21:71"}]},"functionSelector":"7c602bc2","id":10372,"implemented":true,"kind":"function","modifiers":[],"name":"burnWithoutAllowance","nodeType":"FunctionDefinition","parameters":{"id":10364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10361,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":10372,"src":"1527:14:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10360,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:71","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10363,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":10372,"src":"1543:14:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:71","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1526:32:71"},"returnParameters":{"id":10365,"nodeType":"ParameterList","parameters":[],"src":"1568:0:71"},"scope":10373,"src":"1497:109:71","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10374,"src":"836:772:71"}],"src":"688:921:71"},"id":71}},"contracts":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol":{"Errors":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad732bec7ee0141d291da266d1fa87f23aa8562af21d6abb73ad7a770e108cce64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH20 0x2BEC7EE0141D291DA266D1FA87F23AA8562AF21D PUSH11 0xBB73AD7A770E108CCE6473 PUSH16 0x6C634300070100330000000000000000 ","sourceMap":"5072:10023:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad732bec7ee0141d291da266d1fa87f23aa8562af21d6abb73ad7a770e108cce64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH20 0x2BEC7EE0141D291DA266D1FA87F23AA8562AF21D PUSH11 0xBB73AD7A770E108CCE6473 PUSH16 0x6C634300070100330000000000000000 ","sourceMap":"5072:10023:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"IAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol":{"IOptionalOnlyCaller":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"OnlyCallerOptIn","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isOnlyCallerEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setOnlyCallerCheck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setOnlyCallerCheckWithSignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isOnlyCallerEnabled(address)":"a1648aa5","setOnlyCallerCheck(bool)":"e811f44b","setOnlyCallerCheckWithSignature(address,bool,bytes)":"fcaa54ee"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"OnlyCallerOptIn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isOnlyCallerEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setOnlyCallerCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"setOnlyCallerCheckWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the OptionalOnlyCaller helper, used to opt in to a caller verification for a given address to methods that are otherwise callable by any address.\",\"events\":{\"OnlyCallerOptIn(address,bool)\":{\"details\":\"Emitted every time setOnlyCallerCheck is called.\"}},\"kind\":\"dev\",\"methods\":{\"isOnlyCallerEnabled(address)\":{\"details\":\"Returns true if caller verification is enabled for the given user, false otherwise.\"},\"setOnlyCallerCheck(bool)\":{\"details\":\"Enables / disables verification mechanism for caller.\",\"params\":{\"enabled\":\"- True if caller verification shall be enabled, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol\":\"IOptionalOnlyCaller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol\":{\"keccak256\":\"0x7bab0494ee39fb988722edd20b3e5ff747b4acfe93a62d0726c5d63ae3f6e472\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e1d154f2fa589cbfa51338c285cf1862edcd6172fdbb26db17a6fcf9581ee2\",\"dweb:/ipfs/Qmbu8wgFjYqZvvv84MKbLiHMSKv3THZuFHCjRchPHLjCdY\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ISignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ITemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":{\"keccak256\":\"0xf82dab09a38bfdaf0983b69829de462c62359bc0bfaa37c4447408d93bd367c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0172b678ca594e95b7e5d881fd1280b3792052861ca98d77fa6194b524d188\",\"dweb:/ipfs/QmZ3bYEGTrfruXNYAzuFjJeg9Hx6UQw8ZyBzyM72BVGXfT\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol\":{\"keccak256\":\"0xeb8a588cfca3dddd2da141ec6adc1672646186f6dbd1e707ec9b1def45e59c25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec0afd86c576a818b61a5cb6e4d3bf946b73ce04728a2e53b3bfc7f8522b1aa1\",\"dweb:/ipfs/QmS81F4CQ7nTqamsdHaN9AGwYRguw5fCZ5EM9jtVXT7G5U\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"IAsset":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol":{"IBasicAuthorizer":{"abi":[{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","canPerform(bytes32,address,address)":"9be2a884","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol\":\"IBasicAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol\":{\"keccak256\":\"0x4656ac33eb25f189c22bbf68981178a0aadf59a0e0313d0bc00f62d226cd0424\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d1220915bb91e48cf54890fda4857cbcb0b41ab51ebd63cddf76742cf3f6ec35\",\"dweb:/ipfs/QmfMQqDs1iWePz9qafrXf8pHVYb5SMFvriYnkAsXC3Py3E\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"IProtocolFeesCollector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getCollectedFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawCollectedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAuthorizer()":"aaabadc5","getCollectedFeeAmounts(address[])":"e42abf35","getFlashLoanFeePercentage()":"d877845c","getSwapFeePercentage()":"55c67628","setFlashLoanFeePercentage(uint256)":"6b6b9f69","setSwapFeePercentage(uint256)":"38e9922e","vault()":"fbfa77cf","withdrawCollectedFees(address[],uint256[],address)":"6daefab6"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ExternalBalanceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"delta","type":"int256"}],"name":"InternalBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"int256[]","name":"deltas","type":"int256[]"},{"indexed":false,"internalType":"uint256[]","name":"protocolFeeAmounts","type":"uint256[]"}],"name":"PoolBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"assetManager","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"cashDelta","type":"int256"},{"indexed":false,"internalType":"int256","name":"managedDelta","type":"int256"}],"name":"PoolBalanceManaged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"poolAddress","type":"address"},{"indexed":false,"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"RelayerApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"TokensDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"TokensRegistered","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"deregisterTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.ExitPoolRequest","name":"request","type":"tuple"}],"name":"exitPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getInternalBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum IVault.PoolSpecialization","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"assetManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeesCollector","outputs":[{"internalType":"contract IProtocolFeesCollector","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"relayer","type":"address"}],"name":"hasApprovedRelayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}],"internalType":"struct IVault.JoinPoolRequest","name":"request","type":"tuple"}],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.PoolBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IVault.PoolBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"managePoolBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.UserBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"}],"internalType":"struct IVault.UserBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"manageUserBalance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"}],"name":"queryBatchSwap","outputs":[{"internalType":"int256[]","name":"assetDeltas","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"registerPool","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"registerTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setRelayerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"assetIn","type":"address"},{"internalType":"contract IAsset","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","deregisterTokens(bytes32,address[])":"7d3aeb96","exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","flashLoan(address,address[],uint256[],bytes)":"5c38449e","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getDomainSeparator()":"ed24911d","getInternalBalance(address,address[])":"0f5a6efa","getNextNonce(address)":"90193b7c","getPausedState()":"1c0de051","getPool(bytes32)":"f6c00927","getPoolTokenInfo(bytes32,address)":"b05f8e48","getPoolTokens(bytes32)":"f94d4668","getProtocolFeesCollector()":"d2946c2b","hasApprovedRelayer(address,address)":"fec90d72","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28","managePoolBalance((uint8,bytes32,address,uint256)[])":"e6c46092","manageUserBalance((uint8,address,uint256,address,address)[])":"0e8e3e84","queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))":"f84d066e","registerPool(uint8)":"09b2760f","registerTokens(bytes32,address[],address[])":"66a9c7d2","setAuthorizer(address)":"058a628f","setPaused(bool)":"16c38b3c","setRelayerApproval(address,address,bool)":"fa6e671d","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":\"IVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"contracts/custom/CustomToken.sol":{"CustomToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000cba38038062000cba833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491620001bd916003918501906200036f565b508051620001d39060049060208401906200036f565b50506005805460ff1916601217905550620001ef3382620001f8565b5050506200040b565b6200020660008383620002b9565b620002336200022d8262000219620002be565b620002c460201b620005e31790919060201c565b620002df565b6001600160a01b0382166000908152602081815260409091205462000263918390620005e3620002c4821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60025490565b6000828201620002d88482101583620002e4565b9392505050565b600255565b81620002f557620002f581620002f9565b5050565b6200030b816210905360ea1b6200030e565b50565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003b257805160ff1916838001178555620003e2565b82800160010185558215620003e2579182015b82811115620003e2578251825591602001919060010190620003c5565b50620003f0929150620003f4565b5090565b5b80821115620003f05760008155600101620003f5565b61089f806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a06103fe565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610404565b6101fd610465565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104b1565b6100d66104d9565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610558565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059e565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f53384846105fc565b50600192915050565b60025490565b600061041184848461066b565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461045b918691610456908661019e610794565b6105fc565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f591859061045690866105e3565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f5918590610456908661019f610794565b60006103f533848461066b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60008282016105f584821015836107aa565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61068f73ffffffffffffffffffffffffffffffffffffffff841615156101986107aa565b6106b373ffffffffffffffffffffffffffffffffffffffff831615156101996107aa565b6106be8383836107bc565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106f190826101a0610794565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461072d90826105e3565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60006107a384841115836107aa565b5050900390565b816107b8576107b8816107c1565b5050565b505050565b6107eb817f42414c00000000000000000000000000000000000000000000000000000000006107ee565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220c73490056bc0d0e0e1f72f885aa900852e566c1c4dc2689dd30ba7935d2e556064736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCBA CODESIZE SUB DUP1 PUSH3 0xCBA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP3 POP DUP5 SWAP2 PUSH3 0x1BD SWAP2 PUSH1 0x3 SWAP2 DUP6 ADD SWAP1 PUSH3 0x36F JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1D3 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x36F JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x1EF CALLER DUP3 PUSH3 0x1F8 JUMP JUMPDEST POP POP POP PUSH3 0x40B JUMP JUMPDEST PUSH3 0x206 PUSH1 0x0 DUP4 DUP4 PUSH3 0x2B9 JUMP JUMPDEST PUSH3 0x233 PUSH3 0x22D DUP3 PUSH3 0x219 PUSH3 0x2BE JUMP JUMPDEST PUSH3 0x2C4 PUSH1 0x20 SHL PUSH3 0x5E3 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x263 SWAP2 DUP4 SWAP1 PUSH3 0x5E3 PUSH3 0x2C4 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH3 0x2D8 DUP5 DUP3 LT ISZERO DUP4 PUSH3 0x2E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST DUP2 PUSH3 0x2F5 JUMPI PUSH3 0x2F5 DUP2 PUSH3 0x2F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x30B DUP2 PUSH3 0x109053 PUSH1 0xEA SHL PUSH3 0x30E JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3E2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3E2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3E2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3C5 JUMP JUMPDEST POP PUSH3 0x3F0 SWAP3 SWAP2 POP PUSH3 0x3F4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3F0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3F5 JUMP JUMPDEST PUSH2 0x89F DUP1 PUSH3 0x41B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x5FC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP5 DUP5 PUSH2 0x66B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x45B SWAP2 DUP7 SWAP2 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x794 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x5E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x66B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x5F5 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x68F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x6B3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x6BE DUP4 DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6F1 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x794 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x72D SWAP1 DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x7B8 JUMPI PUSH2 0x7B8 DUP2 PUSH2 0x7C1 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7EB DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 CALLVALUE SWAP1 SDIV PUSH12 0xC0D0E0E1F72F885AA900852E JUMP PUSH13 0x1C4DC2689DD30BA7935D2E5560 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"108:179:15:-:0;;;143:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;143:142:15;;;;;;;;;;-1:-1:-1;143:142:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;143:142:15;;;;;;;;;;-1:-1:-1;143:142:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;143:142:15;;;;;;;2118:13:36;;143:142:15;;-1:-1:-1;224:4:15;;-1:-1:-1;230:6:15;;2118:13:36;;:5;;:13;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;248:30:15::1;254:10;266:11:::0;248:5:::1;:30::i;:::-;143:142:::0;;;108:179;;8583:297:36;8658:49;8687:1;8691:7;8700:6;8658:20;:49::i;:::-;8718:42;8734:25;8752:6;8734:13;:11;:13::i;:::-;:17;;;;;;:25;;;;:::i;:::-;8718:15;:42::i;:::-;-1:-1:-1;;;;;8791:18:36;;:9;:18;;;;;;;;;;;;:30;;8814:6;;8791:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8770:18:36;;:9;:18;;;;;;;;;;;:51;;;;8836:37;;;;;;;8770:18;;:9;;8836:37;;;;;;;;;;8583:297;;:::o;11245:183::-;;;;:::o;3500:106::-;3587:12;;3500:106;:::o;966:167:45:-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;3870:94:36:-;3937:12;:20;3870:94::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;1506:28;1514:9;-1:-1:-1;;;1506:7:0;:28::i;:::-;1459:126;:::o;1692:3378::-;-1:-1:-1;;;1754:18:0;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14;108:179:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;108:179:15;;;-1:-1:-1;108:179:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a06103fe565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610404565b6101fd610465565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104b1565b6100d66104d9565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610558565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059e565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f53384846105fc565b50600192915050565b60025490565b600061041184848461066b565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461045b918691610456908661019e610794565b6105fc565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f591859061045690866105e3565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f5918590610456908661019f610794565b60006103f533848461066b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60008282016105f584821015836107aa565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61068f73ffffffffffffffffffffffffffffffffffffffff841615156101986107aa565b6106b373ffffffffffffffffffffffffffffffffffffffff831615156101996107aa565b6106be8383836107bc565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106f190826101a0610794565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461072d90826105e3565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60006107a384841115836107aa565b5050900390565b816107b8576107b8816107c1565b5050565b505050565b6107eb817f42414c00000000000000000000000000000000000000000000000000000000006107ee565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220c73490056bc0d0e0e1f72f885aa900852e566c1c4dc2689dd30ba7935d2e556064736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x5FC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP5 DUP5 PUSH2 0x66B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x45B SWAP2 DUP7 SWAP2 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x794 JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x5E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x66B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x5F5 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x68F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x6B3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x6BE DUP4 DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6F1 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x794 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x72D SWAP1 DUP3 PUSH2 0x5E3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x7B8 JUMPI PUSH2 0x7B8 DUP2 PUSH2 0x7C1 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7EB DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 CALLVALUE SWAP1 SDIV PUSH12 0xC0D0E0E1F72F885AA900852E JUMP PUSH13 0x1C4DC2689DD30BA7935D2E5560 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"108:179:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:164;;;;;;;;;;;;;;;;-1:-1:-1;4857:164:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6269:211;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;4022:117::-;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2448:85::-;;;:::i;6967:312::-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;4570:149::-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;2254:81::-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;4857:164::-;4940:4;4956:37;4965:10;4977:7;4986:6;4956:8;:37::i;:::-;-1:-1:-1;5010:4:36;4857:164;;;;:::o;3500:106::-;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;6269:211::-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;4022:117::-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2448:85::-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6967:312;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;4570:149::-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;966:167:45:-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;10034:213:36:-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;11245:183:36:-;;;;:::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/custom/CustomToken.sol\":\"CustomToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/custom/CustomToken.sol\":{\"keccak256\":\"0x25ed2158d1f9287280aa1ef17fb9efffe238f927b179424b0341e72790e98439\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f1304696e43b26bb2a183fce209eb3acf1d58424aaf762829805540997ba7aed\",\"dweb:/ipfs/QmNv2aogwpJyMnrFAZqTes6ySPi295vFZ4aP8RZjrHApJt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]}},\"version\":1}"}},"contracts/helpers/Authentication.sol":{"Authentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Building block for performing access control on external functions. This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied to external functions to only make them callable by authorized accounts. Derived contracts must implement the `_canPerform` function, which holds the actual access control logic.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in multi contract systems. There are two main uses for it:  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers    unique. The contract's own address is a good option.  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier    shared by the entire family (and no other contract) should be used instead.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/Authentication.sol\":\"Authentication\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"contracts/helpers/Authentication.sol\":{\"keccak256\":\"0x1462b53900d425f1c7dcd53d928b6aa5d327cba8fa2bec27720603bb40d9be70\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad188b1ccd7b1353665228bdc77de9c25e426553f3ec518006aa83d1300b6bf2\",\"dweb:/ipfs/QmaBTVdpM5jSucrVJHU37ZUHdZXEWPYMLkbB6hRiEwHcKN\"]}},\"version\":1}"}},"contracts/helpers/BaseSplitCodeFactory.sol":{"BaseSplitCodeFactory":{"abi":[{"inputs":[],"name":"getCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationCodeContracts","outputs":[{"internalType":"address","name":"contractA","type":"address"},{"internalType":"address","name":"contractB","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getCreationCode()":"00c194db","getCreationCodeContracts()":"174481fa"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCodeContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractB\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when the contract's creation code grows close to 24kB. Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\"},\"getCreationCode()\":{\"details\":\"Returns the creation code of the contract this factory creates.\"},\"getCreationCodeContracts()\":{\"details\":\"Returns the two addresses where the creation code of the contract crated by this factory is stored.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/BaseSplitCodeFactory.sol\":\"BaseSplitCodeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/BaseSplitCodeFactory.sol\":{\"keccak256\":\"0xd95018601e19e9d122ff571a041482d18852472fc1d11023a08020026c59cb83\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://620d69edbc679d988a6781fb24ad1065ed1a5244d2b596d6982b23ba047ed5b3\",\"dweb:/ipfs/QmXjEExnJkbxf2kpECjSPK9sHdFsmmWX7qdEiD8TsNCcy3\"]},\"contracts/helpers/CodeDeployer.sol\":{\"keccak256\":\"0x99d7503e23100e0d0aac1947942816b7e1a7e6bc8067a219a10f3ceb4f5edb7e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8b6bcea0432fcae4e1631deba44104bd8e21cd1cc5696f1b8f0ee8903302b115\",\"dweb:/ipfs/QmNvPKytQXvHpDVJsYSqhug515Hwp38EotY2oqcVMa5pJU\"]}},\"version\":1}"}},"contracts/helpers/CodeDeployer.sol":{"CodeDeployer":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220358cb0cde2a11b727939a73f4429cd275f6312b0d1af62820cc7131a5df5eeb164736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP13 0xB0 0xCD 0xE2 LOG1 SHL PUSH19 0x7939A73F4429CD275F6312B0D1AF62820CC713 BYTE 0x5D CREATE2 0xEE 0xB1 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"1005:5279:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220358cb0cde2a11b727939a73f4429cd275f6312b0d1af62820cc7131a5df5eeb164736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP13 0xB0 0xCD 0xE2 LOG1 SHL PUSH19 0x7939A73F4429CD275F6312B0D1AF62820CC713 BYTE 0x5D CREATE2 0xEE 0xB1 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"1005:5279:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as contract code, which can be retrieved via the `extcodecopy` opcode.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/CodeDeployer.sol\":\"CodeDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/CodeDeployer.sol\":{\"keccak256\":\"0x99d7503e23100e0d0aac1947942816b7e1a7e6bc8067a219a10f3ceb4f5edb7e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8b6bcea0432fcae4e1631deba44104bd8e21cd1cc5696f1b8f0ee8903302b115\",\"dweb:/ipfs/QmNvPKytQXvHpDVJsYSqhug515Hwp38EotY2oqcVMa5pJU\"]}},\"version\":1}"}},"contracts/helpers/EOASignaturesValidator.sol":{"EOASignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Utility for signing Solidity function calls.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/EOASignaturesValidator.sol\":\"EOASignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]}},\"version\":1}"}},"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol":{"ExtraCalldataEOASignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Utility for signing Solidity function calls. This contract relies on the fact that Solidity contracts can be called with extra calldata, and enables meta-transaction schemes by appending an EIP712 signature of the original calldata at the end. Derived contracts must implement the `_entrypointTypeHash` function to map function selectors to EIP712 structs.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol\":\"ExtraCalldataEOASignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol\":{\"keccak256\":\"0x2c6ea6191f2063d53d94b6f1b133c083b815a31c0e67ba5375d573e95709eaa5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://190af60a81830e09ea6c01bba72b4a08b6833fbc44613e791c65154dc096ec4f\",\"dweb:/ipfs/QmWcDfoXeXvxVYin4sB2YcA2f6qWfcPjkukMrvm8h6QN5C\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]}},\"version\":1}"}},"contracts/helpers/InputHelpers.sol":{"InputHelpers":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb457f626309347b2abe13e37c68b19f9a831e8b2bc80414538737ecc316359f64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB GASLIMIT PUSH32 0x626309347B2ABE13E37C68B19F9A831E8B2BC80414538737ECC316359F64736F PUSH13 0x63430007010033000000000000 ","sourceMap":"893:1008:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb457f626309347b2abe13e37c68b19f9a831e8b2bc80414538737ecc316359f64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB GASLIMIT PUSH32 0x626309347B2ABE13E37C68B19F9A831E8B2BC80414538737ECC316359F64736F PUSH13 0x63430007010033000000000000 ","sourceMap":"893:1008:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/InputHelpers.sol\":\"InputHelpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/helpers/InputHelpers.sol\":{\"keccak256\":\"0xb9f711fe78be500e514d52ab9d39319ab05019a82a70be8ca071d0c8a7e2cb4c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://33f606957103269b63c5892bb843ff17af87dfe9ecdb560c12ff0b9f29aaf3a9\",\"dweb:/ipfs/QmUS1HHLQHEnNVhbGidzwnfW7PLoQDv3oq85edWRXgEoeM\"]}},\"version\":1}"}},"contracts/helpers/OptionalOnlyCaller.sol":{"OptionalOnlyCaller":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"OnlyCallerOptIn","type":"event"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isOnlyCallerEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setOnlyCallerCheck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setOnlyCallerCheckWithSignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","isOnlyCallerEnabled(address)":"a1648aa5","setOnlyCallerCheck(bool)":"e811f44b","setOnlyCallerCheckWithSignature(address,bool,bytes)":"fcaa54ee"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"OnlyCallerOptIn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isOnlyCallerEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setOnlyCallerCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"setOnlyCallerCheckWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"isOnlyCallerEnabled(address)\":{\"details\":\"Returns true if caller verification is enabled for the given user, false otherwise.\"},\"setOnlyCallerCheck(bool)\":{\"details\":\"Enables / disables verification mechanism for caller.\",\"params\":{\"enabled\":\"- True if caller verification shall be enabled, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/OptionalOnlyCaller.sol\":\"OptionalOnlyCaller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol\":{\"keccak256\":\"0x7bab0494ee39fb988722edd20b3e5ff747b4acfe93a62d0726c5d63ae3f6e472\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e1d154f2fa589cbfa51338c285cf1862edcd6172fdbb26db17a6fcf9581ee2\",\"dweb:/ipfs/Qmbu8wgFjYqZvvv84MKbLiHMSKv3THZuFHCjRchPHLjCdY\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":{\"keccak256\":\"0xf82dab09a38bfdaf0983b69829de462c62359bc0bfaa37c4447408d93bd367c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0172b678ca594e95b7e5d881fd1280b3792052861ca98d77fa6194b524d188\",\"dweb:/ipfs/QmZ3bYEGTrfruXNYAzuFjJeg9Hx6UQw8ZyBzyM72BVGXfT\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/helpers/OptionalOnlyCaller.sol\":{\"keccak256\":\"0xc3a9b8d78e475f0290fa6f660b63f42ed4834dfcb61d7935b4b034fd31ef33f3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1793575373e2214ceee3aecbd68b8b1a3ff24070b63bf36acb5d7e2bbb700d71\",\"dweb:/ipfs/QmVGYzndTDp2z25g6WqPze1PV5okh7MGBkP3XL2CTggAcM\"]},\"contracts/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x028adc486d4df66cfc3157049ebd2772f1033be7159b27173225459d8d833e93\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5a67c6db6916df2ace5765995f45bf03e9ed07dd6e6164a196642ba4d52aa8b4\",\"dweb:/ipfs/QmYkhoC75YFywYqQPCMbj9iWyauVLczE7Db2NLisJR2vqu\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0xd0124aa262584bcdc163089547074252ace79201c02de2573fc8154cdc024b25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://333957f2afd70aef1757e5e84a8ed6e5048eb8233448a3c67e7111ae9f01b6bc\",\"dweb:/ipfs/QmSQcuZH5rkS8D1PGt6tJZpkPM8onWPwNe24iEVjZWidt4\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]}},\"version\":1}"}},"contracts/helpers/SignaturesValidator.sol":{"SignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Utility for signing Solidity function calls.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/SignaturesValidator.sol\":\"SignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":{\"keccak256\":\"0xf82dab09a38bfdaf0983b69829de462c62359bc0bfaa37c4447408d93bd367c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0172b678ca594e95b7e5d881fd1280b3792052861ca98d77fa6194b524d188\",\"dweb:/ipfs/QmZ3bYEGTrfruXNYAzuFjJeg9Hx6UQw8ZyBzyM72BVGXfT\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x028adc486d4df66cfc3157049ebd2772f1033be7159b27173225459d8d833e93\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5a67c6db6916df2ace5765995f45bf03e9ed07dd6e6164a196642ba4d52aa8b4\",\"dweb:/ipfs/QmYkhoC75YFywYqQPCMbj9iWyauVLczE7Db2NLisJR2vqu\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0xd0124aa262584bcdc163089547074252ace79201c02de2573fc8154cdc024b25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://333957f2afd70aef1757e5e84a8ed6e5048eb8233448a3c67e7111ae9f01b6bc\",\"dweb:/ipfs/QmSQcuZH5rkS8D1PGt6tJZpkPM8onWPwNe24iEVjZWidt4\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]}},\"version\":1}"}},"contracts/helpers/SingletonAuthentication.sol":{"SingletonAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getVault()":"8d928af8"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAuthorizer()\":{\"notice\":\"Returns the Authorizer\"},\"getVault()\":{\"notice\":\"Returns the Balancer Vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/SingletonAuthentication.sol\":\"SingletonAuthentication\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"contracts/helpers/Authentication.sol\":{\"keccak256\":\"0x1462b53900d425f1c7dcd53d928b6aa5d327cba8fa2bec27720603bb40d9be70\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad188b1ccd7b1353665228bdc77de9c25e426553f3ec518006aa83d1300b6bf2\",\"dweb:/ipfs/QmaBTVdpM5jSucrVJHU37ZUHdZXEWPYMLkbB6hRiEwHcKN\"]},\"contracts/helpers/SingletonAuthentication.sol\":{\"keccak256\":\"0xb903f5d3f429ba5322a01af059cfd5b46f87d9a352a0064598c19e0536f150bc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0c5a8ed08c0ec6664e66b1e21d5536bf80606dad8ba428a7ae8146d911a51e3\",\"dweb:/ipfs/QmPqX5qD9UnZovLexNZettjyE98gjcQzGjRFodb2m82VVE\"]}},\"version\":1}"}},"contracts/helpers/TemporarilyPausable.sol":{"PausableConstants":{"abi":[{"inputs":[],"name":"MAX_BUFFER_PERIOD_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PAUSE_WINDOW_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60a5610024600b82828239805160001a607314601757fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80638b19548d146042578063fc5e93fe14605a575b600080fd5b60486060565b60408051918252519081900360200190f35b60486067565b6276a70081565b630163f5008156fea264697066735822122030c0384b3ee8625273c784c06f414b63a1d253ef0f4131bac0a92404ae5901bb64736f6c63430007010033","opcodes":"PUSH1 0xA5 PUSH2 0x24 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x17 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B19548D EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0xFC5E93FE EQ PUSH1 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x48 PUSH1 0x60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x48 PUSH1 0x67 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH4 0x163F500 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xC0 CODESIZE 0x4B RETURNDATACOPY 0xE8 PUSH3 0x5273C7 DUP5 0xC0 PUSH16 0x414B63A1D253EF0F4131BAC0A92404AE MSIZE ADD 0xBB PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"5409:161:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c80638b19548d146042578063fc5e93fe14605a575b600080fd5b60486060565b60408051918252519081900360200190f35b60486067565b6276a70081565b630163f5008156fea264697066735822122030c0384b3ee8625273c784c06f414b63a1d253ef0f4131bac0a92404ae5901bb64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B19548D EQ PUSH1 0x42 JUMPI DUP1 PUSH4 0xFC5E93FE EQ PUSH1 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x48 PUSH1 0x60 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x48 PUSH1 0x67 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH4 0x163F500 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xC0 CODESIZE 0x4B RETURNDATACOPY 0xE8 PUSH3 0x5273C7 DUP5 0xC0 PUSH16 0x414B63A1D253EF0F4131BAC0A92404AE MSIZE ADD 0xBB PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"5409:161:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5507:60;;;:::i;:::-;;;;;;;;;;;;;;;;5441;;;:::i;5507:::-;5560:7;5507:60;:::o;5441:::-;5493:8;5441:60;:::o"},"methodIdentifiers":{"MAX_BUFFER_PERIOD_DURATION()":"8b19548d","MAX_PAUSE_WINDOW_DURATION()":"fc5e93fe"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MAX_BUFFER_PERIOD_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PAUSE_WINDOW_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Keep the maximum durations in a single place.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/TemporarilyPausable.sol\":\"PausableConstants\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"contracts/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0x5931cd930a053c327257b9d246c583fe195b2ac5adffe3485e1be354b3ec298b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a0f50399308e97a4c560397bc0599ff77100ac472a6281d894d1ad536b61e1df\",\"dweb:/ipfs/QmeqJpptHFPnvtAHMJDfCYPB2PLnDrFUMLi2fNb3njmpt7\"]}},\"version\":1}"},"TemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows for a contract to be paused during an initial period after deployment, disabling functionality. Can be used as an emergency switch in case a security vulnerability or threat is identified. The contract can only be paused during the Pause Window, a period that starts at deployment. It can also be unpaused and repaused any number of times during this period. This is intended to serve as a safety measure: it lets system managers react quickly to potentially dangerous situations, knowing that this action is reversible if careful analysis later determines there was a false alarm. If the contract is paused when the Pause Window finishes, it will remain in the paused state through an additional Buffer Period, after which it will be automatically unpaused forever. This is to ensure there is always enough time to react to an emergency, even if the threat is discovered shortly before the Pause Window expires. Note that since the contract can only be paused within the Pause Window, unpausing during the Buffer Period is irreversible.\",\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/TemporarilyPausable.sol\":\"TemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"contracts/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0x5931cd930a053c327257b9d246c583fe195b2ac5adffe3485e1be354b3ec298b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a0f50399308e97a4c560397bc0599ff77100ac472a6281d894d1ad536b61e1df\",\"dweb:/ipfs/QmeqJpptHFPnvtAHMJDfCYPB2PLnDrFUMLi2fNb3njmpt7\"]}},\"version\":1}"}},"contracts/helpers/WordCodec.sol":{"WordCodec":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7cc8fee8c9664caf4ffcf74e96ebc7815b5e378847856cf7e1bb85536626a4264736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xCC DUP16 0xEE DUP13 SWAP7 PUSH5 0xCAF4FFCF74 0xE9 PUSH15 0xBC7815B5E378847856CF7E1BB85536 PUSH3 0x6A4264 PUSH20 0x6F6C634300070100330000000000000000000000 ","sourceMap":"2017:7658:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7cc8fee8c9664caf4ffcf74e96ebc7815b5e378847856cf7e1bb85536626a4264736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xCC DUP16 0xEE DUP13 SWAP7 PUSH5 0xCAF4FFCF74 0xE9 PUSH15 0xBC7815B5E378847856CF7E1BB85536 PUSH3 0x6A4264 PUSH20 0x6F6C634300070100330000000000000000000000 ","sourceMap":"2017:7658:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for encoding and decoding values stored inside a 256 bit word. Typically used to pack multiple values in a single storage slot, saving gas by performing less storage accesses. Each value is defined by its size and the least significant bit in the word, also known as offset. For example, two 128 bit values may be encoded in a word by assigning one an offset of 0, and the other an offset of 128. We could use Solidity structs to pack values together in a single storage slot instead of relying on a custom and error-prone library, but unfortunately Solidity only allows for structs to live in either storage, calldata or memory. Because a memory struct uses not just memory but also a slot in the stack (to store its memory location), using memory for word-sized values (i.e. of 256 bits or less) is strictly less gas performant, and doesn't even prevent stack-too-deep issues. This is compounded by the fact that Balancer contracts typically are memory-intensive, and the cost of accesing memory increases quadratically with the number of allocated words. Manual packing and unpacking is therefore the preferred approach.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/WordCodec.sol\":\"WordCodec\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/WordCodec.sol\":{\"keccak256\":\"0x815cb69dc384b4ee082f87c06efd93c4ac702a5f704152770e2b30010f3527f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e5d48f84ec5d21673324ef9e84cb70bb9ce4264cb6678b9200a80a8929f57651\",\"dweb:/ipfs/QmT7cTTCAxU5pVFL1zxFVJF4FNhsTy2eFvu5oFF6eJTxdA\"]},\"contracts/math/Math.sol\":{\"keccak256\":\"0xfa4216e1e8089d1141ed73af197c4a390b6b4722c91821ad12dacd3cf81739f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f30785ec65a1a46181b4724398f39157ba11967327e770b29174b130d2dfe8f\",\"dweb:/ipfs/Qmem8qK7ExQnQ24Def6FEmLHcjC69JbvPXcnwdcosf7LNM\"]}},\"version\":1}"}},"contracts/helpers/WordCodecHelpers.sol":{"WordCodecHelpers":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220934e665e11052cc35c63ff1be5dd3189da1e2c13e57a21b4b90d817bcb83e7c364736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0x4E PUSH7 0x5E11052CC35C63 SELFDESTRUCT SHL 0xE5 0xDD BALANCE DUP10 0xDA 0x1E 0x2C SGT 0xE5 PUSH27 0x21B4B90D817BCB83E7C364736F6C63430007010033000000000000 ","sourceMap":"713:721:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220934e665e11052cc35c63ff1be5dd3189da1e2c13e57a21b4b90d817bcb83e7c364736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0x4E PUSH7 0x5E11052CC35C63 SELFDESTRUCT SHL 0xE5 0xDD BALANCE DUP10 0xDA 0x1E 0x2C SGT 0xE5 PUSH27 0x21B4B90D817BCB83E7C364736F6C63430007010033000000000000 ","sourceMap":"713:721:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/WordCodecHelpers.sol\":\"WordCodecHelpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/helpers/WordCodecHelpers.sol\":{\"keccak256\":\"0xd8529d7a5e1a3ee90a8847df408e88e60a7b0f7a75737f6053f8ee7be34e2cee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f61c347b302516c238c44357a328f1af874efb65504e6bd2d4bff8726cc9cb75\",\"dweb:/ipfs/QmWjgKE5eNFHkP5VVrd9wQUkaaXP5gUsu7dBYT2EfyxYuF\"]}},\"version\":1}"}},"contracts/math/FixedPoint.sol":{"FixedPoint":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209520a70f83533bed200e75fb79f132a81885d5a603d84cca0f5ac8d4c8d845d364736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 KECCAK256 0xA7 0xF DUP4 MSTORE8 EXTCODESIZE 0xED KECCAK256 0xE PUSH22 0xFB79F132A81885D5A603D84CCA0F5AC8D4C8D845D364 PUSH20 0x6F6C634300070100330000000000000000000000 ","sourceMap":"888:5321:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209520a70f83533bed200e75fb79f132a81885d5a603d84cca0f5ac8d4c8d845d364736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 KECCAK256 0xA7 0xF DUP4 MSTORE8 EXTCODESIZE 0xED KECCAK256 0xE PUSH22 0xFB79F132A81885D5A603D84CCA0F5AC8D4C8D845D364 PUSH20 0x6F6C634300070100330000000000000000000000 ","sourceMap":"888:5321:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/math/FixedPoint.sol\":\"FixedPoint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/math/FixedPoint.sol\":{\"keccak256\":\"0x596f4c9f0ac07a447dca74c20bffb5827dc2dc200b99181fc64d7ff6c89070a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7b625c6bfe363603bb9facfbe0e1198d5e7c369f713fdd1e729072ccdda0a5af\",\"dweb:/ipfs/QmcGpAUfw2EvJP4TEX6TUkXvfJynQaP4ntiL64cM5KrnbN\"]},\"contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x1ef044eb991d5278b9edfe159e3cd4824733d5ed8e6a9de3f4f57d6bf65be94d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168d31e5d2a92c9eeb0b50be5fb859d17746ad4ce0ee97552befce65dc6d726a\",\"dweb:/ipfs/QmQLyFUS1PTkkKUKKXU5Z7BoMPoQGdcvgpMUtJ6LaWMjrW\"]}},\"version\":1}"}},"contracts/math/LogExpMath.sol":{"LogExpMath":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff4ac32d6ef44cfa64dda48c865eace9dbe74b8b7c5878ec0ca392ce0e94a61064736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0x4A 0xC3 0x2D PUSH15 0xF44CFA64DDA48C865EACE9DBE74B8B PUSH29 0x5878EC0CA392CE0E94A61064736F6C6343000701003300000000000000 ","sourceMap":"1681:19465:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff4ac32d6ef44cfa64dda48c865eace9dbe74b8b7c5878ec0ca392ce0e94a61064736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0x4A 0xC3 0x2D PUSH15 0xF44CFA64DDA48C865EACE9DBE74B8B PUSH29 0x5878EC0CA392CE0E94A61064736F6C6343000701003300000000000000 ","sourceMap":"1681:19465:31:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Fernando Martinelli - @fernandomartinelliSergio Yuhjtman - @sergioyuhjtmanDaniel Fernandez - @dmf7z\",\"details\":\"Exponentiation and logarithm functions for 18 decimal fixed point numbers (both base and exponent/argument). Exponentiation and logarithm with arbitrary bases (x^y and log_x(y)) are implemented by conversion to natural exponentiation and logarithm (where the base is Euler's number).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/math/LogExpMath.sol\":\"LogExpMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x1ef044eb991d5278b9edfe159e3cd4824733d5ed8e6a9de3f4f57d6bf65be94d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168d31e5d2a92c9eeb0b50be5fb859d17746ad4ce0ee97552befce65dc6d726a\",\"dweb:/ipfs/QmQLyFUS1PTkkKUKKXU5Z7BoMPoQGdcvgpMUtJ6LaWMjrW\"]}},\"version\":1}"}},"contracts/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7feef7060f3f603ec649d5384bd03fec8e6cf961bf61261d9e77751d53fd91a64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 INVALID 0xEF PUSH17 0x60F3F603EC649D5384BD03FEC8E6CF961B 0xF6 SLT PUSH2 0xD9E7 PUSH24 0x51D53FD91A64736F6C634300070100330000000000000000 ","sourceMap":"290:2995:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e7feef7060f3f603ec649d5384bd03fec8e6cf961bf61261d9e77751d53fd91a64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 INVALID 0xEF PUSH17 0x60F3F603EC649D5384BD03FEC8E6CF961B 0xF6 SLT PUSH2 0xD9E7 PUSH24 0x51D53FD91A64736F6C634300070100330000000000000000 ","sourceMap":"290:2995:32:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Adapted from OpenZeppelin's SafeMath library.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/math/Math.sol\":{\"keccak256\":\"0xfa4216e1e8089d1141ed73af197c4a390b6b4722c91821ad12dacd3cf81739f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f30785ec65a1a46181b4724398f39157ba11967327e770b29174b130d2dfe8f\",\"dweb:/ipfs/Qmem8qK7ExQnQ24Def6FEmLHcjC69JbvPXcnwdcosf7LNM\"]}},\"version\":1}"}},"contracts/openzeppelin/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ced3f09aabffa0537fe00862280389d7f615d2e131932b704f77848bd571beb64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xED EXTCODEHASH MULMOD 0xAA 0xBF STATICCALL SDIV CALLDATACOPY INVALID STOP DUP7 0x22 DUP1 CODESIZE SWAP14 PUSH32 0x615D2E131932B704F77848BD571BEB64736F6C63430007010033000000000000 ","sourceMap":"439:5334:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ced3f09aabffa0537fe00862280389d7f615d2e131932b704f77848bd571beb64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xED EXTCODEHASH MULMOD 0xAA 0xBF STATICCALL SDIV CALLDATACOPY INVALID STOP DUP7 0x22 DUP1 CODESIZE SWAP14 PUSH32 0x615D2E131932B704F77848BD571BEB64736F6C63430007010033000000000000 ","sourceMap":"439:5334:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0xd0124aa262584bcdc163089547074252ace79201c02de2573fc8154cdc024b25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://333957f2afd70aef1757e5e84a8ed6e5048eb8233448a3c67e7111ae9f01b6bc\",\"dweb:/ipfs/QmSQcuZH5rkS8D1PGt6tJZpkPM8onWPwNe24iEVjZWidt4\"]}},\"version\":1}"}},"contracts/openzeppelin/Create2.sol":{"Create2":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d66c0f303a82cc7443cc37d630abdd2a0010a7154656ebf89a1afa99c8b552fc64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH13 0xF303A82CC7443CC37D630ABDD 0x2A STOP LT 0xA7 ISZERO CHAINID JUMP 0xEB 0xF8 SWAP11 BYTE STATICCALL SWAP10 0xC8 0xB5 MSTORE 0xFC PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"518:2034:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d66c0f303a82cc7443cc37d630abdd2a0010a7154656ebf89a1afa99c8b552fc64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH13 0xF303A82CC7443CC37D630ABDD 0x2A STOP LT 0xA7 ISZERO CHAINID JUMP 0xEB 0xF8 SWAP11 BYTE STATICCALL SWAP10 0xC8 0xB5 MSTORE 0xFC PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"518:2034:34:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/Create2.sol\":\"Create2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/Create2.sol\":{\"keccak256\":\"0xd2ca43675be6be88e3dbf75c899f8dbc9e020e3a73b5ba26174cea143105e9cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c06b065fce00af8f7099c878bfc0bb622e23a1d8b5afbab9e412e5ee32e74bae\",\"dweb:/ipfs/QmXYFvBZx12edZZnXr4exdjm3ZSLSqsoq6Nr2UHhinUxgZ\"]}},\"version\":1}"}},"contracts/openzeppelin/EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]}},\"version\":1}"}},"contracts/openzeppelin/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610b0c380380610b0c8339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b50604052505082516101a2915060039060208501906101cb565b5080516101b69060049060208401906101cb565b50506005805460ff191660121790555061025e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020c57805160ff1916838001178555610239565b82800160010185558215610239579182015b8281111561023957825182559160200191906001019061021e565b50610245929150610249565b5090565b5b80821115610245576000815560010161024a565b61089f8061026d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a06103fe565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610404565b6101fd610465565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104b1565b6100d66104d9565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610558565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059e565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f53384846105e3565b50600192915050565b60025490565b6000610411848484610652565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461045b918691610456908661019e61077b565b6105e3565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f59185906104569086610791565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f5918590610456908661019f61077b565b60006103f5338484610652565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61067673ffffffffffffffffffffffffffffffffffffffff841615156101986107aa565b61069a73ffffffffffffffffffffffffffffffffffffffff831615156101996107aa565b6106a58383836107bc565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106d890826101a061077b565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546107149082610791565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061078a84841115836107aa565b5050900390565b60008282016107a384821015836107aa565b9392505050565b816107b8576107b8816107c1565b5050565b505050565b6107eb817f42414c00000000000000000000000000000000000000000000000000000000006107ee565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122068ca83190559c09f1bef8be9daa85c88ddf4b2e134fbff05fb8c68e3909ba2b764736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB0C CODESIZE SUB DUP1 PUSH2 0xB0C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x188 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A2 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1CB JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1CB JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x25E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x20C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x239 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x239 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x239 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21E JUMP JUMPDEST POP PUSH2 0x245 SWAP3 SWAP2 POP PUSH2 0x249 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24A JUMP JUMPDEST PUSH2 0x89F DUP1 PUSH2 0x26D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x5E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP5 DUP5 PUSH2 0x652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x45B SWAP2 DUP7 SWAP2 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x77B JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x791 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x676 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x69A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x6A5 DUP4 DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6D8 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x77B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x714 SWAP1 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7A3 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7B8 JUMPI PUSH2 0x7B8 DUP2 PUSH2 0x7C1 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7EB DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xCA83190559C09F1BEF DUP12 0xE9 0xDA 0xA8 0x5C DUP9 0xDD DELEGATECALL 0xB2 0xE1 CALLVALUE 0xFB SELFDESTRUCT SDIV 0xFB DUP13 PUSH9 0xE3909BA2B764736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"1427:10003:36:-:0;;;2052:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2052:137:36;;;;;;;;;;-1:-1:-1;2052:137:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2052:137:36;;;;;;;;;;-1:-1:-1;2052:137:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2052:137:36;;-1:-1:-1;;2118:13:36;;;;-1:-1:-1;2118:5:36;;:13;;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;1427:10003:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1427:10003:36;;;-1:-1:-1;1427:10003:36;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a06103fe565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610404565b6101fd610465565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104b1565b6100d66104d9565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610558565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059e565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f53384846105e3565b50600192915050565b60025490565b6000610411848484610652565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461045b918691610456908661019e61077b565b6105e3565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f59185906104569086610791565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916103f5918590610456908661019f61077b565b60006103f5338484610652565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61067673ffffffffffffffffffffffffffffffffffffffff841615156101986107aa565b61069a73ffffffffffffffffffffffffffffffffffffffff831615156101996107aa565b6106a58383836107bc565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106d890826101a061077b565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546107149082610791565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061078a84841115836107aa565b5050900390565b60008282016107a384821015836107aa565b9392505050565b816107b8576107b8816107c1565b5050565b505050565b6107eb817f42414c00000000000000000000000000000000000000000000000000000000006107ee565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122068ca83190559c09f1bef8be9daa85c88ddf4b2e134fbff05fb8c68e3909ba2b764736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x5E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP5 DUP5 PUSH2 0x652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x45B SWAP2 DUP7 SWAP2 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x77B JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x791 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x3F5 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x652 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x676 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x69A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x6A5 DUP4 DUP4 DUP4 PUSH2 0x7BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6D8 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x77B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x714 SWAP1 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7A3 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x7AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7B8 JUMPI PUSH2 0x7B8 DUP2 PUSH2 0x7C1 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7EB DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xCA83190559C09F1BEF DUP12 0xE9 0xDA 0xA8 0x5C DUP9 0xDD DELEGATECALL 0xB2 0xE1 CALLVALUE 0xFB SELFDESTRUCT SDIV 0xFB DUP13 PUSH9 0xE3909BA2B764736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"1427:10003:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:164;;;;;;;;;;;;;;;;-1:-1:-1;4857:164:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6269:211;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;4022:117::-;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2448:85::-;;;:::i;6967:312::-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;4570:149::-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;2254:81::-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;4857:164::-;4940:4;4956:37;4965:10;4977:7;4986:6;4956:8;:37::i;:::-;-1:-1:-1;5010:4:36;4857:164;;;;:::o;3500:106::-;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;6269:211::-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;4022:117::-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2448:85::-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6967:312;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;4570:149::-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;10034:213::-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;966:167::-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;11245:183:36:-;;;;:::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]}},\"version\":1}"}},"contracts/openzeppelin/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/ERC20Burnable.sol\":{\"keccak256\":\"0x6df4b13f2ea83b6b7fd766ed4d2c9edbfed217825cb867ecf92ac11af44b9ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f644d0949a840356fd81eaf45a989ede75abe1e653ce1d5e59e82b7a13a97b4e\",\"dweb:/ipfs/QmUNEpURhR9LA8gwmvM6vbqmxcTVkiXcGHPSL5oCVCKVPZ\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]}},\"version\":1}"}},"contracts/openzeppelin/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol\":{\"keccak256\":\"0xeb8a588cfca3dddd2da141ec6adc1672646186f6dbd1e707ec9b1def45e59c25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec0afd86c576a818b61a5cb6e4d3bf946b73ce04728a2e53b3bfc7f8522b1aa1\",\"dweb:/ipfs/QmS81F4CQ7nTqamsdHaN9AGwYRguw5fCZ5EM9jtVXT7G5U\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/ERC20Permit.sol\":{\"keccak256\":\"0xbd474d9fb6f51b241ac85b659eabed4bac9a029f8565c64bc285edf04ef591cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334c367ffb8ff1df7f8dfebe67d0d7bf72cf39306481dd32f98b5a52033082b0\",\"dweb:/ipfs/QmdEmGyCohoDBhHqBaV6JbzYEXUqhRzVjLCPCmc81HfqUs\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]}},\"version\":1}"}},"contracts/openzeppelin/EnumerableMap.sol":{"EnumerableMap":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d24cc0987d9dd5582504729c4fd6e76a58c9ca06b869da1008481949a658df9e64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0x4C 0xC0 SWAP9 PUSH30 0x9DD5582504729C4FD6E76A58C9CA06B869DA1008481949A658DF9E64736F PUSH13 0x63430007010033000000000000 ","sourceMap":"1507:14166:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d24cc0987d9dd5582504729c4fd6e76a58c9ca06b869da1008481949a658df9e64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0x4C 0xC0 SWAP9 PUSH30 0x9DD5582504729C4FD6E76A58C9CA06B869DA1008481949A658DF9E64736F PUSH13 0x63430007010033000000000000 ","sourceMap":"1507:14166:39:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x5d365300963a21f5d9bd8c7c514a859d56da8f62fb076a79581029b4291a9251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3536afab3d7b6c632a137f38e3e6ea0a0cf0bc2a31c23dd3c26ce266828699ef\",\"dweb:/ipfs/QmV8pciSxGX5hngLoUiQveEvqAJh8hUSVtoNbnvGBicbN3\"]}},\"version\":1}"}},"contracts/openzeppelin/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e751f507b8b70b3d117977f8aadaaccaa551a0277b4d657fea1c59282df58d8f64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 MLOAD CREATE2 SMOD 0xB8 0xB7 SIGNEXTEND RETURNDATASIZE GT PUSH26 0x77F8AADAACCAA551A0277B4D657FEA1C59282DF58D8F64736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"1210:8346:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e751f507b8b70b3d117977f8aadaaccaa551a0277b4d657fea1c59282df58d8f64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 MLOAD CREATE2 SMOD 0xB8 0xB7 SIGNEXTEND RETURNDATASIZE GT PUSH26 0x77F8AADAACCAA551A0277B4D657FEA1C59282DF58D8F64736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"1210:8346:40:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/EnumerableSet.sol\":{\"keccak256\":\"0xa644f3f9066d6a300bd7c1c214ce55c1569bb5ec54815d49c5c7a1a63cd03df3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ee2467e6a0f340d64738d7a03a407e88caa5ee31cb3c8bd6990985f1891acc\",\"dweb:/ipfs/QmP7s6CSdDLGFjNxi9Q8GEVJFiD6QkeseGD857bPE7E7Ki\"]}},\"version\":1}"}},"contracts/openzeppelin/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x6449bae6d44f06fcea030c000121b504f057359be3c75cd443e717bbedd1cf02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b61a14ab4728ebae1d8330c8b985e91fa5976f74b23500b298855833d74dbcdd\",\"dweb:/ipfs/QmbgPhXRmneXLxrtpTV1LHQQXcHpzphmFoES81HApWe6ZK\"]}},\"version\":1}"}},"contracts/openzeppelin/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0x5307df1dd5e4a781ced6167873d3a2ea08d000741f1db8bcf5e12fde4b1a098d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669e378e0dd6083d04a6878f2c5b871ddf91e1d9c5c24e6c814589948ad34133\",\"dweb:/ipfs/QmcysgpZHtQgqo6JqYMp3o5GxWy2y5hbK3RDu2kSSgedHv\"]}},\"version\":1}"}},"contracts/openzeppelin/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220da1660a83073059fe112225b4d19c1af16923526ee20ac72bffd73564658fadf64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA AND PUSH1 0xA8 ADDRESS PUSH20 0x59FE112225B4D19C1AF16923526EE20AC72BFFD PUSH20 0x564658FADF64736F6C6343000701003300000000 ","sourceMap":"860:738:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220da1660a83073059fe112225b4d19c1af16923526ee20ac72bffd73564658fadf64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA AND PUSH1 0xA8 ADDRESS PUSH20 0x59FE112225B4D19C1AF16923526EE20AC72BFFD PUSH20 0x564658FADF64736F6C6343000701003300000000 ","sourceMap":"860:738:43:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/SafeCast.sol\":{\"keccak256\":\"0x900f61d39cfbb66db432105fdd524892b4d36fd57021231a7a011ecf2e06d848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9853feb7f6ea54eed91e45cc9f833062a768365295c64867ac7e83926cb3a25\",\"dweb:/ipfs/Qmeo7jrEjenzBXQ8pSDj76CqVwHg9rhRZKiPfDpLuHk42Q\"]}},\"version\":1}"}},"contracts/openzeppelin/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d312f8efe767adb50554003e5419832e82a0044fdba49fd4fedb85280ab5bcaf64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SLT 0xF8 0xEF 0xE7 PUSH8 0xADB50554003E5419 DUP4 0x2E DUP3 LOG0 DIV 0x4F 0xDB LOG4 SWAP16 0xD4 INVALID 0xDB DUP6 0x28 EXP 0xB5 0xBC 0xAF PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"976:2264:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d312f8efe767adb50554003e5419832e82a0044fdba49fd4fedb85280ab5bcaf64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SLT 0xF8 0xEF 0xE7 PUSH8 0xADB50554003E5419 DUP4 0x2E DUP3 LOG0 DIV 0x4F 0xDB LOG4 SWAP16 0xD4 INVALID 0xDB DUP6 0x28 EXP 0xB5 0xBC 0xAF PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"976:2264:44:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0x69d31837c1aefe83a3502a96c911bf9ec1680bfb3400f1197bd0481509ddabcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a77f611b44151bd12b432fc69ed7c0b33c413f87fd7a91f29e27ef9910cdf1cc\",\"dweb:/ipfs/QmcwJDRhVuBZnqa6681E9HrQiD9Am3gPih84R4hCXUv1E2\"]}},\"version\":1}"}},"contracts/openzeppelin/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dacf5a0070c1f15aa960d53153b9e9956544a6e756289781566d24ac2bc407ff64736f6c63430007010033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xCF GAS STOP PUSH17 0xC1F15AA960D53153B9E9956544A6E75628 SWAP8 DUP2 JUMP PUSH14 0x24AC2BC407FF64736F6C63430007 ADD STOP CALLER ","sourceMap":"714:1310:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dacf5a0070c1f15aa960d53153b9e9956544a6e756289781566d24ac2bc407ff64736f6c63430007010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xCF GAS STOP PUSH17 0xC1F15AA960D53153B9E9956544A6E75628 SWAP8 DUP2 JUMP PUSH14 0x24AC2BC407FF64736F6C63430007 ADD STOP CALLER ","sourceMap":"714:1310:45:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]}},\"version\":1}"}},"contracts/test/BalancerErrorsMock.sol":{"BalancerErrorsMock":{"abi":[{"inputs":[{"internalType":"uint256","name":"code","type":"uint256"}],"name":"fail","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"code","type":"uint256"},{"internalType":"bytes3","name":"prefix","type":"bytes3"}],"name":"failWithPrefix","outputs":[],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610190806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063132e4f3c1461003b5780639aac0d2d1461005a575b600080fd5b6100586004803603602081101561005157600080fd5b503561009f565b005b6100586004803603604081101561007057600080fd5b50803590602001357fffffff0000000000000000000000000000000000000000000000000000000000166100ab565b6100a8816100b9565b50565b6100b582826100df565b5050565b6100a8817f42414c00000000000000000000000000000000000000000000000000000000005b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220aa9497066a344039f3f104252a2f929f1ce9cb465afdbaa1839cd970566f8cc064736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x132E4F3C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9AAC0D2D EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH32 0xFFFFFF0000000000000000000000000000000000000000000000000000000000 AND PUSH2 0xAB JUMP JUMPDEST PUSH2 0xA8 DUP2 PUSH2 0xB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB5 DUP3 DUP3 PUSH2 0xDF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA8 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA SWAP5 SWAP8 MOD PUSH11 0x344039F3F104252A2F929F SHR 0xE9 0xCB CHAINID GAS REVERT 0xBA LOG1 DUP4 SWAP13 0xD9 PUSH17 0x566F8CC064736F6C634300070100330000 ","sourceMap":"805:219:46:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063132e4f3c1461003b5780639aac0d2d1461005a575b600080fd5b6100586004803603602081101561005157600080fd5b503561009f565b005b6100586004803603604081101561007057600080fd5b50803590602001357fffffff0000000000000000000000000000000000000000000000000000000000166100ab565b6100a8816100b9565b50565b6100b582826100df565b5050565b6100a8817f42414c00000000000000000000000000000000000000000000000000000000005b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220aa9497066a344039f3f104252a2f929f1ce9cb465afdbaa1839cd970566f8cc064736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x132E4F3C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9AAC0D2D EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH32 0xFFFFFF0000000000000000000000000000000000000000000000000000000000 AND PUSH2 0xAB JUMP JUMPDEST PUSH2 0xA8 DUP2 PUSH2 0xB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB5 DUP3 DUP3 PUSH2 0xDF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA8 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA SWAP5 SWAP8 MOD PUSH11 0x344039F3F104252A2F929F SHR 0xE9 0xCB CHAINID GAS REVERT 0xBA LOG1 DUP4 SWAP13 0xD9 PUSH17 0x566F8CC064736F6C634300070100330000 ","sourceMap":"805:219:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;839:72;;;;;;;;;;;;;;;;-1:-1:-1;839:72:46;;:::i;:::-;;917:105;;;;;;;;;;;;;;;;-1:-1:-1;917:105:46;;;;;;;;;:::i;839:72::-;891:13;899:4;891:7;:13::i;:::-;839:72;:::o;917:105::-;994:21;1002:4;1008:6;994:7;:21::i;:::-;917:105;;:::o;1459:126:0:-;1506:28;1514:9;1506:28;1692:3378;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"fail(uint256)":"132e4f3c","failWithPrefix(uint256,bytes3)":"9aac0d2d"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"}],\"name\":\"fail\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"code\",\"type\":\"uint256\"},{\"internalType\":\"bytes3\",\"name\":\"prefix\",\"type\":\"bytes3\"}],\"name\":\"failWithPrefix\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BalancerErrorsMock.sol\":\"BalancerErrorsMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/test/BalancerErrorsMock.sol\":{\"keccak256\":\"0x37e8562a968ea04c7cddfe20e1554ba62fe6e338cc2409ad8667dcb9dec32e12\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bb9fffc6059b30a599ffccda0bb2e84d8ae2bcc29279ad1180db0d2525c29a70\",\"dweb:/ipfs/QmUjYpnPdmF4CrtnjCkiMh5TrqKXkppDouBe13PJoYcTpU\"]}},\"version\":1}"}},"contracts/test/BreakableERC20Mock.sol":{"BreakableERC20Mock":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isBroken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_isBroken","type":"bool"}],"name":"setIsBroken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000e5338038062000e53833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001b8906003906020850190620001e7565b508051620001ce906004906020840190620001e7565b50506005805460ff191660121790555062000283915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022a57805160ff19168380011785556200025a565b828001600101855582156200025a579182015b828111156200025a5782518255916020019190600101906200023d565b50620002689291506200026c565b5090565b5b808211156200026857600081556001016200026d565b610bc080620002936000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80633ac15e6f1161008c57806395d89b411161006657806395d89b4114610302578063a457c2d71461030a578063a9059cbb14610343578063dd62ed3e1461037c576100ea565b80633ac15e6f1461027557806340c10f191461029657806370a08231146102cf576100ea565b806318160ddd116100c857806318160ddd146101c157806323b872dd146101db578063313ce5671461021e578063395093511461023c576100ea565b806306fdde03146100ef578063095ea7b31461016c5780630dfbe1af146101b9575b600080fd5b6100f76103b7565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a56004803603604081101561018257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046b565b604080519115158252519081900360200190f35b6101a56104f6565b6101c9610504565b60408051918252519081900360200190f35b6101a5600480360360608110156101f157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561050a565b610226610597565b6040805160ff9092168252519081900360200190f35b6101a56004803603604081101561025257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105a0565b6102946004803603602081101561028b57600080fd5b503515156105f1565b005b610294600480360360408110156102ac57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610628565b6101c9600480360360208110156102e557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610636565b6100f761065e565b6101a56004803603604081101561032057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106dd565b6101a56004803603604081101561035957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610723565b6101c96004803603604081101561039257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107a7565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b5050505050905090565b600554600090610100900460ff16156104e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6104ef83836107df565b9392505050565b600554610100900460ff1681565b60025490565b600554600090610100900460ff161561058457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e0000000000000000000000000000000000000000604482015290519081900360640190fd5b61058f8484846107ec565b949350505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105e89185906105e39086610848565b61085a565b50600192915050565b60058054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b61063282826108c9565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104615780601f1061043657610100808354040283529160200191610461565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105e89185906105e3908661019f610982565b600554600090610100900460ff161561079d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6104ef8383610998565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60006105e833848461085a565b60006107f98484846109a1565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461083e9186916105e3908661019e610982565b5060019392505050565b60008282016104ef8482101583610aca565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6108d560008383610ad8565b6108ef6108ea826108e4610504565b90610848565b610add565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461091f9082610848565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006109918484111583610aca565b5050900390565b60006105e83384845b6109c573ffffffffffffffffffffffffffffffffffffffff84161515610198610aca565b6109e973ffffffffffffffffffffffffffffffffffffffff83161515610199610aca565b6109f4838383610ad8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610a2790826101a0610982565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a639082610848565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b816106325761063281610ae2565b505050565b600255565b610b0c817f42414c0000000000000000000000000000000000000000000000000000000000610b0f565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212203020a73e8cb2009338a2c51d3e93be88c1d66a67f8ccff79a502b24775dce59964736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE53 CODESIZE SUB DUP1 PUSH3 0xE53 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH3 0x1B8 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CE SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x283 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x22A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x25A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x25A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x25A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x23D JUMP JUMPDEST POP PUSH3 0x268 SWAP3 SWAP2 POP PUSH3 0x26C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x268 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x26D JUMP JUMPDEST PUSH2 0xBC0 DUP1 PUSH3 0x293 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AC15E6F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37C JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x3AC15E6F EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x23C JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xDFBE1AF EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x50A JUMP JUMPDEST PUSH2 0x226 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x628 JUMP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x636 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x723 JUMP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x461 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x436 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x461 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x444 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EF DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x58F DUP5 DUP5 DUP5 PUSH2 0x7EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5E8 SWAP2 DUP6 SWAP1 PUSH2 0x5E3 SWAP1 DUP7 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x632 DUP3 DUP3 PUSH2 0x8C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x461 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x436 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x461 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5E8 SWAP2 DUP6 SWAP1 PUSH2 0x5E3 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x982 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x79D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EF DUP4 DUP4 PUSH2 0x998 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E8 CALLER DUP5 DUP5 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x83E SWAP2 DUP7 SWAP2 PUSH2 0x5E3 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x982 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x4EF DUP5 DUP3 LT ISZERO DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8D5 PUSH1 0x0 DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x8EF PUSH2 0x8EA DUP3 PUSH2 0x8E4 PUSH2 0x504 JUMP JUMPDEST SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x91F SWAP1 DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0xACA JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E8 CALLER DUP5 DUP5 JUMPDEST PUSH2 0x9C5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x9E9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x9F4 DUP4 DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA27 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x982 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA63 SWAP1 DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x632 JUMPI PUSH2 0x632 DUP2 PUSH2 0xAE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xB0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS KECCAK256 0xA7 RETURNDATACOPY DUP13 0xB2 STOP SWAP4 CODESIZE LOG2 0xC5 SAR RETURNDATACOPY SWAP4 0xBE DUP9 0xC1 0xD6 PUSH11 0x67F8CCFF79A502B24775DC 0xE5 SWAP10 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"870:995:47:-:0;;;940:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:76:47;;;;;;;;;;-1:-1:-1;940:76:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:76:47;;;;;;;;;;-1:-1:-1;940:76:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:76:47;;-1:-1:-1;;2118:13:36;;1000:4:47;;-1:-1:-1;1006:6:47;;2118:13:36;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;870:995:47;;-1:-1:-1;;870:995:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;870:995:47;;;-1:-1:-1;870:995:47;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c80633ac15e6f1161008c57806395d89b411161006657806395d89b4114610302578063a457c2d71461030a578063a9059cbb14610343578063dd62ed3e1461037c576100ea565b80633ac15e6f1461027557806340c10f191461029657806370a08231146102cf576100ea565b806318160ddd116100c857806318160ddd146101c157806323b872dd146101db578063313ce5671461021e578063395093511461023c576100ea565b806306fdde03146100ef578063095ea7b31461016c5780630dfbe1af146101b9575b600080fd5b6100f76103b7565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a56004803603604081101561018257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046b565b604080519115158252519081900360200190f35b6101a56104f6565b6101c9610504565b60408051918252519081900360200190f35b6101a5600480360360608110156101f157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561050a565b610226610597565b6040805160ff9092168252519081900360200190f35b6101a56004803603604081101561025257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105a0565b6102946004803603602081101561028b57600080fd5b503515156105f1565b005b610294600480360360408110156102ac57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610628565b6101c9600480360360208110156102e557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610636565b6100f761065e565b6101a56004803603604081101561032057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106dd565b6101a56004803603604081101561035957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610723565b6101c96004803603604081101561039257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107a7565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b5050505050905090565b600554600090610100900460ff16156104e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6104ef83836107df565b9392505050565b600554610100900460ff1681565b60025490565b600554600090610100900460ff161561058457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e0000000000000000000000000000000000000000604482015290519081900360640190fd5b61058f8484846107ec565b949350505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105e89185906105e39086610848565b61085a565b50600192915050565b60058054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b61063282826108c9565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104615780601f1061043657610100808354040283529160200191610461565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105e89185906105e3908661019f610982565b600554600090610100900460ff161561079d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6104ef8383610998565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60006105e833848461085a565b60006107f98484846109a1565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461083e9186916105e3908661019e610982565b5060019392505050565b60008282016104ef8482101583610aca565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6108d560008383610ad8565b6108ef6108ea826108e4610504565b90610848565b610add565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461091f9082610848565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006109918484111583610aca565b5050900390565b60006105e83384845b6109c573ffffffffffffffffffffffffffffffffffffffff84161515610198610aca565b6109e973ffffffffffffffffffffffffffffffffffffffff83161515610199610aca565b6109f4838383610ad8565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610a2790826101a0610982565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a639082610848565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b816106325761063281610ae2565b505050565b600255565b610b0c817f42414c0000000000000000000000000000000000000000000000000000000000610b0f565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212203020a73e8cb2009338a2c51d3e93be88c1d66a67f8ccff79a502b24775dce59964736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AC15E6F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37C JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x3AC15E6F EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x23C JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xDFBE1AF EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x4F6 JUMP JUMPDEST PUSH2 0x1C9 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x50A JUMP JUMPDEST PUSH2 0x226 PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x628 JUMP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x636 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x723 JUMP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x461 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x436 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x461 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x444 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EF DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x58F DUP5 DUP5 DUP5 PUSH2 0x7EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5E8 SWAP2 DUP6 SWAP1 PUSH2 0x5E3 SWAP1 DUP7 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x632 DUP3 DUP3 PUSH2 0x8C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x461 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x436 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x461 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5E8 SWAP2 DUP6 SWAP1 PUSH2 0x5E3 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x982 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x79D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4EF DUP4 DUP4 PUSH2 0x998 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E8 CALLER DUP5 DUP5 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F9 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x83E SWAP2 DUP7 SWAP2 PUSH2 0x5E3 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x982 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x4EF DUP5 DUP3 LT ISZERO DUP4 PUSH2 0xACA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8D5 PUSH1 0x0 DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x8EF PUSH2 0x8EA DUP3 PUSH2 0x8E4 PUSH2 0x504 JUMP JUMPDEST SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH2 0xADD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x91F SWAP1 DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0xACA JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E8 CALLER DUP5 DUP5 JUMPDEST PUSH2 0x9C5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x9E9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x9F4 DUP4 DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA27 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x982 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA63 SWAP1 DUP3 PUSH2 0x848 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x632 JUMPI PUSH2 0x632 DUP2 PUSH2 0xAE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xB0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS KECCAK256 0xA7 RETURNDATACOPY DUP13 0xB2 STOP SWAP4 CODESIZE LOG2 0xC5 SAR RETURNDATACOPY SWAP4 0xBE DUP9 0xC1 0xD6 PUSH11 0x67F8CCFF79A502B24775DC 0xE5 SWAP10 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"870:995:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:187:47;;;;;;;;;;;;;;;;-1:-1:-1;1216:187:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;913:20;;;:::i;3500:106:36:-;;;:::i;:::-;;;;;;;;;;;;;;;;1608:255:47;;;;;;;;;;;;;;;;-1:-1:-1;1608:255:47;;;;;;;;;;;;;;;;;;:::i;3156:81:36:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6269:211;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;1022:83:47:-;;;;;;;;;;;;;;;;-1:-1:-1;1022:83:47;;;;:::i;:::-;;1111:99;;;;;;;;;;;;;;;;-1:-1:-1;1111:99:47;;;;;;;;;:::i;4022:117:36:-;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2448:85::-;;;:::i;6967:312::-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;1409:193:47:-;;;;;;;;;;;;;;;;-1:-1:-1;1409:193:47;;;;;;;;;:::i;4570:149:36:-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;2254:81::-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;1216:187:47:-;1324:8;;1299:4;;1324:8;;;;;1323:9;1315:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:30;1380:7;1389:6;1366:13;:30::i;:::-;1359:37;1216:187;-1:-1:-1;;;1216:187:47:o;913:20::-;;;;;;;;;:::o;3500:106:36:-;3587:12;;3500:106;:::o;1608:255:47:-;1769:8;;1744:4;;1769:8;;;;;1768:9;1760:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:45;1830:6;1838:9;1849:6;1811:18;:45::i;:::-;1804:52;1608:255;-1:-1:-1;;;;1608:255:47:o;3156:81:36:-;3221:9;;;;3156:81;:::o;6269:211::-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;:::-;6373:8;:79::i;:::-;-1:-1:-1;6469:4:36;6269:211;;;;:::o;1022:83:47:-;1078:8;:20;;;;;;;;;;;;;;;;;1022:83::o;1111:99::-;1179:24;1185:9;1196:6;1179:5;:24::i;:::-;1111:99;;:::o;4022:117:36:-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2448:85::-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6967:312;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;1409:193:47:-;1520:8;;1495:4;;1520:8;;;;;1519:9;1511:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:33;1577:9;1588:6;1562:14;:33::i;4570:149:36:-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;4857:164::-;4940:4;4956:37;4965:10;4977:7;4986:6;4956:8;:37::i;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;5686:160::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;966:167:45:-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;10034:213:36:-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;8583:297::-;8658:49;8687:1;8691:7;8700:6;8658:20;:49::i;:::-;8718:42;8734:25;8752:6;8734:13;:11;:13::i;:::-;:17;;:25::i;:::-;8718:15;:42::i;:::-;8791:18;;;:9;:18;;;;;;;;;;;:30;;8814:6;8791:22;:30::i;:::-;8770:18;;;:9;:18;;;;;;;;;;;:51;;;;8836:37;;;;;;;8770:18;;:9;;8836:37;;;;;;;;;;8583:297;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;4342:170:36:-;4428:4;4444:40;4454:10;4466:9;4477:6;7753:559;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;11245:183:36:-;;;;:::o;3870:94::-;3937:12;:20;3870:94::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","isBroken()":"0dfbe1af","mint(address,uint256)":"40c10f19","name()":"06fdde03","setIsBroken(bool)":"3ac15e6f","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBroken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isBroken\",\"type\":\"bool\"}],\"name\":\"setIsBroken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 with a modified approve, transfer and transferFrom functions, which revert according to a preset.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BreakableERC20Mock.sol\":\"BreakableERC20Mock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/BreakableERC20Mock.sol\":{\"keccak256\":\"0x39121bc333b08c97b04fa6fda16238d60830b969ece34872e508b98d88812ad0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://134b7fab1aa3ff3aaa2dd0b12952da5cf3402bb610703fee29a6c335d6019978\",\"dweb:/ipfs/QmVFbQDhEggkwVpi3o8pTNCPsdzMMBEnwA4TkjvynFtsXb\"]}},\"version\":1}"}},"contracts/test/BrokenERC20Mock.sol":{"BrokenERC20Mock":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610b6f380380610b6f8339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b506040525050825183915082906101a69060039060208501906101d2565b5080516101ba9060049060208401906101d2565b50506005805460ff1916601217905550610265915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061021357805160ff1916838001178555610240565b82800160010185558215610240579182015b82811115610240578251825591602001919060010190610225565b5061024c929150610250565b5090565b5b8082111561024c5760008155600101610251565b6108fb806102746000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610451565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610457565b6101fd6104b8565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104c1565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661050d565b6100d6610535565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b4565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105fa565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610607565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e00000000000000000000000000000000000000006044820152905160009181900360640190fd5b60025490565b600061046484848461063f565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546104ae9186916104a9908661019e610768565b61077e565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105049185906104a990866107ed565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105049185906104a9908661019f610768565b600061050433848461063f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61066373ffffffffffffffffffffffffffffffffffffffff84161515610198610806565b61068773ffffffffffffffffffffffffffffffffffffffff83161515610199610806565b610692838383610818565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106c590826101a0610768565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461070190826107ed565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60006107778484111583610806565b5050900390565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008282016107ff8482101583610806565b9392505050565b81610814576108148161081d565b5050565b505050565b610847817f42414c000000000000000000000000000000000000000000000000000000000061084a565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220a8048473f15f3071cb6481a8b98883f8f49ba086d46ba987bfafa957ee6d54e164736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB6F CODESIZE SUB DUP1 PUSH2 0xB6F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x188 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH2 0x1A6 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1D2 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1BA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1D2 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x265 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x213 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x240 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x240 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x240 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x225 JUMP JUMPDEST POP PUSH2 0x24C SWAP3 SWAP2 POP PUSH2 0x250 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x8FB DUP1 PUSH2 0x274 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x50D JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x607 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 DUP5 DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x4AE SWAP2 DUP7 SWAP2 PUSH2 0x4A9 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x768 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x504 SWAP2 DUP6 SWAP1 PUSH2 0x4A9 SWAP1 DUP7 PUSH2 0x7ED JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x504 SWAP2 DUP6 SWAP1 PUSH2 0x4A9 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x504 CALLER DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x663 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x806 JUMP JUMPDEST PUSH2 0x687 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x806 JUMP JUMPDEST PUSH2 0x692 DUP4 DUP4 DUP4 PUSH2 0x818 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6C5 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x768 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x701 SWAP1 DUP3 PUSH2 0x7ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x806 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7FF DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x814 JUMPI PUSH2 0x814 DUP2 PUSH2 0x81D JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x84A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DIV DUP5 PUSH20 0xF15F3071CB6481A8B98883F8F49BA086D46BA987 0xBF 0xAF 0xA9 JUMPI 0xEE PUSH14 0x54E164736F6C6343000701003300 ","sourceMap":"830:237:48:-:0;;;870:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;870:76:48;;;;;;;;;;-1:-1:-1;870:76:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;870:76:48;;;;;;;;;;-1:-1:-1;870:76:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;870:76:48;;-1:-1:-1;;2118:13:36;;930:4:48;;-1:-1:-1;936:6:48;;2118:13:36;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;830:237:48;;-1:-1:-1;;830:237:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;830:237:48;;;-1:-1:-1;830:237:48;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a0610451565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610457565b6101fd6104b8565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104c1565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661050d565b6100d6610535565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b4565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105fa565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610607565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f42524f4b454e5f544f4b454e00000000000000000000000000000000000000006044820152905160009181900360640190fd5b60025490565b600061046484848461063f565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546104ae9186916104a9908661019e610768565b61077e565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105049185906104a990866107ed565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105049185906104a9908661019f610768565b600061050433848461063f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b61066373ffffffffffffffffffffffffffffffffffffffff84161515610198610806565b61068773ffffffffffffffffffffffffffffffffffffffff83161515610199610806565b610692838383610818565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106c590826101a0610768565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461070190826107ed565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60006107778484111583610806565b5050900390565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008282016107ff8482101583610806565b9392505050565b81610814576108148161081d565b5050565b505050565b610847817f42414c000000000000000000000000000000000000000000000000000000000061084a565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220a8048473f15f3071cb6481a8b98883f8f49ba086d46ba987bfafa957ee6d54e164736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x457 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x50D JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x607 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42524F4B454E5F544F4B454E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 DUP5 DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x4AE SWAP2 DUP7 SWAP2 PUSH2 0x4A9 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x768 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x504 SWAP2 DUP6 SWAP1 PUSH2 0x4A9 SWAP1 DUP7 PUSH2 0x7ED JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x504 SWAP2 DUP6 SWAP1 PUSH2 0x4A9 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x768 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x504 CALLER DUP5 DUP5 PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x663 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x806 JUMP JUMPDEST PUSH2 0x687 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x806 JUMP JUMPDEST PUSH2 0x692 DUP4 DUP4 DUP4 PUSH2 0x818 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6C5 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x768 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x701 SWAP1 DUP3 PUSH2 0x7ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x777 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x806 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7FF DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x814 JUMPI PUSH2 0x814 DUP2 PUSH2 0x81D JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x84A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DIV DUP5 PUSH20 0xF15F3071CB6481A8B98883F8F49BA086D46BA987 0xBF 0xAF 0xA9 JUMPI 0xEE PUSH14 0x54E164736F6C6343000701003300 ","sourceMap":"830:237:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:113:48;;;;;;;;;;;;;;;;-1:-1:-1;952:113:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106:36;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6269:211;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;4022:117::-;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2448:85::-;;;:::i;6967:312::-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;4570:149::-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;2254:81::-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;952:113:48:-;1036:22;;;;;;;;;;;;;;;;;;;;;;;1020:4;;1036:22;;;;;;;3500:106:36;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;6269:211::-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;6373:79::-;-1:-1:-1;6469:4:36;6269:211;;;;:::o;4022:117::-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2448:85::-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6967:312;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;4570:149::-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;10034:213:36:-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;966:167:45:-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;11245:183:36:-;;;;:::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 with a modified `approve` function, which always reverts.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BrokenERC20Mock.sol\":\"BrokenERC20Mock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/BrokenERC20Mock.sol\":{\"keccak256\":\"0x2ba4a54e75480f5f89d3c10a86bd9079383fcdbca6f165764d24af33f1b1b110\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6b78b461535add91c65799ac700468bed82d33ac0db6988a5990f727a0ce87a4\",\"dweb:/ipfs/QmYbZRdX1edVXzdhuaecFkL5sK1GyKE97kB2n3NYk9tb33\"]}},\"version\":1}"}},"contracts/test/CodeDeployerFactory.sol":{"CodeDeployerFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"destination","type":"address"}],"name":"CodeDeployed","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"preventExecution","type":"bool"}],"name":"deploy","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b506102b7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635615296014610030575b600080fd5b6100d86004803603604081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184600183028401116401000000008311171561009557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050505035151590506100da565b005b60006100e68383610138565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fea3e8fadbb616efc14cb41f88bca45fca14e4eb41f13eb4c8d2ffcf8695a62c4919081900360200190a1505050565b60008082610166577f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe610188565b7f60fe600053602038038060206001396001016000f3fefefefefefefefefefefe5b9050835181855260208101856000f090855291506101c073ffffffffffffffffffffffffffffffffffffffff831615156101ac6101c7565b5092915050565b816101d5576101d5816101d9565b5050565b610203817f42414c0000000000000000000000000000000000000000000000000000000000610206565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220a2cf2058acf3dcd80da87cee7b82d35c3fb3ab23b92993169fbf9c30455d558d64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56152960 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0xDA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xE6 DUP4 DUP4 PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEA3E8FADBB616EFC14CB41F88BCA45FCA14E4EB41F13EB4C8D2FFCF8695A62C4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x166 JUMPI PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE PUSH2 0x188 JUMP JUMPDEST PUSH32 0x60FE600053602038038060206001396001016000F3FEFEFEFEFEFEFEFEFEFEFE JUMPDEST SWAP1 POP DUP4 MLOAD DUP2 DUP6 MSTORE PUSH1 0x20 DUP2 ADD DUP6 PUSH1 0x0 CREATE SWAP1 DUP6 MSTORE SWAP2 POP PUSH2 0x1C0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x1C7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x1D5 JUMPI PUSH2 0x1D5 DUP2 PUSH2 0x1D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x203 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x206 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xCF KECCAK256 PC 0xAC RETURN 0xDC 0xD8 0xD 0xA8 PUSH29 0xEE7B82D35C3FB3AB23B92993169FBF9C30455D558D64736F6C63430007 ADD STOP CALLER ","sourceMap":"752:272:49:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80635615296014610030575b600080fd5b6100d86004803603604081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184600183028401116401000000008311171561009557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050505035151590506100da565b005b60006100e68383610138565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fea3e8fadbb616efc14cb41f88bca45fca14e4eb41f13eb4c8d2ffcf8695a62c4919081900360200190a1505050565b60008082610166577f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe610188565b7f60fe600053602038038060206001396001016000f3fefefefefefefefefefefe5b9050835181855260208101856000f090855291506101c073ffffffffffffffffffffffffffffffffffffffff831615156101ac6101c7565b5092915050565b816101d5576101d5816101d9565b5050565b610203817f42414c0000000000000000000000000000000000000000000000000000000000610206565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220a2cf2058acf3dcd80da87cee7b82d35c3fb3ab23b92993169fbf9c30455d558d64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56152960 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0xDA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xE6 DUP4 DUP4 PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xEA3E8FADBB616EFC14CB41F88BCA45FCA14E4EB41F13EB4C8D2FFCF8695A62C4 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x166 JUMPI PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE PUSH2 0x188 JUMP JUMPDEST PUSH32 0x60FE600053602038038060206001396001016000F3FEFEFEFEFEFEFEFEFEFEFE JUMPDEST SWAP1 POP DUP4 MLOAD DUP2 DUP6 MSTORE PUSH1 0x20 DUP2 ADD DUP6 PUSH1 0x0 CREATE SWAP1 DUP6 MSTORE SWAP2 POP PUSH2 0x1C0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x1C7 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x1D5 JUMPI PUSH2 0x1D5 DUP2 PUSH2 0x1D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x203 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x206 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xCF KECCAK256 PC 0xAC RETURN 0xDC 0xD8 0xD 0xA8 PUSH29 0xEE7B82D35C3FB3AB23B92993169FBF9C30455D558D64736F6C63430007 ADD STOP CALLER ","sourceMap":"752:272:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;833:189:49;;-1:-1:-1;;;;833:189:49;;;;-1:-1:-1;833:189:49;:::i;:::-;;;910:19;932:43;952:4;958:16;932:19;:43::i;:::-;990:25;;;;;;;;;;910:65;;-1:-1:-1;990:25:49;;;;;;;;;;833:189;;;:::o;4838:1444:18:-;4914:19;4945:28;4976:16;:78;;2515:66;4976:78;;;4371:66;4976:78;4945:109;;5417:4;5411:11;5657:20;5651:4;5644:34;5947:2;5935:10;5931:19;5925:4;5922:1;5915:36;6051:24;;;5900:51;-1:-1:-1;6209:66:18;6218:25;;;;;11974:3:0;6209:8:18;:66::i;:::-;4838:1444;;;;;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"deploy(bytes,bool)":"56152960"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"CodeDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"preventExecution\",\"type\":\"bool\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/CodeDeployerFactory.sol\":\"CodeDeployerFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/CodeDeployer.sol\":{\"keccak256\":\"0x99d7503e23100e0d0aac1947942816b7e1a7e6bc8067a219a10f3ceb4f5edb7e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8b6bcea0432fcae4e1631deba44104bd8e21cd1cc5696f1b8f0ee8903302b115\",\"dweb:/ipfs/QmNvPKytQXvHpDVJsYSqhug515Hwp38EotY2oqcVMa5pJU\"]},\"contracts/test/CodeDeployerFactory.sol\":{\"keccak256\":\"0x8fad3617978323085db52b0dc550175a478617f6bc85af570bac376a892f2538\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://eb53829c47851830ce6b1367a61bd5694a173354d6564f76abff41e384e9c05b\",\"dweb:/ipfs/QmQdJHLomnCwvoH5ppyWCoRoh9yJPyPAN721zrdWy7YcNx\"]}},\"version\":1}"}},"contracts/test/EOASignaturesValidatorMock.sol":{"EOASignaturesValidatorMock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[],"name":"Authenticated","type":"event"},{"inputs":[],"name":"MOCK_AUTHENTICATE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"authenticatedCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"authenticatedCallWithDeadline","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"increaseNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60e060405234801561001057600080fd5b50604080518082018252601d81527f454f41205369676e6174757265732056616c696461746f72204d6f636b0000006020808301918252835180850190945260018452603160f81b908401908152915190206080529051902060a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260805160a05160c05161082c6100bc600039806104f852508061053a525080610519525061082c6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806390193b7c1161005057806390193b7c1461018e5780639a874583146101c1578063ed24911d1461028b57610072565b80630d347d5d146100775780636917a1ff146100915780638247a97c1461015b575b600080fd5b61007f610293565b60408051918252519081900360200190f35b610159600480360360608110156100a757600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916020810135918101906060810160408201356401000000008111156100e457600080fd5b8201836020820111156100f657600080fd5b8035906020019184600183028401116401000000008311171561011857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b7945050505050565b005b6101596004803603602081101561017157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610357565b61007f600480360360208110156101a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610384565b610159600480360360808110156101d757600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561021457600080fd5b82018360208201111561022657600080fd5b8035906020019184600183028401116401000000008311171561024857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506103ac915050565b61007f61044e565b7f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a4981565b60007f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49836102e486610384565b6040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012090506103288482846101f861045d565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a150505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080546001019055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60007f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49846103d987610384565b60405160200180848152602001838152602001828152602001935050505060405160208183030381529060405280519060200120905061041e858285856101f8610490565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a15050505050565b60006104586104f4565b905090565b61048a8484847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85610490565b50505050565b600061049b856105bf565b90506104b16104ab878387610626565b83610738565b6104c0428410156101b8610738565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061056161074a565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b60006105c96104f4565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600061063882516041146101b9610738565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156106b1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061072c57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b81610746576107468161074e565b5050565b4690565b610778817f42414c000000000000000000000000000000000000000000000000000000000061077b565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212208fde766418617f093793b699e3fc6ce3ced83f69679f7b501eedf4919f82e66f64736f6c63430007010033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x454F41205369676E6174757265732056616C696461746F72204D6F636B000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0xA0 MSTORE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x82C PUSH2 0xBC PUSH1 0x0 CODECOPY DUP1 PUSH2 0x4F8 MSTORE POP DUP1 PUSH2 0x53A MSTORE POP DUP1 PUSH2 0x519 MSTORE POP PUSH2 0x82C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90193B7C GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x9A874583 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x28B JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0xD347D5D EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x6917A1FF EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8247A97C EQ PUSH2 0x15B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2B7 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x357 JUMP JUMPDEST PUSH2 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x384 JUMP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP SWAP2 CALLDATALOAD SWAP3 POP PUSH2 0x3AC SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F PUSH2 0x44E JUMP JUMPDEST PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP4 PUSH2 0x2E4 DUP7 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x328 DUP5 DUP3 DUP5 PUSH2 0x1F8 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP5 PUSH2 0x3D9 DUP8 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x41E DUP6 DUP3 DUP6 DUP6 PUSH2 0x1F8 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x48A DUP5 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 PUSH2 0x490 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP6 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP PUSH2 0x4B1 PUSH2 0x4AB DUP8 DUP4 DUP8 PUSH2 0x626 JUMP JUMPDEST DUP4 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x4C0 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x738 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x561 PUSH2 0x74A JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C9 PUSH2 0x4F4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x638 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x72C JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x746 JUMPI PUSH2 0x746 DUP2 PUSH2 0x74E JUMP JUMPDEST POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x77B JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDE PUSH23 0x6418617F093793B699E3FC6CE3CED83F69679F7B501EED DELEGATECALL SWAP2 SWAP16 DUP3 0xE6 PUSH16 0x64736F6C634300070100330000000000 ","sourceMap":"107:1303:50:-:0;;;318:123;;;;;;;;;-1:-1:-1;2020:280:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2020:280:35;;;;;;2100:22;;;;2085:37;;2150:25;;;;2132:43;;2198:95;2185:108;;107:1303:50;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"5870":[{"length":32,"start":1305}],"5872":[{"length":32,"start":1338}],"5874":[{"length":32,"start":1272}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c806390193b7c1161005057806390193b7c1461018e5780639a874583146101c1578063ed24911d1461028b57610072565b80630d347d5d146100775780636917a1ff146100915780638247a97c1461015b575b600080fd5b61007f610293565b60408051918252519081900360200190f35b610159600480360360608110156100a757600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916020810135918101906060810160408201356401000000008111156100e457600080fd5b8201836020820111156100f657600080fd5b8035906020019184600183028401116401000000008311171561011857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102b7945050505050565b005b6101596004803603602081101561017157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610357565b61007f600480360360208110156101a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610384565b610159600480360360808110156101d757600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561021457600080fd5b82018360208201111561022657600080fd5b8035906020019184600183028401116401000000008311171561024857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506103ac915050565b61007f61044e565b7f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a4981565b60007f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49836102e486610384565b6040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012090506103288482846101f861045d565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a150505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080546001019055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60007f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a49846103d987610384565b60405160200180848152602001838152602001828152602001935050505060405160208183030381529060405280519060200120905061041e858285856101f8610490565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a15050505050565b60006104586104f4565b905090565b61048a8484847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85610490565b50505050565b600061049b856105bf565b90506104b16104ab878387610626565b83610738565b6104c0428410156101b8610738565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061056161074a565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b60006105c96104f4565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600061063882516041146101b9610738565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156106b1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061072c57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b81610746576107468161074e565b5050565b4690565b610778817f42414c000000000000000000000000000000000000000000000000000000000061077b565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212208fde766418617f093793b699e3fc6ce3ced83f69679f7b501eedf4919f82e66f64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90193B7C GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x9A874583 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x28B JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0xD347D5D EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x6917A1FF EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8247A97C EQ PUSH2 0x15B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2B7 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x357 JUMP JUMPDEST PUSH2 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x384 JUMP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP SWAP2 CALLDATALOAD SWAP3 POP PUSH2 0x3AC SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F PUSH2 0x44E JUMP JUMPDEST PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP4 PUSH2 0x2E4 DUP7 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x328 DUP5 DUP3 DUP5 PUSH2 0x1F8 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP5 PUSH2 0x3D9 DUP8 PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x41E DUP6 DUP3 DUP6 DUP6 PUSH2 0x1F8 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x458 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x48A DUP5 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 PUSH2 0x490 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP6 PUSH2 0x5BF JUMP JUMPDEST SWAP1 POP PUSH2 0x4B1 PUSH2 0x4AB DUP8 DUP4 DUP8 PUSH2 0x626 JUMP JUMPDEST DUP4 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x4C0 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x738 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x561 PUSH2 0x74A JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C9 PUSH2 0x4F4 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x638 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x72C JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x746 JUMPI PUSH2 0x746 DUP2 PUSH2 0x74E JUMP JUMPDEST POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x778 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x77B JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDE PUSH23 0x6418617F093793B699E3FC6CE3CED83F69679F7B501EED DELEGATECALL SWAP2 SWAP16 DUP3 0xE6 PUSH16 0x64736F6C634300070100330000000000 ","sourceMap":"107:1303:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;203:108;;;:::i;:::-;;;;;;;;;;;;;;;;447:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;447:352:50;;-1:-1:-1;447:352:50;;-1:-1:-1;;;;;447:352:50:i;:::-;;1327:81;;;;;;;;;;;;;;;;-1:-1:-1;1327:81:50;;;;:::i;1303:121:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1303:121:19;;;;:::i;805:516:50:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;805:516:50;;-1:-1:-1;;805:516:50;;;-1:-1:-1;805:516:50;;-1:-1:-1;;805:516:50:i;1184:113:19:-;;;:::i;203:108:50:-;256:55;203:108;:::o;447:352::-;577:18;256:55;647:6;655:18;668:4;655:12;:18::i;:::-;608:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:77;;;;;;577:98;;686:76;708:4;714:10;726:9;13190:3:0;686:21:50;:76::i;:::-;777:15;;;;;;;447:352;;;;:::o;1327:81::-;1383:16;;:10;:16;;;;;;;;;;:18;;;;;;1327:81::o;1303:121:19:-;1398:19;;1372:7;1398:19;;;;;;;;;;;;1303:121::o;805:516:50:-;1089:18;256:55;1159:6;1167:18;1180:4;1167:12;:18::i;:::-;1120:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1110:77;;;;;;1089:98;;1198:86;1220:4;1226:10;1238:9;1249:8;13190:3:0;1198:21:50;:86::i;:::-;1299:15;;;;;;;805:516;;;;;:::o;1184:113:19:-;1244:7;1270:20;:18;:20::i;:::-;1263:27;;1184:113;:::o;1430:265::-;1605:83;1627:7;1636:10;1648:9;1659:17;1678:9;1605:21;:83::i;:::-;1430:265;;;;:::o;1701:1214::-;1895:14;1912:28;1929:10;1912:16;:28::i;:::-;1895:45;;1950:66;1959:45;1977:7;1986:6;1994:9;1959:17;:45::i;:::-;2006:9;1950:8;:66::i;:::-;2487:63;2508:15;2496:8;:27;;12656:3:0;2487:8:19;:63::i;:::-;-1:-1:-1;;;2884:19:19;;;;:10;:19;;;;;;;;;;:24;;2907:1;2884:24;;;-1:-1:-1;;1701:1214:19:o;2386:188:35:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;3199:183::-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;2921:876:19:-;3066:4;3082:60;3091:9;:16;3111:2;3091:22;12713:3:0;3082:8:19;:60::i;:::-;3153:9;3172;3191:7;3427:4;3416:9;3412:20;3406:27;3401:32;;3472:4;3461:9;3457:20;3451:27;3446:32;;3525:4;3514:9;3510:20;3504:27;3501:1;3496:36;3491:41;;3552:24;3579:26;3589:6;3597:1;3600;3603;3579:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:26:19;;;;;;-1:-1:-1;;3728:30:19;;;;;;;:61;;;3782:7;3762:27;;:16;:27;;;3728:61;3720:70;2921:876;-1:-1:-1;;;;;;;;2921:876:19:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;3433:187:35:-;3595:9;;3570:44::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"MOCK_AUTHENTICATE_TYPEHASH()":"0d347d5d","authenticatedCall(address,uint256,bytes)":"6917a1ff","authenticatedCallWithDeadline(address,uint256,bytes,uint256)":"9a874583","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","increaseNonce(address)":"8247a97c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Authenticated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MOCK_AUTHENTICATE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"authenticatedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"authenticatedCallWithDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"increaseNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/EOASignaturesValidatorMock.sol\":\"EOASignaturesValidatorMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/test/EOASignaturesValidatorMock.sol\":{\"keccak256\":\"0x4f83b24008c3ea9f7f1a8c334417dfdf2d72ebba0eba41839ee6226a4e558436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e60d2d011a23c89822b25fb488d7abe9672719b82a96e064dcc995bb273cf0\",\"dweb:/ipfs/Qme7E3z4aLdd4Gqmt74318xXXZvimKzrEjMMikjQaLiURz\"]}},\"version\":1}"}},"contracts/test/ERC1271Mock.sol":{"ERC1271Mock":{"abi":[{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"getKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"setApproved","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"newRevert","type":"bool"}],"name":"setRevert","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610438806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e1461005157806323d6d879146101335780638109f510146101525780638fb5f17114610211575b600080fd5b6100fe6004803603604081101561006757600080fd5b8135919081019060408101602082013564010000000081111561008957600080fd5b82018360208201111561009b57600080fd5b803590602001918460018302840111640100000000831117156100bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610230945050505050565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b6101506004803603602081101561014957600080fd5b50356102fa565b005b6101ff6004803603604081101561016857600080fd5b8135919081019060408101602082013564010000000081111561018a57600080fd5b82018360208201111561019c57600080fd5b803590602001918460018302840111640100000000831117156101be57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610333945050505050565b60408051918252519081900360200190f35b6101506004803603602081101561022757600080fd5b503515156103d1565b60015460009060ff16156102a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f455243313237315f4d4f434b5f52455645525400000000000000000000000000604482015290519081900360640190fd5b6000806102b28585610333565b815260208101919091526040016000205460ff166102d15760006102f3565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b9392505050565b600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b600082826040516020018083815260200182805190602001908083835b6020831061038d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610350565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405280519060200120905092915050565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905556fea26469706673582212204a9d5f7fd850fcadd55fac4a5940cb4ec5169dfd0a3af263424c36f1689d597d64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x23D6D879 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x8109F510 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8FB5F171 EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x230 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x333 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313237315F4D4F434B5F52455645525400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B2 DUP6 DUP6 PUSH2 0x333 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2D1 JUMPI PUSH1 0x0 PUSH2 0x2F3 JUMP JUMPDEST PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x38D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP14 0x5F PUSH32 0xD850FCADD55FAC4A5940CB4EC5169DFD0A3AF263424C36F1689D597D64736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"149:717:51:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e1461005157806323d6d879146101335780638109f510146101525780638fb5f17114610211575b600080fd5b6100fe6004803603604081101561006757600080fd5b8135919081019060408101602082013564010000000081111561008957600080fd5b82018360208201111561009b57600080fd5b803590602001918460018302840111640100000000831117156100bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610230945050505050565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b6101506004803603602081101561014957600080fd5b50356102fa565b005b6101ff6004803603604081101561016857600080fd5b8135919081019060408101602082013564010000000081111561018a57600080fd5b82018360208201111561019c57600080fd5b803590602001918460018302840111640100000000831117156101be57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610333945050505050565b60408051918252519081900360200190f35b6101506004803603602081101561022757600080fd5b503515156103d1565b60015460009060ff16156102a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f455243313237315f4d4f434b5f52455645525400000000000000000000000000604482015290519081900360640190fd5b6000806102b28585610333565b815260208101919091526040016000205460ff166102d15760006102f3565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b9392505050565b600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b600082826040516020018083815260200182805190602001908083835b6020831061038d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610350565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405280519060200120905092915050565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905556fea26469706673582212204a9d5f7fd850fcadd55fac4a5940cb4ec5169dfd0a3af263424c36f1689d597d64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x23D6D879 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x8109F510 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8FB5F171 EQ PUSH2 0x211 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x230 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x333 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313237315F4D4F434B5F52455645525400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B2 DUP6 DUP6 PUSH2 0x333 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2D1 JUMPI PUSH1 0x0 PUSH2 0x2F3 JUMP JUMPDEST PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x38D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP14 0x5F PUSH32 0xD850FCADD55FAC4A5940CB4EC5169DFD0A3AF263424C36F1689D597D64736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"149:717:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;598:266:51;;-1:-1:-1;598:266:51;;-1:-1:-1;;;;;598:266:51:i;:::-;;;;;;;;;;;;;;;;;;;263:81;;;;;;;;;;;;;;;;-1:-1:-1;263:81:51;;:::i;:::-;;436:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;436:156:51;;-1:-1:-1;436:156:51;;-1:-1:-1;;;;;436:156:51:i;:::-;;;;;;;;;;;;;;;;350:80;;;;;;;;;;;;;;;;-1:-1:-1;350:80:51;;;;:::i;598:266::-;723:7;;696:6;;723:7;;722:8;714:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:9;:36;782:25;789:6;797:9;782:6;:25::i;:::-;772:36;;;;;;;;;;;-1:-1:-1;772:36:51;;;;:85;;855:1;772:85;;;811:34;772:85;765:92;598:266;-1:-1:-1;;;598:266:51:o;263:81::-;316:9;:14;;;;;;;;;;:21;;;;333:4;316:21;;;263:81::o;436:156::-;513:7;566:6;574:9;549:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;539:46;;;;;;532:53;;436:156;;;;:::o;350:80::-;404:7;:19;;;;;;;;;;;;;350:80::o"},"methodIdentifiers":{"getKey(bytes32,bytes)":"8109f510","isValidSignature(bytes32,bytes)":"1626ba7e","setApproved(bytes32)":"23d6d879","setRevert(bool)":"8fb5f171"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"setApproved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newRevert\",\"type\":\"bool\"}],\"name\":\"setRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC1271Mock.sol\":\"ERC1271Mock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":{\"keccak256\":\"0xf82dab09a38bfdaf0983b69829de462c62359bc0bfaa37c4447408d93bd367c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0172b678ca594e95b7e5d881fd1280b3792052861ca98d77fa6194b524d188\",\"dweb:/ipfs/QmZ3bYEGTrfruXNYAzuFjJeg9Hx6UQw8ZyBzyM72BVGXfT\"]},\"contracts/test/ERC1271Mock.sol\":{\"keccak256\":\"0x68e4820b51c120c21568d16fa068ac6eb755114f82060c4d4d97cc2afff1fc28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bfc0a378b26c74945937fb6571da753094d7f18d3e09c8943d3b679703cfe48\",\"dweb:/ipfs/QmQzuwrZDEKXTUU1z3USwt6yxardk2rurt3vxTR8XntPmi\"]}},\"version\":1}"}},"contracts/test/ERC20FalseApprovalMock.sol":{"ERC20FalseApprovalMock":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610b1c380380610b1c8339818101604052604081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825164010000000081118282018810171561008257600080fd5b82525081516020918201929091019080838360005b838110156100af578181015183820152602001610097565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156100ff57600080fd5b90830190602082018581111561011457600080fd5b825164010000000081118282018810171561012e57600080fd5b82525081516020918201929091019080838360005b8381101561015b578181015183820152602001610143565b50505050905090810190601f1680156101885780820380516001836020036101000a031916815260200191505b506040525050825183915082906101a69060039060208501906101d2565b5080516101ba9060049060208401906101d2565b50506005805460ff1916601217905550610265915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061021357805160ff1916838001178555610240565b82800160010185558215610240579182015b82811115610240578251825591602001919060010190610225565b5061024c929150610250565b5090565b5b8082111561024c5760008155600101610251565b6108a8806102746000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a06103fe565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610404565b6101fd610465565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104ba565b6100d66104e2565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610561565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105a7565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105b4565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f53384846105ec565b50600092915050565b60025490565b600061041184848461065b565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461045b918691610456908661019e610784565b6105ec565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104b1918590610456908661079a565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104b1918590610456908661019f610784565b60006104b133848461065b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61067f73ffffffffffffffffffffffffffffffffffffffff841615156101986107b3565b6106a373ffffffffffffffffffffffffffffffffffffffff831615156101996107b3565b6106ae8383836107c5565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106e190826101a0610784565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461071d908261079a565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061079384841115836107b3565b5050900390565b60008282016107ac84821015836107b3565b9392505050565b816107c1576107c1816107ca565b5050565b505050565b6107f4817f42414c00000000000000000000000000000000000000000000000000000000006107f7565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122082b7cce4fa0d7e6c2b9d0f2f569bbf214ebb8bb27db1449e0918046b7128282564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB1C CODESIZE SUB DUP1 PUSH2 0xB1C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x188 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH2 0x1A6 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1D2 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1BA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1D2 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x265 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x213 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x240 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x240 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x240 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x225 JUMP JUMPDEST POP PUSH2 0x24C SWAP3 SWAP2 POP PUSH2 0x250 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x8A8 DUP1 PUSH2 0x274 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BA JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x5EC JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP5 DUP5 PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x45B SWAP2 DUP7 SWAP2 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x784 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4B1 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x79A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4B1 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x784 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 CALLER DUP5 DUP5 PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x67F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x6A3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x6AE DUP4 DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6E1 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x71D SWAP1 DUP3 PUSH2 0x79A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x793 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x7B3 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7AC DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x7B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7C1 JUMPI PUSH2 0x7C1 DUP2 PUSH2 0x7CA JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xB7 0xCC 0xE4 STATICCALL 0xD PUSH31 0x6C2B9D0F2F569BBF214EBB8BB27DB1449E0918046B7128282564736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"836:296:52:-:0;;;883:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;883:76:52;;;;;;;;;;-1:-1:-1;883:76:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;883:76:52;;;;;;;;;;-1:-1:-1;883:76:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;883:76:52;;-1:-1:-1;;2118:13:36;;943:4:52;;-1:-1:-1;949:6:52;;2118:13:36;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;836:296:52;;-1:-1:-1;;836:296:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;836:296:52;;;-1:-1:-1;836:296:52;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610287578063a9059cbb146102c0578063dd62ed3e146102f9576100c9565b8063395093511461021357806370a082311461024c57806395d89b411461027f576100c9565b806318160ddd116100b257806318160ddd1461019857806323b872dd146101b2578063313ce567146101f5576100c9565b806306fdde03146100ce578063095ea7b31461014b575b600080fd5b6100d6610334565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101105781810151838201526020016100f8565b50505050905090810190601f16801561013d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101846004803603604081101561016157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103e8565b604080519115158252519081900360200190f35b6101a06103fe565b60408051918252519081900360200190f35b610184600480360360608110156101c857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610404565b6101fd610465565b6040805160ff9092168252519081900360200190f35b6101846004803603604081101561022957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561046e565b6101a06004803603602081101561026257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104ba565b6100d66104e2565b6101846004803603604081101561029d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610561565b610184600480360360408110156102d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105a7565b6101a06004803603604081101561030f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166105b4565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905090565b60006103f53384846105ec565b50600092915050565b60025490565b600061041184848461065b565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461045b918691610456908661019e610784565b6105ec565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104b1918590610456908661079a565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103de5780601f106103b3576101008083540402835291602001916103de565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104b1918590610456908661019f610784565b60006104b133848461065b565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61067f73ffffffffffffffffffffffffffffffffffffffff841615156101986107b3565b6106a373ffffffffffffffffffffffffffffffffffffffff831615156101996107b3565b6106ae8383836107c5565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546106e190826101a0610784565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461071d908261079a565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061079384841115836107b3565b5050900390565b60008282016107ac84821015836107b3565b9392505050565b816107c1576107c1816107ca565b5050565b505050565b6107f4817f42414c00000000000000000000000000000000000000000000000000000000006107f7565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122082b7cce4fa0d7e6c2b9d0f2f569bbf214ebb8bb27db1449e0918046b7128282564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F9 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F5 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x110 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x404 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x46E JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BA JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x561 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 CALLER DUP5 DUP5 PUSH2 0x5EC JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP5 DUP5 PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x45B SWAP2 DUP7 SWAP2 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x784 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4B1 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x79A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4B1 SWAP2 DUP6 SWAP1 PUSH2 0x456 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x784 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 CALLER DUP5 DUP5 PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x67F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x6A3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x6AE DUP4 DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6E1 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x71D SWAP1 DUP3 PUSH2 0x79A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x793 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x7B3 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x7AC DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x7B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7C1 JUMPI PUSH2 0x7C1 DUP2 PUSH2 0x7CA JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xB7 0xCC 0xE4 STATICCALL 0xD PUSH31 0x6C2B9D0F2F569BBF214EBB8BB27DB1449E0918046B7128282564736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"836:296:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:165:52;;;;;;;;;;;;;;;;-1:-1:-1;965:165:52;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106:36;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6269:211;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;4022:117::-;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2448:85::-;;;:::i;6967:312::-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;4570:149::-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;2254:81::-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;965:165:52:-;1048:4;1064:37;1073:10;1085:7;1094:6;1064:8;:37::i;:::-;-1:-1:-1;1118:5:52;965:165;;;;:::o;3500:106:36:-;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;6269:211::-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;6373:79::-;-1:-1:-1;6469:4:36;6269:211;;;;:::o;4022:117::-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2448:85::-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6967:312;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;4570:149::-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;10034:213::-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;966:167::-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;11245:183:36:-;;;;:::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 with a modified `approve` function, which always returns false.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC20FalseApprovalMock.sol\":\"ERC20FalseApprovalMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/ERC20FalseApprovalMock.sol\":{\"keccak256\":\"0x3e667bc3a7bbdcbab4e40ff8507691c799b1407eb690407ecdd957712c6049e7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://87d8e932123cdbbcf9cb184a8ca4b9569efafb4789dc9b05e6c2e38c06bd3a9a\",\"dweb:/ipfs/QmczrwhK4ipYo4PywSuNMMt6xwk75hcZ8zo1L957HXwYX2\"]}},\"version\":1}"}},"contracts/test/ERC20Mock.sol":{"ERC20Mock":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000d8c38038062000d8c833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001b8906003906020850190620001e7565b508051620001ce906004906020840190620001e7565b50506005805460ff191660121790555062000283915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022a57805160ff19168380011785556200025a565b828001600101855582156200025a579182015b828111156200025a5782518255916020019190600101906200023d565b50620002689291506200026c565b5090565b5b808211156200026857600081556001016200026d565b610af980620002936000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146102d8578063a457c2d714610311578063a9059cbb1461034a578063dd62ed3e14610383576100df565b806340c10f191461026257806370a082311461029d57806395d89b41146102d0576100df565b806323b872dd116100bd57806323b872dd146101c8578063313ce5671461020b5780633950935114610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec6103be565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610472565b604080519115158252519081900360200190f35b6101b6610488565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561048e565b6102136104ef565b6040805160ff9092168252519081900360200190f35b61019a6004803603604081101561023f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104f8565b61029b6004803603604081101561027857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561053b565b005b6101b6600480360360208110156102b357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610549565b6100ec610571565b61029b600480360360408110156102ee57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105f0565b61019a6004803603604081101561032757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105fa565b61019a6004803603604081101561036057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610640565b6101b66004803603604081101561039957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661064d565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104685780601f1061043d57610100808354040283529160200191610468565b820191906000526020600020905b81548152906001019060200180831161044b57829003601f168201915b5050505050905090565b600061047f338484610685565b50600192915050565b60025490565b600061049b8484846106f4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546104e59186916104e0908661019e61081d565b610685565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161047f9185906104e09086610833565b610545828261084c565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104685780601f1061043d57610100808354040283529160200191610468565b6105458282610905565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161047f9185906104e0908661019f61081d565b600061047f3384846106f4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61071873ffffffffffffffffffffffffffffffffffffffff841615156101986109f5565b61073c73ffffffffffffffffffffffffffffffffffffffff831615156101996109f5565b610747838383610a03565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461077a90826101a061081d565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546107b69082610833565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061082c84841115836109f5565b5050900390565b600082820161084584821015836109f5565b9392505050565b61085860008383610a03565b61087261086d82610867610488565b90610833565b610a08565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546108a29082610833565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61092973ffffffffffffffffffffffffffffffffffffffff8316151561019b6109f5565b61093582600083610a03565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461096890826101b261081d565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556109a361086d8261099d610488565b90610a0d565b60408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b816105455761054581610a1b565b505050565b600255565b60006108458383600161081d565b610a45817f42414c0000000000000000000000000000000000000000000000000000000000610a48565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220b18996cf395335f8f19ff0a5e951d019597e2df81992d60fc83a7aa1538958fd64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD8C CODESIZE SUB DUP1 PUSH3 0xD8C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH3 0x1B8 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CE SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x283 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x22A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x25A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x25A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x25A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x23D JUMP JUMPDEST POP PUSH3 0x268 SWAP3 SWAP2 POP PUSH3 0x26C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x268 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x26D JUMP JUMPDEST PUSH2 0xAF9 DUP1 PUSH3 0x293 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x383 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D0 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x229 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x126 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x153 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x48E JUMP JUMPDEST PUSH2 0x213 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x549 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x571 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x640 JUMP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x64D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x468 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x468 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x44B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F CALLER DUP5 DUP5 PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP5 DUP5 DUP5 PUSH2 0x6F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x4E5 SWAP2 DUP7 SWAP2 PUSH2 0x4E0 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x81D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x47F SWAP2 DUP6 SWAP1 PUSH2 0x4E0 SWAP1 DUP7 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x545 DUP3 DUP3 PUSH2 0x84C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x468 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x545 DUP3 DUP3 PUSH2 0x905 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x47F SWAP2 DUP6 SWAP1 PUSH2 0x4E0 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x81D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F CALLER DUP5 DUP5 PUSH2 0x6F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x718 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x73C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x747 DUP4 DUP4 DUP4 PUSH2 0xA03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x77A SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x81D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7B6 SWAP1 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x9F5 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x845 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x858 PUSH1 0x0 DUP4 DUP4 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x872 PUSH2 0x86D DUP3 PUSH2 0x867 PUSH2 0x488 JUMP JUMPDEST SWAP1 PUSH2 0x833 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8A2 SWAP1 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x929 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x935 DUP3 PUSH1 0x0 DUP4 PUSH2 0xA03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x968 SWAP1 DUP3 PUSH2 0x1B2 PUSH2 0x81D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x9A3 PUSH2 0x86D DUP3 PUSH2 0x99D PUSH2 0x488 JUMP JUMPDEST SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH2 0x545 JUMPI PUSH2 0x545 DUP2 PUSH2 0xA1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 DUP4 DUP4 PUSH1 0x1 PUSH2 0x81D JUMP JUMPDEST PUSH2 0xA45 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xA48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP10 SWAP7 0xCF CODECOPY MSTORE8 CALLDATALOAD 0xF8 CALL SWAP16 CREATE 0xA5 0xE9 MLOAD 0xD0 NOT MSIZE PUSH31 0x2DF81992D60FC83A7AA1538958FD64736F6C63430007010033000000000000 ","sourceMap":"750:316:53:-:0;;;784:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;784:76:53;;;;;;;;;;-1:-1:-1;784:76:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;784:76:53;;;;;;;;;;-1:-1:-1;784:76:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;784:76:53;;-1:-1:-1;;2118:13:36;;844:4:53;;-1:-1:-1;850:6:53;;2118:13:36;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;750:316:53;;-1:-1:-1;;750:316:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;750:316:53;;;-1:-1:-1;750:316:53;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac146102d8578063a457c2d714610311578063a9059cbb1461034a578063dd62ed3e14610383576100df565b806340c10f191461026257806370a082311461029d57806395d89b41146102d0576100df565b806323b872dd116100bd57806323b872dd146101c8578063313ce5671461020b5780633950935114610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec6103be565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610472565b604080519115158252519081900360200190f35b6101b6610488565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561048e565b6102136104ef565b6040805160ff9092168252519081900360200190f35b61019a6004803603604081101561023f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104f8565b61029b6004803603604081101561027857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561053b565b005b6101b6600480360360208110156102b357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610549565b6100ec610571565b61029b600480360360408110156102ee57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105f0565b61019a6004803603604081101561032757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105fa565b61019a6004803603604081101561036057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610640565b6101b66004803603604081101561039957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602001351661064d565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104685780601f1061043d57610100808354040283529160200191610468565b820191906000526020600020905b81548152906001019060200180831161044b57829003601f168201915b5050505050905090565b600061047f338484610685565b50600192915050565b60025490565b600061049b8484846106f4565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546104e59186916104e0908661019e61081d565b610685565b5060019392505050565b60055460ff1690565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161047f9185906104e09086610833565b610545828261084c565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104685780601f1061043d57610100808354040283529160200191610468565b6105458282610905565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161047f9185906104e0908661019f61081d565b600061047f3384846106f4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61071873ffffffffffffffffffffffffffffffffffffffff841615156101986109f5565b61073c73ffffffffffffffffffffffffffffffffffffffff831615156101996109f5565b610747838383610a03565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461077a90826101a061081d565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546107b69082610833565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061082c84841115836109f5565b5050900390565b600082820161084584821015836109f5565b9392505050565b61085860008383610a03565b61087261086d82610867610488565b90610833565b610a08565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020546108a29082610833565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61092973ffffffffffffffffffffffffffffffffffffffff8316151561019b6109f5565b61093582600083610a03565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461096890826101b261081d565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020556109a361086d8261099d610488565b90610a0d565b60408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b816105455761054581610a1b565b505050565b600255565b60006108458383600161081d565b610a45817f42414c0000000000000000000000000000000000000000000000000000000000610a48565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220b18996cf395335f8f19ff0a5e951d019597e2df81992d60fc83a7aa1538958fd64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x383 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D0 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x229 JUMPI PUSH2 0xDF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x126 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x153 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x48E JUMP JUMPDEST PUSH2 0x213 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x549 JUMP JUMPDEST PUSH2 0xEC PUSH2 0x571 JUMP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x640 JUMP JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x64D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x468 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x468 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x44B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F CALLER DUP5 DUP5 PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP5 DUP5 DUP5 PUSH2 0x6F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x4E5 SWAP2 DUP7 SWAP2 PUSH2 0x4E0 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x81D JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x47F SWAP2 DUP6 SWAP1 PUSH2 0x4E0 SWAP1 DUP7 PUSH2 0x833 JUMP JUMPDEST PUSH2 0x545 DUP3 DUP3 PUSH2 0x84C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x468 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x468 JUMP JUMPDEST PUSH2 0x545 DUP3 DUP3 PUSH2 0x905 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x47F SWAP2 DUP6 SWAP1 PUSH2 0x4E0 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x81D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F CALLER DUP5 DUP5 PUSH2 0x6F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x718 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x73C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x747 DUP4 DUP4 DUP4 PUSH2 0xA03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x77A SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x81D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7B6 SWAP1 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x9F5 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x845 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x9F5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x858 PUSH1 0x0 DUP4 DUP4 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x872 PUSH2 0x86D DUP3 PUSH2 0x867 PUSH2 0x488 JUMP JUMPDEST SWAP1 PUSH2 0x833 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8A2 SWAP1 DUP3 PUSH2 0x833 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x929 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x935 DUP3 PUSH1 0x0 DUP4 PUSH2 0xA03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x968 SWAP1 DUP3 PUSH2 0x1B2 PUSH2 0x81D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x9A3 PUSH2 0x86D DUP3 PUSH2 0x99D PUSH2 0x488 JUMP JUMPDEST SWAP1 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH2 0x545 JUMPI PUSH2 0x545 DUP2 PUSH2 0xA1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 DUP4 DUP4 PUSH1 0x1 PUSH2 0x81D JUMP JUMPDEST PUSH2 0xA45 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xA48 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP10 SWAP7 0xCF CODECOPY MSTORE8 CALLDATALOAD 0xF8 CALL SWAP16 CREATE 0xA5 0xE9 MLOAD 0xD0 NOT MSIZE PUSH31 0x2DF81992D60FC83A7AA1538958FD64736F6C63430007010033000000000000 ","sourceMap":"750:316:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:164;;;;;;;;;;;;;;;;-1:-1:-1;4857:164:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6269:211;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;866:99:53:-;;;;;;;;;;;;;;;;-1:-1:-1;866:99:53;;;;;;;;;:::i;:::-;;4022:117:36;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2448:85::-;;;:::i;971:93:53:-;;;;;;;;;;;;;;;;-1:-1:-1;971:93:53;;;;;;;;;:::i;6967:312:36:-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;4570:149::-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;2254:81::-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;4857:164::-;4940:4;4956:37;4965:10;4977:7;4986:6;4956:8;:37::i;:::-;-1:-1:-1;5010:4:36;4857:164;;;;:::o;3500:106::-;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;6269:211::-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;866:99:53:-;934:24;940:9;951:6;934:5;:24::i;:::-;866:99;;:::o;4022:117:36:-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2448:85::-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;971:93:53;1036:21;1042:6;1050;1036:5;:21::i;6967:312:36:-;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;4570:149::-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;10034:213::-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;966:167::-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;8583:297:36:-;8658:49;8687:1;8691:7;8700:6;8658:20;:49::i;:::-;8718:42;8734:25;8752:6;8734:13;:11;:13::i;:::-;:17;;:25::i;:::-;8718:15;:42::i;:::-;8791:18;;;:9;:18;;;;;;;;;;;:30;;8814:6;8791:22;:30::i;:::-;8770:18;;;:9;:18;;;;;;;;;;;:51;;;;8836:37;;;;;;;8770:18;;:9;;8836:37;;;;;;;;;;8583:297;;:::o;9200:411::-;9275:68;9284:21;;;;;10885:3:0;9275:8:36;:68::i;:::-;9354:49;9375:7;9392:1;9396:6;9354:20;:49::i;:::-;9435:18;;;:9;:18;;;;;;;;;;;:65;;9458:6;12329:3:0;9435:22:36;:65::i;:::-;9414:18;;;:9;:18;;;;;;;;;;:86;9510:42;9526:25;9544:6;9526:13;:11;:13::i;:::-;:17;;:25::i;9510:42::-;9567:37;;;;;;;;9593:1;;9567:37;;;;;;;;;;;;;9200:411;;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;11245:183:36:-;;;;:::o;3870:94::-;3937:12;:20;3870:94::o;1404:121:45:-;1462:7;1488:30;1492:1;1495;5194::0;1488:3:45;:30::i;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/ERC20Mock.sol\":{\"keccak256\":\"0x8d2b8caba9d7c313b1e6d13b305f9aae9304ed533b24b56345311f175a02ccd1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37c52b721d6a59fb11dc5fdd27a633c0af3e0cb7a1044a8f6b86e9ac3d7fe1cb\",\"dweb:/ipfs/QmdMQG1kKsZtyDgxVk3ZLHkoYi442pxf1MfAKVj2B74qLj\"]}},\"version\":1}"}},"contracts/test/ERC20PermitMock.sol":{"ERC20PermitMock":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60e06040523480156200001157600080fd5b506040516200133a3803806200133a833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040525050508180604051806040016040528060018152602001603160f81b81525084848160039080519060200190620001d59291906200023b565b508051620001eb9060049060208401906200023b565b50506005805460ff19166012179055508151602092830120608052805191012060a05250507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05250620002d7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027e57805160ff1916838001178555620002ae565b82800160010185558215620002ae579182015b82811115620002ae57825182559160200191906001019062000291565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b60805160a05160c0516110366200030460003980610cee525080610d30525080610d0f52506110366000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80637ecebe00116100b2578063a457c2d711610081578063d505accf11610066578063d505accf14610448578063dd62ed3e146104a6578063ed24911d146104e157610136565b8063a457c2d7146103d6578063a9059cbb1461040f57610136565b80637ecebe001461032f57806390193b7c1461036257806395d89b41146103955780639dc29fac1461039d57610136565b8063313ce5671161010957806339509351116100ee578063395093511461028857806340c10f19146102c157806370a08231146102fc57610136565b8063313ce567146102625780633644e5151461028057610136565b806306fdde031461013b578063095ea7b3146101b857806318160ddd1461020557806323b872dd1461021f575b600080fd5b6101436104e9565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017d578181015183820152602001610165565b50505050905090810190601f1680156101aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f1600480360360408110156101ce57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059d565b604080519115158252519081900360200190f35b61020d6105b3565b60408051918252519081900360200190f35b6101f16004803603606081101561023557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356105b9565b61026a61061a565b6040805160ff9092168252519081900360200190f35b61020d610623565b6101f16004803603604081101561029e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610632565b6102fa600480360360408110156102d757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610675565b005b61020d6004803603602081101561031257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610683565b61020d6004803603602081101561034557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106ab565b61020d6004803603602081101561037857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106bc565b6101436106e4565b6102fa600480360360408110156103b357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610763565b6101f1600480360360408110156103ec57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561076d565b6101f16004803603604081101561042557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356107b3565b6102fa600480360360e081101561045e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356107c0565b61020d600480360360408110156104bc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610895565b61020d6108cd565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b5050505050905090565b60006105aa3384846108d7565b50600192915050565b60025490565b60006105c6848484610946565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461061091869161060b908661019e610a6f565b6108d7565b5060019392505050565b60055460ff1690565b600061062d6108cd565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105aa91859061060b9086610a85565b61067f8282610a9e565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60006106b6826106bc565b92915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b61067f8282610b57565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105aa91859061060b908661019f610a6f565b60006105aa338484610946565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107ef8c6106bc565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506108808882610877878787610c47565b886101f8610c86565b61088b8888886108d7565b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600061062d610cea565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61096a73ffffffffffffffffffffffffffffffffffffffff84161515610198610db5565b61098e73ffffffffffffffffffffffffffffffffffffffff83161515610199610db5565b610999838383610dc3565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546109cc90826101a0610a6f565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a089082610a85565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610a7e8484111583610db5565b5050900390565b6000828201610a978482101583610db5565b9392505050565b610aaa60008383610dc3565b610ac4610abf82610ab96105b3565b90610a85565b610dc8565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610af49082610a85565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610b7b73ffffffffffffffffffffffffffffffffffffffff8316151561019b610db5565b610b8782600083610dc3565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610bba90826101b2610a6f565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055610bf5610abf82610bef6105b3565b90610dcd565b60408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b6000610c9185610ddb565b9050610ca7610ca1878387610e42565b83610db5565b610cb6428410156101b8610db5565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152600660205260409020805460010190555050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610d57610f54565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b8161067f5761067f81610f58565b505050565b600255565b6000610a9783836001610a6f565b6000610de5610cea565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000610e5482516041146101b9610db5565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ecd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590610f4857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b4690565b610f82817f42414c0000000000000000000000000000000000000000000000000000000000610f85565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212207c89fccd729018fa63180bc309112e229bef7e61c45bb266b6ba2c8334f5910064736f6c63430007010033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x133A CODESIZE SUB DUP1 PUSH3 0x133A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1D5 SWAP3 SWAP2 SWAP1 PUSH3 0x23B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1EB SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x23B JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x80 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE POP POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE POP PUSH3 0x2D7 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x27E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2AE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2AE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2AE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x291 JUMP JUMPDEST POP PUSH3 0x2BC SWAP3 SWAP2 POP PUSH3 0x2C0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2BC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1036 PUSH3 0x304 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xCEE MSTORE POP DUP1 PUSH2 0xD30 MSTORE POP DUP1 PUSH2 0xD0F MSTORE POP PUSH2 0x1036 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x4E1 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40F JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x39D JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FC JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x280 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1AA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x623 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x632 JUMP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x675 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x683 JUMP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x143 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x895 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x593 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x593 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x576 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AA CALLER DUP5 DUP5 PUSH2 0x8D7 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP5 DUP5 DUP5 PUSH2 0x946 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x610 SWAP2 DUP7 SWAP2 PUSH2 0x60B SWAP1 DUP7 PUSH2 0x19E PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5AA SWAP2 DUP6 SWAP1 PUSH2 0x60B SWAP1 DUP7 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0xA9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x593 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0xB57 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5AA SWAP2 DUP6 SWAP1 PUSH2 0x60B SWAP1 DUP7 PUSH2 0x19F PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AA CALLER DUP5 DUP5 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7EF DUP13 PUSH2 0x6BC JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x880 DUP9 DUP3 PUSH2 0x877 DUP8 DUP8 DUP8 PUSH2 0xC47 JUMP JUMPDEST DUP9 PUSH2 0x1F8 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x88B DUP9 DUP9 DUP9 PUSH2 0x8D7 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x96A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x98E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x999 DUP4 DUP4 DUP4 PUSH2 0xDC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9CC SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA08 SWAP1 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP5 DUP5 GT ISZERO DUP4 PUSH2 0xDB5 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0xA97 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAAA PUSH1 0x0 DUP4 DUP4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xAC4 PUSH2 0xABF DUP3 PUSH2 0xAB9 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAF4 SWAP1 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB7B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0xB87 DUP3 PUSH1 0x0 DUP4 PUSH2 0xDC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBBA SWAP1 DUP3 PUSH2 0x1B2 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xBF5 PUSH2 0xABF DUP3 PUSH2 0xBEF PUSH2 0x5B3 JUMP JUMPDEST SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x41 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE8 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP6 PUSH2 0xDDB JUMP JUMPDEST SWAP1 POP PUSH2 0xCA7 PUSH2 0xCA1 DUP8 DUP4 DUP8 PUSH2 0xE42 JUMP JUMPDEST DUP4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0xCB6 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0xDB5 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0xD57 PUSH2 0xF54 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x67F JUMPI PUSH2 0x67F DUP2 PUSH2 0xF58 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA97 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE5 PUSH2 0xCEA JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE54 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF48 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0xF82 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xF85 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x89FCCD729018FA63180BC309112E229BEF7E61C45BB266B6BA2C8334F5 SWAP2 STOP PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"756:353:54:-:0;;;809:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;809:94:54;;;;;;;;;;-1:-1:-1;809:94:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;809:94:54;;;;;;;;;;-1:-1:-1;809:94:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:4;1301::38;2020:280:35;;;;;;;;;;;;;-1:-1:-1;;;2020:280:35;;;869:4:54;875:6;2126:5:36;2118;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;2100:22:35;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;;2198:95:35;2185:108;;-1:-1:-1;756:353:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;756:353:54;;;-1:-1:-1;756:353:54;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"5870":[{"length":32,"start":3343}],"5872":[{"length":32,"start":3376}],"5874":[{"length":32,"start":3310}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101365760003560e01c80637ecebe00116100b2578063a457c2d711610081578063d505accf11610066578063d505accf14610448578063dd62ed3e146104a6578063ed24911d146104e157610136565b8063a457c2d7146103d6578063a9059cbb1461040f57610136565b80637ecebe001461032f57806390193b7c1461036257806395d89b41146103955780639dc29fac1461039d57610136565b8063313ce5671161010957806339509351116100ee578063395093511461028857806340c10f19146102c157806370a08231146102fc57610136565b8063313ce567146102625780633644e5151461028057610136565b806306fdde031461013b578063095ea7b3146101b857806318160ddd1461020557806323b872dd1461021f575b600080fd5b6101436104e9565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017d578181015183820152602001610165565b50505050905090810190601f1680156101aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f1600480360360408110156101ce57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561059d565b604080519115158252519081900360200190f35b61020d6105b3565b60408051918252519081900360200190f35b6101f16004803603606081101561023557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356105b9565b61026a61061a565b6040805160ff9092168252519081900360200190f35b61020d610623565b6101f16004803603604081101561029e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610632565b6102fa600480360360408110156102d757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610675565b005b61020d6004803603602081101561031257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610683565b61020d6004803603602081101561034557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106ab565b61020d6004803603602081101561037857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106bc565b6101436106e4565b6102fa600480360360408110156103b357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610763565b6101f1600480360360408110156103ec57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561076d565b6101f16004803603604081101561042557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356107b3565b6102fa600480360360e081101561045e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356107c0565b61020d600480360360408110156104bc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610895565b61020d6108cd565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b5050505050905090565b60006105aa3384846108d7565b50600192915050565b60025490565b60006105c6848484610946565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461061091869161060b908661019e610a6f565b6108d7565b5060019392505050565b60055460ff1690565b600061062d6108cd565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105aa91859061060b9086610a85565b61067f8282610a9e565b5050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60006106b6826106bc565b92915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b61067f8282610b57565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105aa91859061060b908661019f610a6f565b60006105aa338484610946565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107ef8c6106bc565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506108808882610877878787610c47565b886101f8610c86565b61088b8888886108d7565b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600061062d610cea565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b61096a73ffffffffffffffffffffffffffffffffffffffff84161515610198610db5565b61098e73ffffffffffffffffffffffffffffffffffffffff83161515610199610db5565b610999838383610dc3565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546109cc90826101a0610a6f565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a089082610a85565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610a7e8484111583610db5565b5050900390565b6000828201610a978482101583610db5565b9392505050565b610aaa60008383610dc3565b610ac4610abf82610ab96105b3565b90610a85565b610dc8565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610af49082610a85565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610b7b73ffffffffffffffffffffffffffffffffffffffff8316151561019b610db5565b610b8782600083610dc3565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610bba90826101b2610a6f565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055610bf5610abf82610bef6105b3565b90610dcd565b60408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b6000610c9185610ddb565b9050610ca7610ca1878387610e42565b83610db5565b610cb6428410156101b8610db5565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152600660205260409020805460010190555050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610d57610f54565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b8161067f5761067f81610f58565b505050565b600255565b6000610a9783836001610a6f565b6000610de5610cea565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000610e5482516041146101b9610db5565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610ecd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590610f4857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b4690565b610f82817f42414c0000000000000000000000000000000000000000000000000000000000610f85565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212207c89fccd729018fa63180bc309112e229bef7e61c45bb266b6ba2c8334f5910064736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x4E1 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40F JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x39D JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FC JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x280 JUMPI PUSH2 0x136 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x165 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1AA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x61A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x623 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x632 JUMP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x675 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x683 JUMP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x143 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x895 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x593 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x593 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x576 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AA CALLER DUP5 DUP5 PUSH2 0x8D7 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP5 DUP5 DUP5 PUSH2 0x946 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x610 SWAP2 DUP7 SWAP2 PUSH2 0x60B SWAP1 DUP7 PUSH2 0x19E PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5AA SWAP2 DUP6 SWAP1 PUSH2 0x60B SWAP1 DUP7 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0xA9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x593 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x568 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x593 JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0xB57 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x5AA SWAP2 DUP6 SWAP1 PUSH2 0x60B SWAP1 DUP7 PUSH2 0x19F PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AA CALLER DUP5 DUP5 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x7EF DUP13 PUSH2 0x6BC JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x880 DUP9 DUP3 PUSH2 0x877 DUP8 DUP8 DUP8 PUSH2 0xC47 JUMP JUMPDEST DUP9 PUSH2 0x1F8 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x88B DUP9 DUP9 DUP9 PUSH2 0x8D7 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62D PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x96A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x98E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x999 DUP4 DUP4 DUP4 PUSH2 0xDC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9CC SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA08 SWAP1 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP5 DUP5 GT ISZERO DUP4 PUSH2 0xDB5 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0xA97 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAAA PUSH1 0x0 DUP4 DUP4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0xAC4 PUSH2 0xABF DUP3 PUSH2 0xAB9 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAF4 SWAP1 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB7B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0xB87 DUP3 PUSH1 0x0 DUP4 PUSH2 0xDC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBBA SWAP1 DUP3 PUSH2 0x1B2 PUSH2 0xA6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xBF5 PUSH2 0xABF DUP3 PUSH2 0xBEF PUSH2 0x5B3 JUMP JUMPDEST SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x41 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE8 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC91 DUP6 PUSH2 0xDDB JUMP JUMPDEST SWAP1 POP PUSH2 0xCA7 PUSH2 0xCA1 DUP8 DUP4 DUP8 PUSH2 0xE42 JUMP JUMPDEST DUP4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0xCB6 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0xDB5 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0xD57 PUSH2 0xF54 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x67F JUMPI PUSH2 0x67F DUP2 PUSH2 0xF58 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA97 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE5 PUSH2 0xCEA JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE54 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF48 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0xF82 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xF85 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x89FCCD729018FA63180BC309112E229BEF7E61C45BB266B6BA2C8334F5 SWAP2 STOP PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"756:353:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:164;;;;;;;;;;;;;;;;-1:-1:-1;4857:164:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2243:113:38;;;:::i;6269:211:36:-;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;909:99:54:-;;;;;;;;;;;;;;;;-1:-1:-1;909:99:54;;;;;;;;;:::i;:::-;;4022:117:36;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;2006:113:38:-;;;;;;;;;;;;;;;;-1:-1:-1;2006:113:38;;;;:::i;1303:121:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1303:121:19;;;;:::i;2448:85:36:-;;;:::i;1014:93:54:-;;;;;;;;;;;;;;;;-1:-1:-1;1014:93:54;;;;;;;;;:::i;6967:312:36:-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;1437:508:38:-;;;;;;;;;;;;;;;;-1:-1:-1;1437:508:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4570:149:36:-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;1184:113:19:-;;;:::i;2254:81:36:-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;4857:164::-;4940:4;4956:37;4965:10;4977:7;4986:6;4956:8;:37::i;:::-;-1:-1:-1;5010:4:36;4857:164;;;;:::o;3500:106::-;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;2243:113:38:-;2303:7;2329:20;:18;:20::i;:::-;2322:27;;2243:113;:::o;6269:211:36:-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;909:99:54:-;977:24;983:9;994:6;977:5;:24::i;:::-;909:99;;:::o;4022:117:36:-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;2006:113:38:-;2067:7;2093:19;2106:5;2093:12;:19::i;:::-;2086:26;2006:113;-1:-1:-1;;2006:113:38:o;1303:121:19:-;1398:19;;1372:7;1398:19;;;:10;:19;;;;;;;1303:121::o;2448:85:36:-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;1014:93:54;1079:21;1085:6;1093;1079:5;:21::i;6967:312:36:-;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;1437:508:38:-;1645:18;921:109;1718:5;1725:7;1734:5;1741:19;1754:5;1741:12;:19::i;:::-;1762:8;1689:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:115;;;;;;1645:136;;1792:104;1814:5;1821:10;1833:26;1851:1;1854;1857;1833:17;:26::i;:::-;1861:8;13190:3:0;1792:21:38;:104::i;:::-;1907:31;1916:5;1923:7;1932:5;1907:8;:31::i;:::-;1437:508;;;;;;;;:::o;4570:149:36:-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;1184:113:19:-;1244:7;1270:20;:18;:20::i;10034:213:36:-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;966:167::-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;8583:297:36:-;8658:49;8687:1;8691:7;8700:6;8658:20;:49::i;:::-;8718:42;8734:25;8752:6;8734:13;:11;:13::i;:::-;:17;;:25::i;:::-;8718:15;:42::i;:::-;8791:18;;;:9;:18;;;;;;;;;;;:30;;8814:6;8791:22;:30::i;:::-;8770:18;;;:9;:18;;;;;;;;;;;:51;;;;8836:37;;;;;;;8770:18;;:9;;8836:37;;;;;;;;;;8583:297;;:::o;9200:411::-;9275:68;9284:21;;;;;10885:3:0;9275:8:36;:68::i;:::-;9354:49;9375:7;9392:1;9396:6;9354:20;:49::i;:::-;9435:18;;;:9;:18;;;;;;;;;;;:65;;9458:6;12329:3:0;9435:22:36;:65::i;:::-;9414:18;;;:9;:18;;;;;;;;;;:86;9510:42;9526:25;9544:6;9526:13;:11;:13::i;:::-;:17;;:25::i;9510:42::-;9567:37;;;;;;;;9593:1;;9567:37;;;;;;;;;;;;;9200:411;;:::o;3803:419:19:-;3963:13;;;3973:2;3963:13;;;;;;;;;3914:12;;;;3963:13;;;;;;;;;;;-1:-1:-1;3963:13:19;3938:38;;4092:1;4087:2;4076:9;4072:18;4065:29;4134:1;4129:2;4118:9;4114:18;4107:29;4177:1;4172:2;4161:9;4157:18;4149:30;4206:9;3803:419;-1:-1:-1;;;;3803:419:19:o;1701:1214::-;1895:14;1912:28;1929:10;1912:16;:28::i;:::-;1895:45;;1950:66;1959:45;1977:7;1986:6;1994:9;1959:17;:45::i;:::-;2006:9;1950:8;:66::i;:::-;2487:63;2508:15;2496:8;:27;;12656:3:0;2487:8:19;:63::i;:::-;-1:-1:-1;;;2884:19:19;;;;;;;;:10;:19;;;;;:24;;2907:1;2884:24;;;-1:-1:-1;;1701:1214:19:o;2386:188:35:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;11245:183:36:-;;;;:::o;3870:94::-;3937:12;:20;3870:94::o;1404:121:45:-;1462:7;1488:30;1492:1;1495;5194::0;1488:3:45;:30::i;3199:183:35:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;2921:876:19:-;3066:4;3082:60;3091:9;:16;3111:2;3091:22;12713:3:0;3082:8:19;:60::i;:::-;3153:9;3172;3191:7;3427:4;3416:9;3412:20;3406:27;3401:32;;3472:4;3461:9;3457:20;3451:27;3446:32;;3525:4;3514:9;3510:20;3504:27;3501:1;3496:36;3491:41;;3552:24;3579:26;3589:6;3597:1;3600;3603;3579:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:26:19;;;;;;-1:-1:-1;;3728:30:19;;;;;;;:61;;;3782:7;3762:27;;:16;:27;;;3728:61;3720:70;2921:876;-1:-1:-1;;;;;;;;2921:876:19:o;3433:187:35:-;3595:9;;3570:44::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC20PermitMock.sol\":\"ERC20PermitMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol\":{\"keccak256\":\"0xeb8a588cfca3dddd2da141ec6adc1672646186f6dbd1e707ec9b1def45e59c25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec0afd86c576a818b61a5cb6e4d3bf946b73ce04728a2e53b3bfc7f8522b1aa1\",\"dweb:/ipfs/QmS81F4CQ7nTqamsdHaN9AGwYRguw5fCZ5EM9jtVXT7G5U\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/ERC20Permit.sol\":{\"keccak256\":\"0xbd474d9fb6f51b241ac85b659eabed4bac9a029f8565c64bc285edf04ef591cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334c367ffb8ff1df7f8dfebe67d0d7bf72cf39306481dd32f98b5a52033082b0\",\"dweb:/ipfs/QmdEmGyCohoDBhHqBaV6JbzYEXUqhRzVjLCPCmc81HfqUs\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/ERC20PermitMock.sol\":{\"keccak256\":\"0x648e2ef71075eb3534f753a9c74f24ea2165477cbd5b1d91fc9c38becc7d00fc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://db4b461772ff0b38d1f9a6512da8fc20539e2fd50e07ca33de48c21b368f99ba\",\"dweb:/ipfs/QmPydpL1mkyguAxsCBdD6LStSqwy6Wi62txTXoVeNBtozN\"]}},\"version\":1}"}},"contracts/test/EnumerableMapMock.sol":{"EnumerableIERC20ToBytes32MapMock":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"result","type":"bool"}],"name":"OperationResult","type":"event"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"at","outputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"}],"name":"contains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"errorCode","type":"uint256"}],"name":"get","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"errorCode","type":"uint256"}],"name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"length","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"}],"name":"remove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"unchecked_at","outputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"}],"name":"unchecked_indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"name":"unchecked_setAt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"unchecked_valueAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b506108bb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635dbe47e811610081578063c65d26831161005b578063c65d268314610249578063e0886f9014610296578063e37b1903146102b3576100c9565b80635dbe47e8146101ac578063adcd29d9146101f3578063b464631b14610210576100c9565b806329092d0e116100b257806329092d0e1461011b5780633e7b8e711461015057806354996d5d14610189576100c9565b80630127190b146100ce5780631f7b6d3214610113575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102ec565b60408051918252519081900360200190f35b6101016102fe565b61014e6004803603602081101561013157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b005b61014e6004803603604081101561016657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610358565b61014e6004803603604081101561019f57600080fd5b50803590602001356103a3565b6101df600480360360208110156101c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103b3565b604080519115158252519081900360200190f35b6101016004803603602081101561020957600080fd5b50356103bf565b6101016004803603604081101561022657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103cb565b6102666004803603602081101561025f57600080fd5b50356103df565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091528051918290030190f35b610266600480360360208110156102ac57600080fd5b50356103f5565b610101600480360360408110156102c957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610402565b60006102f8818361040f565b92915050565b600061030a600061043b565b905090565b600061031b818361043f565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a15050565b6000610365818484610590565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a1505050565b6103af6000838361068f565b5050565b60006102f881836106a7565b60006102f881836106d5565b60006103d88184846106eb565b9392505050565b6000806103ec8184610735565b91509150915091565b6000806103ec8184610766565b60006103d881848461078f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600291909101602052604090205490565b5490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260028301602052604081205480156105865783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019101808214610517576000818152600180880160209081526040808420868552818520815481547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9182161782558286015491860191909155905416845260028a0190915290912090830190555b600081815260018088016020908152604080842080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155830184905593895573ffffffffffffffffffffffffffffffffffffffff881683526002890190529181205592506102f8915050565b60009150506102f8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002840160205260408120548061064f575050825460408051808201825273ffffffffffffffffffffffffffffffffffffffff858116808352602080840187815260008781526001808c018452878220965187547fffffffffffffffffffffffff000000000000000000000000000000000000000016961695909517865590519484019490945594820180895590835260028801909452919020919091556103d8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160009081526001808601602052604082200183905590509392505050565b60009182526001928301602052604090912090910155565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902054151590565b6000908152600191820160205260409020015490565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260028401602052604081205461071f811515846107d4565b61072c85600183036106d5565b95945050505050565b6000908152600191820160205260409020805491015473ffffffffffffffffffffffffffffffffffffffff90911691565b60008061077a8385600001541160646107d4565b6107848484610735565b915091509250929050565b60008061079c858561040f565b90506107aa811515846107d4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01949350505050565b816103af576103af81610807817f42414c000000000000000000000000000000000000000000000000000000000061080a565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220eab7792b43af23d048871195ca69362413f4df67da3a923671fb2879cf2c102d64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DBE47E8 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC65D2683 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC65D2683 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE0886F90 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xE37B1903 EQ PUSH2 0x2B3 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xADCD29D9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xB464631B EQ PUSH2 0x210 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x29092D0E GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3E7B8E71 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x54996D5D EQ PUSH2 0x189 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x127190B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A PUSH1 0x0 PUSH2 0x43B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B DUP2 DUP4 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP2 DUP5 DUP5 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3AF PUSH1 0x0 DUP4 DUP4 PUSH2 0x68F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 DUP2 DUP5 DUP5 PUSH2 0x6EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC DUP2 DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC DUP2 DUP5 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 DUP2 DUP5 DUP5 PUSH2 0x78F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x586 JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND OR DUP3 SSTORE DUP3 DUP7 ADD SLOAD SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD AND DUP5 MSTORE PUSH1 0x2 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 DUP4 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE DUP4 ADD DUP5 SWAP1 SSTORE SWAP4 DUP10 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP10 ADD SWAP1 MSTORE SWAP2 DUP2 KECCAK256 SSTORE SWAP3 POP PUSH2 0x2F8 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x64F JUMPI POP POP DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP13 ADD DUP5 MSTORE DUP8 DUP3 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP7 SSTORE SWAP1 MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP5 DUP3 ADD DUP1 DUP10 SSTORE SWAP1 DUP4 MSTORE PUSH1 0x2 DUP9 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3D8 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 SWAP3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x71F DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x72C DUP6 PUSH1 0x1 DUP4 SUB PUSH2 0x6D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77A DUP4 DUP6 PUSH1 0x0 ADD SLOAD GT PUSH1 0x64 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x784 DUP5 DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x79C DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x3AF JUMPI PUSH2 0x3AF DUP2 PUSH2 0x807 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x80A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB7 PUSH26 0x2B43AF23D048871195CA69362413F4DF67DA3A923671FB2879CF 0x2C LT 0x2D PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"233:1568:55:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80635dbe47e811610081578063c65d26831161005b578063c65d268314610249578063e0886f9014610296578063e37b1903146102b3576100c9565b80635dbe47e8146101ac578063adcd29d9146101f3578063b464631b14610210576100c9565b806329092d0e116100b257806329092d0e1461011b5780633e7b8e711461015057806354996d5d14610189576100c9565b80630127190b146100ce5780631f7b6d3214610113575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102ec565b60408051918252519081900360200190f35b6101016102fe565b61014e6004803603602081101561013157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b005b61014e6004803603604081101561016657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610358565b61014e6004803603604081101561019f57600080fd5b50803590602001356103a3565b6101df600480360360208110156101c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103b3565b604080519115158252519081900360200190f35b6101016004803603602081101561020957600080fd5b50356103bf565b6101016004803603604081101561022657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103cb565b6102666004803603602081101561025f57600080fd5b50356103df565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091528051918290030190f35b610266600480360360208110156102ac57600080fd5b50356103f5565b610101600480360360408110156102c957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610402565b60006102f8818361040f565b92915050565b600061030a600061043b565b905090565b600061031b818361043f565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a15050565b6000610365818484610590565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a1505050565b6103af6000838361068f565b5050565b60006102f881836106a7565b60006102f881836106d5565b60006103d88184846106eb565b9392505050565b6000806103ec8184610735565b91509150915091565b6000806103ec8184610766565b60006103d881848461078f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600291909101602052604090205490565b5490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260028301602052604081205480156105865783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019101808214610517576000818152600180880160209081526040808420868552818520815481547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9182161782558286015491860191909155905416845260028a0190915290912090830190555b600081815260018088016020908152604080842080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155830184905593895573ffffffffffffffffffffffffffffffffffffffff881683526002890190529181205592506102f8915050565b60009150506102f8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002840160205260408120548061064f575050825460408051808201825273ffffffffffffffffffffffffffffffffffffffff858116808352602080840187815260008781526001808c018452878220965187547fffffffffffffffffffffffff000000000000000000000000000000000000000016961695909517865590519484019490945594820180895590835260028801909452919020919091556103d8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160009081526001808601602052604082200183905590509392505050565b60009182526001928301602052604090912090910155565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902054151590565b6000908152600191820160205260409020015490565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260028401602052604081205461071f811515846107d4565b61072c85600183036106d5565b95945050505050565b6000908152600191820160205260409020805491015473ffffffffffffffffffffffffffffffffffffffff90911691565b60008061077a8385600001541160646107d4565b6107848484610735565b915091509250929050565b60008061079c858561040f565b90506107aa811515846107d4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01949350505050565b816103af576103af81610807817f42414c000000000000000000000000000000000000000000000000000000000061080a565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220eab7792b43af23d048871195ca69362413f4df67da3a923671fb2879cf2c102d64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DBE47E8 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC65D2683 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC65D2683 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE0886F90 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xE37B1903 EQ PUSH2 0x2B3 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xADCD29D9 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xB464631B EQ PUSH2 0x210 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x29092D0E GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3E7B8E71 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x54996D5D EQ PUSH2 0x189 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x127190B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A PUSH1 0x0 PUSH2 0x43B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B DUP2 DUP4 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP2 DUP5 DUP5 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3AF PUSH1 0x0 DUP4 DUP4 PUSH2 0x68F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 DUP2 DUP5 DUP5 PUSH2 0x6EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC DUP2 DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC DUP2 DUP5 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D8 DUP2 DUP5 DUP5 PUSH2 0x78F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x586 JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND OR DUP3 SSTORE DUP3 DUP7 ADD SLOAD SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD AND DUP5 MSTORE PUSH1 0x2 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 DUP4 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE DUP4 ADD DUP5 SWAP1 SSTORE SWAP4 DUP10 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP10 ADD SWAP1 MSTORE SWAP2 DUP2 KECCAK256 SSTORE SWAP3 POP PUSH2 0x2F8 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x64F JUMPI POP POP DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP13 ADD DUP5 MSTORE DUP8 DUP3 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP7 SSTORE SWAP1 MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP5 DUP3 ADD DUP1 DUP10 SSTORE SWAP1 DUP4 MSTORE PUSH1 0x2 DUP9 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3D8 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 SWAP3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x71F DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x72C DUP6 PUSH1 0x1 DUP4 SUB PUSH2 0x6D5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77A DUP4 DUP6 PUSH1 0x0 ADD SLOAD GT PUSH1 0x64 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x784 DUP5 DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x79C DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x3AF JUMPI PUSH2 0x3AF DUP2 PUSH2 0x807 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x80A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB7 PUSH26 0x2B43AF23D048871195CA69362413F4DF67DA3A923671FB2879CF 0x2C LT 0x2D PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"233:1568:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:120;;;;;;;;;;;;;;;;-1:-1:-1;684:120:55;;;;:::i;:::-;;;;;;;;;;;;;;;;1191:85;;;:::i;1065:120::-;;;;;;;;;;;;;;;;-1:-1:-1;1065:120:55;;;;:::i;:::-;;542:136;;;;;;;;;;;;;;;;-1:-1:-1;542:136:55;;;;;;;;;:::i;946:113::-;;;;;;;;;;;;;;;;-1:-1:-1;946:113:55;;;;;;;:::i;437:99::-;;;;;;;;;;;;;;;;-1:-1:-1;437:99:55;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1540:131;;;;;;;;;;;;;;;;-1:-1:-1;1540:131:55;;:::i;1677:122::-;;;;;;;;;;;;;;;;-1:-1:-1;1677:122:55;;;;;;;;;:::i;1401:133::-;;;;;;;;;;;;;;;;-1:-1:-1;1401:133:55;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;1282:113;;;;;;;;;;;;;;;;-1:-1:-1;1282:113:55;;:::i;810:130::-;;;;;;;;;;;;;;;;-1:-1:-1;810:130:55;;;;;;;;;:::i;684:120::-;744:7;770:27;744:7;793:3;770:22;:27::i;:::-;763:34;684:120;-1:-1:-1;;684:120:55:o;1191:85::-;1230:7;1256:13;:4;:11;:13::i;:::-;1249:20;;1191:85;:::o;1065:120::-;1110:11;1124:16;1110:11;1136:3;1124:11;:16::i;:::-;1155:23;;;;;;;;;;1110:30;;-1:-1:-1;1155:23:55;;;;;;;;;;1065:120;;:::o;542:136::-;599:11;613:20;599:11;622:3;627:5;613:8;:20::i;:::-;648:23;;;;;;;;;;599:34;;-1:-1:-1;648:23:55;;;;;;;;;;542:136;;;:::o;946:113::-;1018:34;:4;1039:5;1046;1018:20;:34::i;:::-;946:113;;:::o;437:99::-;488:4;511:18;488:4;525:3;511:13;:18::i;1540:131::-;1603:13;1635:29;1603:13;1658:5;1635:22;:29::i;1677:122::-;1742:7;1768:24;1742:7;1777:3;1782:9;1768:8;:24::i;:::-;1761:31;1677:122;-1:-1:-1;;;1677:122:55:o;1401:133::-;1459:10;;1503:24;1459:10;1521:5;1503:17;:24::i;:::-;1496:31;;;;1401:133;;;:::o;1282:113::-;1330:10;;1374:14;1330:10;1382:5;1374:7;:14::i;810:130::-;879:7;905:28;879:7;918:3;923:9;905:12;:28::i;8626:144:39:-;8746:17;;8720:7;8746:17;;;:12;;;;;:17;;;;;;;8626:144::o;6052:115::-;6149:11;;6052:115::o;4197:1549::-;4408:17;;;4275:4;4408:17;;;:12;;;:17;;;;;;4484:13;;4480:1260;;4892:11;;4846:12;;;;;4892:15;5007:26;;;5003:420;;5053:41;5097:23;;;:12;;;;:23;;;;;;;;5220:27;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;5346:14;;;5333:28;;:12;;;:28;;;;;;5364:17;;;5333:48;;5003:420;5508:23;;;;:12;;;;:23;;;;;;;;5501:30;;;;;;;;;;;5545:23;;;5501:30;5643:17;;;;:12;;;:17;;;;;5636:24;5508:12;-1:-1:-1;5675:11:39;;-1:-1:-1;;5675:11:39;4480:1260;5724:5;5717:12;;;;;2604:859;2857:17;;;2724:4;2857:17;;;:12;;;:17;;;;;;2934:13;2930:527;;-1:-1:-1;;2988:11:39;;3044:53;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3013:28:39;;;:12;;;;:28;;;;;:84;;;;;;;;;;;;;;;;;;;;;;;3125:18;;;3111:32;;;3285:17;;;:12;;;:17;;;;;;:38;;;;3337:11;;2930:527;3392:12;;3379:26;;;;:12;;;;:26;;;;;:33;:41;;;:26;-1:-1:-1;2604:859:39;;;;;:::o;3852:177::-;3988:19;;;;:12;;;;:19;;;;;;:26;;;:34;3852:177::o;5825:137::-;5933:17;;5910:4;5933:17;;;:12;;;;;:17;;;;;;:22;;;5825:137::o;7424:156::-;7521:7;7547:19;;;:12;;;;:19;;;;;:26;;;7424:156::o;7767:278::-;7931:17;;;7896:7;7931:17;;;:12;;;:17;;;;;;7958:30;7967:9;;;7978;7958:8;:30::i;:::-;8005:33;8023:3;8036:1;8028:5;:9;8005:17;:33::i;:::-;7998:40;7767:278;-1:-1:-1;;;;;7767:278:39:o;7040:228::-;7132:6;7199:19;;;:12;;;;:19;;;;;7236:10;;7248:12;;;7236:10;;;;;7040:228::o;6520:208::-;6602:6;6610:7;6629:51;6652:5;6638:3;:11;;;:19;5662:3:0;6629:8:39;:51::i;:::-;6697:24;6710:3;6715:5;6697:12;:24::i;:::-;6690:31;;;;6520:208;;;;;:::o;8178:296::-;8311:7;8330:22;8355:27;8373:3;8378;8355:17;:27::i;:::-;8330:52;-1:-1:-1;8392:40:39;8401:19;;;8422:9;8392:8;:40::i;:::-;8449:18;;;8178:296;-1:-1:-1;;;;8178:296:39:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"at(uint256)":"e0886f90","contains(address)":"5dbe47e8","get(address,uint256)":"b464631b","indexOf(address,uint256)":"e37b1903","length()":"1f7b6d32","remove(address)":"29092d0e","set(address,bytes32)":"3e7b8e71","unchecked_at(uint256)":"c65d2683","unchecked_indexOf(address)":"0127190b","unchecked_setAt(uint256,bytes32)":"54996d5d","unchecked_valueAt(uint256)":"adcd29d9"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"OperationResult\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"at\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unchecked_at\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"unchecked_indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"unchecked_setAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unchecked_valueAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/EnumerableMapMock.sol\":\"EnumerableIERC20ToBytes32MapMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x5d365300963a21f5d9bd8c7c514a859d56da8f62fb076a79581029b4291a9251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3536afab3d7b6c632a137f38e3e6ea0a0cf0bc2a31c23dd3c26ce266828699ef\",\"dweb:/ipfs/QmV8pciSxGX5hngLoUiQveEvqAJh8hUSVtoNbnvGBicbN3\"]},\"contracts/test/EnumerableMapMock.sol\":{\"keccak256\":\"0xc351ff20d63236fb1e111a6ba2eee96515993bc7deeaa39207b49cbf5836c788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://445619965e2a7db0bf30e4b2fb41b99405a95ff74eeed29467f087cf9de75d80\",\"dweb:/ipfs/QmeChy1jZeh6shqi8xWnHJtS7URsaLwhY8skrqmB7NPL1b\"]}},\"version\":1}"},"EnumerableIERC20ToUint256MapMock":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"result","type":"bool"}],"name":"OperationResult","type":"event"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"at","outputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"}],"name":"contains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"errorCode","type":"uint256"}],"name":"get","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"errorCode","type":"uint256"}],"name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"length","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"}],"name":"remove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"unchecked_at","outputs":[{"internalType":"contract IERC20","name":"key","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"key","type":"address"}],"name":"unchecked_indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"unchecked_setAt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"unchecked_valueAt","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b506108bb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063adcd29d911610081578063cb52cb1a1161005b578063cb52cb1a14610273578063e0886f9014610296578063e37b1903146102b3576100c9565b8063adcd29d9146101d0578063b464631b146101ed578063c65d268314610226576100c9565b806329092d0e116100b257806329092d0e1461011b5780633825d828146101505780635dbe47e814610189576100c9565b80630127190b146100ce5780631f7b6d3214610113575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102ec565b60408051918252519081900360200190f35b6101016102fe565b61014e6004803603602081101561013157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b005b61014e6004803603604081101561016657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610358565b6101bc6004803603602081101561019f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103a3565b604080519115158252519081900360200190f35b610101600480360360208110156101e657600080fd5b50356103af565b6101016004803603604081101561020357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103bb565b6102436004803603602081101561023c57600080fd5b50356103cf565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091528051918290030190f35b61014e6004803603604081101561028957600080fd5b50803590602001356103e5565b610243600480360360208110156102ac57600080fd5b50356103f5565b610101600480360360408110156102c957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610402565b60006102f8818361040f565b92915050565b600061030a600061043b565b905090565b600061031b818361043f565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a15050565b6000610365818484610590565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a1505050565b60006102f8818361068f565b60006102f881836106bd565b60006103c88184846106d3565b9392505050565b6000806103dc818461071d565b91509150915091565b6103f16000838361074e565b5050565b6000806103dc8184610766565b60006103c881848461078f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600291909101602052604090205490565b5490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260028301602052604081205480156105865783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019101808214610517576000818152600180880160209081526040808420868552818520815481547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9182161782558286015491860191909155905416845260028a0190915290912090830190555b600081815260018088016020908152604080842080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155830184905593895573ffffffffffffffffffffffffffffffffffffffff881683526002890190529181205592506102f8915050565b60009150506102f8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002840160205260408120548061064f575050825460408051808201825273ffffffffffffffffffffffffffffffffffffffff858116808352602080840187815260008781526001808c018452878220965187547fffffffffffffffffffffffff000000000000000000000000000000000000000016961695909517865590519484019490945594820180895590835260028801909452919020919091556103c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160009081526001808601602052604082200183905590509392505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902054151590565b6000908152600191820160205260409020015490565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600284016020526040812054610707811515846107d4565b61071485600183036106bd565b95945050505050565b6000908152600191820160205260409020805491015473ffffffffffffffffffffffffffffffffffffffff90911691565b60009182526001928301602052604090912090910155565b60008061077a8385600001541160646107d4565b610784848461071d565b915091509250929050565b60008061079c858561040f565b90506107aa811515846107d4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01949350505050565b816103f1576103f181610807817f42414c000000000000000000000000000000000000000000000000000000000061080a565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220120c0b4c41b1ff75e5b7a023e7ae67f25e4805e97dcab09cc902e37cf3a2cf1b64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADCD29D9 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xCB52CB1A GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCB52CB1A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xE0886F90 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xE37B1903 EQ PUSH2 0x2B3 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0xADCD29D9 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xB464631B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xC65D2683 EQ PUSH2 0x226 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x29092D0E GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3825D828 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x189 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x127190B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A PUSH1 0x0 PUSH2 0x43B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B DUP2 DUP4 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP2 DUP5 DUP5 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C8 DUP2 DUP5 DUP5 PUSH2 0x6D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC DUP2 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x3F1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x74E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC DUP2 DUP5 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C8 DUP2 DUP5 DUP5 PUSH2 0x78F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x586 JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND OR DUP3 SSTORE DUP3 DUP7 ADD SLOAD SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD AND DUP5 MSTORE PUSH1 0x2 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 DUP4 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE DUP4 ADD DUP5 SWAP1 SSTORE SWAP4 DUP10 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP10 ADD SWAP1 MSTORE SWAP2 DUP2 KECCAK256 SSTORE SWAP3 POP PUSH2 0x2F8 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x64F JUMPI POP POP DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP13 ADD DUP5 MSTORE DUP8 DUP3 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP7 SSTORE SWAP1 MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP5 DUP3 ADD DUP1 DUP10 SSTORE SWAP1 DUP4 MSTORE PUSH1 0x2 DUP9 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3C8 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x707 DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x714 DUP6 PUSH1 0x1 DUP4 SUB PUSH2 0x6BD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 SWAP3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77A DUP4 DUP6 PUSH1 0x0 ADD SLOAD GT PUSH1 0x64 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x784 DUP5 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x79C DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x3F1 JUMPI PUSH2 0x3F1 DUP2 PUSH2 0x807 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x80A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC SIGNEXTEND 0x4C COINBASE 0xB1 SELFDESTRUCT PUSH22 0xE5B7A023E7AE67F25E4805E97DCAB09CC902E37CF3A2 0xCF SHL PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"1803:1568:55:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c8063adcd29d911610081578063cb52cb1a1161005b578063cb52cb1a14610273578063e0886f9014610296578063e37b1903146102b3576100c9565b8063adcd29d9146101d0578063b464631b146101ed578063c65d268314610226576100c9565b806329092d0e116100b257806329092d0e1461011b5780633825d828146101505780635dbe47e814610189576100c9565b80630127190b146100ce5780631f7b6d3214610113575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102ec565b60408051918252519081900360200190f35b6101016102fe565b61014e6004803603602081101561013157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b005b61014e6004803603604081101561016657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610358565b6101bc6004803603602081101561019f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103a3565b604080519115158252519081900360200190f35b610101600480360360208110156101e657600080fd5b50356103af565b6101016004803603604081101561020357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103bb565b6102436004803603602081101561023c57600080fd5b50356103cf565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091528051918290030190f35b61014e6004803603604081101561028957600080fd5b50803590602001356103e5565b610243600480360360208110156102ac57600080fd5b50356103f5565b610101600480360360408110156102c957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610402565b60006102f8818361040f565b92915050565b600061030a600061043b565b905090565b600061031b818361043f565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a15050565b6000610365818484610590565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a1505050565b60006102f8818361068f565b60006102f881836106bd565b60006103c88184846106d3565b9392505050565b6000806103dc818461071d565b91509150915091565b6103f16000838361074e565b5050565b6000806103dc8184610766565b60006103c881848461078f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600291909101602052604090205490565b5490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260028301602052604081205480156105865783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019101808214610517576000818152600180880160209081526040808420868552818520815481547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9182161782558286015491860191909155905416845260028a0190915290912090830190555b600081815260018088016020908152604080842080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155830184905593895573ffffffffffffffffffffffffffffffffffffffff881683526002890190529181205592506102f8915050565b60009150506102f8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002840160205260408120548061064f575050825460408051808201825273ffffffffffffffffffffffffffffffffffffffff858116808352602080840187815260008781526001808c018452878220965187547fffffffffffffffffffffffff000000000000000000000000000000000000000016961695909517865590519484019490945594820180895590835260028801909452919020919091556103c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160009081526001808601602052604082200183905590509392505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902054151590565b6000908152600191820160205260409020015490565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600284016020526040812054610707811515846107d4565b61071485600183036106bd565b95945050505050565b6000908152600191820160205260409020805491015473ffffffffffffffffffffffffffffffffffffffff90911691565b60009182526001928301602052604090912090910155565b60008061077a8385600001541160646107d4565b610784848461071d565b915091509250929050565b60008061079c858561040f565b90506107aa811515846107d4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01949350505050565b816103f1576103f181610807817f42414c000000000000000000000000000000000000000000000000000000000061080a565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220120c0b4c41b1ff75e5b7a023e7ae67f25e4805e97dcab09cc902e37cf3a2cf1b64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADCD29D9 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xCB52CB1A GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCB52CB1A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xE0886F90 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xE37B1903 EQ PUSH2 0x2B3 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0xADCD29D9 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xB464631B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xC65D2683 EQ PUSH2 0x226 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x29092D0E GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3825D828 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x189 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x127190B EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x2FE JUMP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A PUSH1 0x0 PUSH2 0x43B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31B DUP2 DUP4 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP2 DUP5 DUP5 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xED9840E0775590557AD736875D96C95CF1458B766335F74339951A32C82A9E33 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP2 DUP4 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C8 DUP2 DUP5 DUP5 PUSH2 0x6D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC DUP2 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x3F1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x74E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC DUP2 DUP5 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C8 DUP2 DUP5 DUP5 PUSH2 0x78F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x586 JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x517 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP2 SLOAD DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND OR DUP3 SSTORE DUP3 DUP7 ADD SLOAD SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SLOAD AND DUP5 MSTORE PUSH1 0x2 DUP11 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 DUP4 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP9 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE DUP4 ADD DUP5 SWAP1 SSTORE SWAP4 DUP10 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP4 MSTORE PUSH1 0x2 DUP10 ADD SWAP1 MSTORE SWAP2 DUP2 KECCAK256 SSTORE SWAP3 POP PUSH2 0x2F8 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x2F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x64F JUMPI POP POP DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP13 ADD DUP5 MSTORE DUP8 DUP3 KECCAK256 SWAP7 MLOAD DUP8 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR DUP7 SSTORE SWAP1 MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP5 DUP3 ADD DUP1 DUP10 SSTORE SWAP1 DUP4 MSTORE PUSH1 0x2 DUP9 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3C8 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP4 SWAP1 SSTORE SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x707 DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x714 DUP6 PUSH1 0x1 DUP4 SUB PUSH2 0x6BD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 SWAP3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x77A DUP4 DUP6 PUSH1 0x0 ADD SLOAD GT PUSH1 0x64 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x784 DUP5 DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x79C DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP2 ISZERO ISZERO DUP5 PUSH2 0x7D4 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x3F1 JUMPI PUSH2 0x3F1 DUP2 PUSH2 0x807 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x80A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC SIGNEXTEND 0x4C COINBASE 0xB1 SELFDESTRUCT PUSH22 0xE5B7A023E7AE67F25E4805E97DCAB09CC902E37CF3A2 0xCF SHL PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"1803:1568:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:120;;;;;;;;;;;;;;;;-1:-1:-1;2254:120:55;;;;:::i;:::-;;;;;;;;;;;;;;;;2761:85;;;:::i;2635:120::-;;;;;;;;;;;;;;;;-1:-1:-1;2635:120:55;;;;:::i;:::-;;2112:136;;;;;;;;;;;;;;;;-1:-1:-1;2112:136:55;;;;;;;;;:::i;2007:99::-;;;;;;;;;;;;;;;;-1:-1:-1;2007:99:55;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3110:131;;;;;;;;;;;;;;;;-1:-1:-1;3110:131:55;;:::i;3247:122::-;;;;;;;;;;;;;;;;-1:-1:-1;3247:122:55;;;;;;;;;:::i;2971:133::-;;;;;;;;;;;;;;;;-1:-1:-1;2971:133:55;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2516:113;;;;;;;;;;;;;;;;-1:-1:-1;2516:113:55;;;;;;;:::i;2852:::-;;;;;;;;;;;;;;;;-1:-1:-1;2852:113:55;;:::i;2380:130::-;;;;;;;;;;;;;;;;-1:-1:-1;2380:130:55;;;;;;;;;:::i;2254:120::-;2314:7;2340:27;2314:7;2363:3;2340:22;:27::i;:::-;2333:34;2254:120;-1:-1:-1;;2254:120:55:o;2761:85::-;2800:7;2826:13;:4;:11;:13::i;:::-;2819:20;;2761:85;:::o;2635:120::-;2680:11;2694:16;2680:11;2706:3;2694:11;:16::i;:::-;2725:23;;;;;;;;;;2680:30;;-1:-1:-1;2725:23:55;;;;;;;;;;2635:120;;:::o;2112:136::-;2169:11;2183:20;2169:11;2192:3;2197:5;2183:8;:20::i;:::-;2218:23;;;;;;;;;;2169:34;;-1:-1:-1;2218:23:55;;;;;;;;;;2112:136;;;:::o;2007:99::-;2058:4;2081:18;2058:4;2095:3;2081:13;:18::i;3110:131::-;3173:13;3205:29;3173:13;3228:5;3205:22;:29::i;3247:122::-;3312:7;3338:24;3312:7;3347:3;3352:9;3338:8;:24::i;:::-;3331:31;3247:122;-1:-1:-1;;;3247:122:55:o;2971:133::-;3029:10;;3073:24;3029:10;3091:5;3073:17;:24::i;:::-;3066:31;;;;2971:133;;;:::o;2516:113::-;2588:34;:4;2609:5;2616;2588:20;:34::i;:::-;2516:113;;:::o;2852:::-;2900:10;;2944:14;2900:10;2952:5;2944:7;:14::i;2380:130::-;2449:7;2475:28;2449:7;2488:3;2493:9;2475:12;:28::i;15527:144:39:-;15647:17;;15621:7;15647:17;;;:12;;;;;:17;;;;;;;15527:144::o;12953:115::-;13050:11;;12953:115::o;11098:1549::-;11309:17;;;11176:4;11309:17;;;:12;;;:17;;;;;;11385:13;;11381:1260;;11793:11;;11747:12;;;;;11793:15;11908:26;;;11904:420;;11954:41;11998:23;;;:12;;;;:23;;;;;;;;12121:27;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;12247:14;;;12234:28;;:12;;;:28;;;;;;12265:17;;;12234:48;;11904:420;12409:23;;;;:12;;;;:23;;;;;;;;12402:30;;;;;;;;;;;12446:23;;;12402:30;12544:17;;;;:12;;;:17;;;;;12537:24;12409:12;-1:-1:-1;12576:11:39;;-1:-1:-1;;12576:11:39;11381:1260;12625:5;12618:12;;;;;9505:859;9758:17;;;9625:4;9758:17;;;:12;;;:17;;;;;;9835:13;9831:527;;-1:-1:-1;;9889:11:39;;9945:53;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9914:28:39;;;:12;;;;:28;;;;;:84;;;;;;;;;;;;;;;;;;;;;;;10026:18;;;10012:32;;;10186:17;;;:12;;;:17;;;;;;:38;;;;10238:11;;9831:527;10293:12;;10280:26;;;;:12;;;;:26;;;;;:33;:41;;;:26;-1:-1:-1;9505:859:39;;;;;:::o;12726:137::-;12834:17;;12811:4;12834:17;;;:12;;;;;:17;;;;;;:22;;;12726:137::o;14325:156::-;14422:7;14448:19;;;:12;;;;:19;;;;;:26;;;14325:156::o;14668:278::-;14832:17;;;14797:7;14832:17;;;:12;;;:17;;;;;;14859:30;14868:9;;;14879;14859:8;:30::i;:::-;14906:33;14924:3;14937:1;14929:5;:9;14906:17;:33::i;:::-;14899:40;14668:278;-1:-1:-1;;;;;14668:278:39:o;13941:228::-;14033:6;14100:19;;;:12;;;;:19;;;;;14137:10;;14149:12;;;14137:10;;;;;13941:228::o;10753:177::-;10889:19;;;;:12;;;;:19;;;;;;:26;;;:34;10753:177::o;13421:208::-;13503:6;13511:7;13530:51;13553:5;13539:3;:11;;;:19;5662:3:0;13530:8:39;:51::i;:::-;13598:24;13611:3;13616:5;13598:12;:24::i;:::-;13591:31;;;;13421:208;;;;;:::o;15079:296::-;15212:7;15231:22;15256:27;15274:3;15279;15256:17;:27::i;:::-;15231:52;-1:-1:-1;15293:40:39;15302:19;;;15323:9;15293:8;:40::i;:::-;15350:18;;;15079:296;-1:-1:-1;;;;15079:296:39:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"at(uint256)":"e0886f90","contains(address)":"5dbe47e8","get(address,uint256)":"b464631b","indexOf(address,uint256)":"e37b1903","length()":"1f7b6d32","remove(address)":"29092d0e","set(address,uint256)":"3825d828","unchecked_at(uint256)":"c65d2683","unchecked_indexOf(address)":"0127190b","unchecked_setAt(uint256,uint256)":"cb52cb1a","unchecked_valueAt(uint256)":"adcd29d9"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"OperationResult\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"at\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unchecked_at\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"key\",\"type\":\"address\"}],\"name\":\"unchecked_indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"unchecked_setAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unchecked_valueAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/EnumerableMapMock.sol\":\"EnumerableIERC20ToUint256MapMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/EnumerableMap.sol\":{\"keccak256\":\"0x5d365300963a21f5d9bd8c7c514a859d56da8f62fb076a79581029b4291a9251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3536afab3d7b6c632a137f38e3e6ea0a0cf0bc2a31c23dd3c26ce266828699ef\",\"dweb:/ipfs/QmV8pciSxGX5hngLoUiQveEvqAJh8hUSVtoNbnvGBicbN3\"]},\"contracts/test/EnumerableMapMock.sol\":{\"keccak256\":\"0xc351ff20d63236fb1e111a6ba2eee96515993bc7deeaa39207b49cbf5836c788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://445619965e2a7db0bf30e4b2fb41b99405a95ff74eeed29467f087cf9de75d80\",\"dweb:/ipfs/QmeChy1jZeh6shqi8xWnHJtS7URsaLwhY8skrqmB7NPL1b\"]}},\"version\":1}"}},"contracts/test/ExtraCalldataEOASignaturesValidatorMock.sol":{"ExtraCalldataEOASignaturesValidatorMock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"}],"name":"Authenticated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"}],"name":"CalldataDecoded","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"anotherFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"authenticateCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decodeCalldata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"increaseNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60e060405234801561001057600080fd5b50604080518082018252601181527010985b185b98d95c88158c8815985d5b1d607a1b6020808301918252835180850190945260018452603160f81b908401908152915190206080529051902060a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260805160a05160c0516108d36100b06000398061041952508061045b52508061043a52506108d36000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806390193b7c1161005057806390193b7c1461011257806394df26d614610157578063ed24911d1461015f57610072565b806325e511851461007757806378ea7ae7146100ac5780638247a97c146100df575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610167565b005b6100aa600480360360208110156100c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ce565b6100aa600480360360208110156100f557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101d1565b6101456004803603602081101561012857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101fe565b60408051918252519081900360200190f35b6100aa610226565b610145610230565b610173816101f8610240565b61017b6102f6565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815233602082015281517fd42c368decf104a7572c7884ea7028fe04ef7d3e76dbd706484f9175d6c4ec62929181900390910190a150565b50565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080546001019055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61022e6102f6565b565b600061023a610415565b90505b90565b600061024a6104e0565b905061025881151583610504565b6000610262610516565b905060008261026f610522565b8051906020012033610280886101fe565b85604051602001808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001955050505050506040516020818303038152906040528051906020012090506102ef85826102e8610571565b85886105b0565b5050505050565b7f47b13e41770d843920b679f7227bddad751c5700462da5fb2139bafa724c98f661031f610522565b610327610516565b61032f610571565b604051808060200184815260200180602001838103835286818151815260200191508051906020019080838360005b8381101561037657818101518382015260200161035e565b50505050905090810190601f1680156103a35780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156103d65781810151838201526020016103be565b50505050905090810190601f1680156104035780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610482610614565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b7f088e910861b9d0ac056c32bb5d44fcdd155bbfa025bdca87c7390e174ac6179590565b816105125761051281610618565b5050565b600061023a6000610642565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050506080101561023d5760803603815290565b6060600061057f6020610642565b9050600061058d6040610642565b9050600061059b6060610642565b90506105a883838361066a565b935050505090565b60006105bb856106a9565b90506105d16105cb878387610710565b83610504565b6105e0428410156101b8610504565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b4690565b6101ce817f42414c0000000000000000000000000000000000000000000000000000000000610822565b36017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80013590565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b60006106b3610415565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600061072282516041146101b9610504565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561079b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061081657508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122028706d4bead26db86068f467e3e38dcd97fced5e31c983d62e2675618cd3c05364736f6c63430007010033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x10985B185B98D95C88158C8815985D5B1D PUSH1 0x7A SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0xA0 MSTORE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x8D3 PUSH2 0xB0 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x419 MSTORE POP DUP1 PUSH2 0x45B MSTORE POP DUP1 PUSH2 0x43A MSTORE POP PUSH2 0x8D3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90193B7C GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x94DF26D6 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x15F JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x25E51185 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x78EA7AE7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x8247A97C EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x226 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x230 JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x1F8 PUSH2 0x240 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xD42C368DECF104A7572C7884EA7028FE04EF7D3E76DBD706484F9175D6C4EC62 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x2F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A PUSH2 0x415 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x258 DUP2 ISZERO ISZERO DUP4 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 PUSH2 0x516 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x26F PUSH2 0x522 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CALLER PUSH2 0x280 DUP9 PUSH2 0x1FE JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2EF DUP6 DUP3 PUSH2 0x2E8 PUSH2 0x571 JUMP JUMPDEST DUP6 DUP9 PUSH2 0x5B0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x47B13E41770D843920B679F7227BDDAD751C5700462DA5FB2139BAFA724C98F6 PUSH2 0x31F PUSH2 0x522 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x376 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x482 PUSH2 0x614 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x88E910861B9D0AC056C32BB5D44FCDD155BBFA025BDCA87C7390E174AC61795 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x512 JUMPI PUSH2 0x512 DUP2 PUSH2 0x618 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A PUSH1 0x0 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP POP PUSH1 0x80 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x80 CALLDATASIZE SUB DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x57F PUSH1 0x20 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58D PUSH1 0x40 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x59B PUSH1 0x60 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP PUSH2 0x5A8 DUP4 DUP4 DUP4 PUSH2 0x66A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP6 PUSH2 0x6A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D1 PUSH2 0x5CB DUP8 DUP4 DUP8 PUSH2 0x710 JUMP JUMPDEST DUP4 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x5E0 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x504 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x1CE DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x822 JUMP JUMPDEST CALLDATASIZE ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x41 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE8 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 PUSH2 0x415 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x816 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH17 0x6D4BEAD26DB86068F467E3E38DCD97FCED 0x5E BALANCE 0xC9 DUP4 0xD6 0x2E 0x26 PUSH22 0x618CD3C05364736F6C63430007010033000000000000 ","sourceMap":"120:1177:56:-:0;;;496:111;;;;;;;;;-1:-1:-1;2020:280:35;;;;;;;;;;;-1:-1:-1;;;2020:280:35;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2020:280:35;;;;;;2100:22;;;;2085:37;;2150:25;;;;2132:43;;2198:95;2185:108;;120:1177:56;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"5870":[{"length":32,"start":1082}],"5872":[{"length":32,"start":1115}],"5874":[{"length":32,"start":1049}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c806390193b7c1161005057806390193b7c1461011257806394df26d614610157578063ed24911d1461015f57610072565b806325e511851461007757806378ea7ae7146100ac5780638247a97c146100df575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610167565b005b6100aa600480360360208110156100c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101ce565b6100aa600480360360208110156100f557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101d1565b6101456004803603602081101561012857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101fe565b60408051918252519081900360200190f35b6100aa610226565b610145610230565b610173816101f8610240565b61017b6102f6565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815233602082015281517fd42c368decf104a7572c7884ea7028fe04ef7d3e76dbd706484f9175d6c4ec62929181900390910190a150565b50565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080546001019055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61022e6102f6565b565b600061023a610415565b90505b90565b600061024a6104e0565b905061025881151583610504565b6000610262610516565b905060008261026f610522565b8051906020012033610280886101fe565b85604051602001808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001955050505050506040516020818303038152906040528051906020012090506102ef85826102e8610571565b85886105b0565b5050505050565b7f47b13e41770d843920b679f7227bddad751c5700462da5fb2139bafa724c98f661031f610522565b610327610516565b61032f610571565b604051808060200184815260200180602001838103835286818151815260200191508051906020019080838360005b8381101561037657818101518382015260200161035e565b50505050905090810190601f1680156103a35780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156103d65781810151838201526020016103be565b50505050905090810190601f1680156104035780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610482610614565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b7f088e910861b9d0ac056c32bb5d44fcdd155bbfa025bdca87c7390e174ac6179590565b816105125761051281610618565b5050565b600061023a6000610642565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050506080101561023d5760803603815290565b6060600061057f6020610642565b9050600061058d6040610642565b9050600061059b6060610642565b90506105a883838361066a565b935050505090565b60006105bb856106a9565b90506105d16105cb878387610710565b83610504565b6105e0428410156101b8610504565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b4690565b6101ce817f42414c0000000000000000000000000000000000000000000000000000000000610822565b36017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80013590565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b60006106b3610415565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600061072282516041146101b9610504565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561079b573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061081657508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122028706d4bead26db86068f467e3e38dcd97fced5e31c983d62e2675618cd3c05364736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90193B7C GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x94DF26D6 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x15F JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x25E51185 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x78EA7AE7 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x8247A97C EQ PUSH2 0xDF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CE JUMP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D1 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH2 0x226 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x230 JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x1F8 PUSH2 0x240 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xD42C368DECF104A7572C7884EA7028FE04EF7D3E76DBD706484F9175D6C4EC62 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x2F6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A PUSH2 0x415 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x258 DUP2 ISZERO ISZERO DUP4 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 PUSH2 0x516 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x26F PUSH2 0x522 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CALLER PUSH2 0x280 DUP9 PUSH2 0x1FE JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2EF DUP6 DUP3 PUSH2 0x2E8 PUSH2 0x571 JUMP JUMPDEST DUP6 DUP9 PUSH2 0x5B0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x47B13E41770D843920B679F7227BDDAD751C5700462DA5FB2139BAFA724C98F6 PUSH2 0x31F PUSH2 0x522 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x376 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x35E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x482 PUSH2 0x614 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x88E910861B9D0AC056C32BB5D44FCDD155BBFA025BDCA87C7390E174AC61795 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x512 JUMPI PUSH2 0x512 DUP2 PUSH2 0x618 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A PUSH1 0x0 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP POP PUSH1 0x80 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x80 CALLDATASIZE SUB DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x57F PUSH1 0x20 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58D PUSH1 0x40 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x59B PUSH1 0x60 PUSH2 0x642 JUMP JUMPDEST SWAP1 POP PUSH2 0x5A8 DUP4 DUP4 DUP4 PUSH2 0x66A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP6 PUSH2 0x6A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5D1 PUSH2 0x5CB DUP8 DUP4 DUP8 PUSH2 0x710 JUMP JUMPDEST DUP4 PUSH2 0x504 JUMP JUMPDEST PUSH2 0x5E0 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x504 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x1CE DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x822 JUMP JUMPDEST CALLDATASIZE ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x41 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE8 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 PUSH2 0x415 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x816 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH17 0x6D4BEAD26DB86068F467E3E38DCD97FCED 0x5E BALANCE 0xC9 DUP4 0xD6 0x2E 0x26 PUSH22 0x618CD3C05364736F6C63430007010033000000000000 ","sourceMap":"120:1177:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:202;;;;;;;;;;;;;;;;-1:-1:-1;688:202:56;;;;:::i;:::-;;896:77;;;;;;;;;;;;;;;;-1:-1:-1;896:77:56;;;;:::i;979:81::-;;;;;;;;;;;;;;;;-1:-1:-1;979:81:56;;;;:::i;1303:121:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1303:121:19;;;;:::i;:::-;;;;;;;;;;;;;;;;613:69:56;;;:::i;1184:113:19:-;;;:::i;688:202:56:-;747:63;779:4;13190:3:0;747:31:56;:63::i;:::-;820:17;:15;:17::i;:::-;852:31;;;;;;;;872:10;852:31;;;;;;;;;;;;;;;;;688:202;:::o;896:77::-;;:::o;979:81::-;1035:16;;:10;:16;;;;;;;;;;:18;;;;;;979:81::o;1303:121:19:-;1398:19;;1372:7;1398:19;;;;;;;;;;;;1303:121::o;613:69:56:-;658:17;:15;:17::i;:::-;613:69::o;1184:113:19:-;1244:7;1270:20;:18;:20::i;:::-;1263:27;;1184:113;;:::o;1696:689:21:-;1789:16;1808:21;:19;:21::i;:::-;1789:40;-1:-1:-1;1946:43:21;1955:22;;;1979:9;1946:8;:43::i;:::-;2000:16;2019:11;:9;:11::i;:::-;2000:30;;2153:18;2208:8;2228:11;:9;:11::i;:::-;2218:22;;;;;;2242:10;2254:18;2267:4;2254:12;:18::i;:::-;2274:8;2197:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:119;;;;;;2153:140;;2304:74;2326:4;2332:10;2344:12;:10;:12::i;:::-;2358:8;2368:9;2304:21;:74::i;:::-;1696:689;;;;;:::o;1066:113:56:-;1117:55;1133:11;:9;:11::i;:::-;1146;:9;:11::i;:::-;1159:12;:10;:12::i;:::-;1117:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1117:55:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:113::o;2386:188:35:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;1185:110:56:-;257:102;1185:110;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;3014:202:21:-;3058:7;3181:27;3206:1;3181:24;:27::i;4043:500::-;4087:19;4127:8;;4118:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4235:13:21;;4118:17;;-1:-1:-1;;;1564:6:21;-1:-1:-1;4231:306:21;;;4489:22;4473:14;4469:43;4461:6;4454:59;4043:500;:::o;3492:360::-;3537:12;3641:7;3665:30;3690:4;3665:24;:30::i;:::-;3657:39;-1:-1:-1;3657:39:21;3719:30;3744:4;3719:24;:30::i;:::-;3707:42;;3759:9;3771:30;3796:4;3771:24;:30::i;:::-;3759:42;;3819:26;3837:1;3840;3843;3819:17;:26::i;:::-;3812:33;;;;;3492:360;:::o;1701:1214:19:-;1895:14;1912:28;1929:10;1912:16;:28::i;:::-;1895:45;;1950:66;1959:45;1977:7;1986:6;1994:9;1959:17;:45::i;:::-;2006:9;1950:8;:66::i;:::-;2487:63;2508:15;2496:8;:27;;12656:3:0;2487:8:19;:63::i;:::-;-1:-1:-1;;;2884:19:19;;;;:10;:19;;;;;;;;;;:24;;2907:1;2884:24;;;-1:-1:-1;;1701:1214:19:o;3433:187:35:-;3595:9;;3570:44::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;4762:273:21:-;4970:14;4962:56;4966:43;4962:56;4949:70;;4925:104::o;3803:419:19:-;3963:13;;;3973:2;3963:13;;;;;;;;;3914:12;;;;3963:13;;;;;;;;;;;-1:-1:-1;3963:13:19;3938:38;;4092:1;4087:2;4076:9;4072:18;4065:29;4134:1;4129:2;4118:9;4114:18;4107:29;4177:1;4172:2;4161:9;4157:18;4149:30;4206:9;3803:419;-1:-1:-1;;;;3803:419:19:o;3199:183:35:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;2921:876:19:-;3066:4;3082:60;3091:9;:16;3111:2;3091:22;12713:3:0;3082:8:19;:60::i;:::-;3153:9;3172;3191:7;3427:4;3416:9;3412:20;3406:27;3401:32;;3472:4;3461:9;3457:20;3451:27;3446:32;;3525:4;3514:9;3510:20;3504:27;3501:1;3496:36;3491:41;;3552:24;3579:26;3589:6;3597:1;3600;3603;3579:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:26:19;;;;;;-1:-1:-1;;3728:30:19;;;;;;;:61;;;3782:7;3762:27;;:16;:27;;;3728:61;3720:70;2921:876;-1:-1:-1;;;;;;;;2921:876:19:o;1692:3378:0:-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"anotherFunction(address)":"78ea7ae7","authenticateCall(address)":"25e51185","decodeCalldata()":"94df26d6","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","increaseNonce(address)":"8247a97c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Authenticated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"CalldataDecoded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"anotherFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authenticateCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decodeCalldata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"increaseNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ExtraCalldataEOASignaturesValidatorMock.sol\":\"ExtraCalldataEOASignaturesValidatorMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/helpers/ExtraCalldataEOASignaturesValidator.sol\":{\"keccak256\":\"0x2c6ea6191f2063d53d94b6f1b133c083b815a31c0e67ba5375d573e95709eaa5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://190af60a81830e09ea6c01bba72b4a08b6833fbc44613e791c65154dc096ec4f\",\"dweb:/ipfs/QmWcDfoXeXvxVYin4sB2YcA2f6qWfcPjkukMrvm8h6QN5C\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/test/ExtraCalldataEOASignaturesValidatorMock.sol\":{\"keccak256\":\"0x75a3cc062f407c61487fc57a76e80ea38c17f6c4ff992ecd5f56be9085f463e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://528a588c0e5276e20648527c81756f3d2067503cf3ddfb1bd89f248bb6cdb6b2\",\"dweb:/ipfs/QmNZTVWAHHMmu49t4QjD1ENfQ1m64hZqjcUe8RD6g3DgZJ\"]}},\"version\":1}"}},"contracts/test/FixedPointMock.sol":{"FixedPointMock":{"abi":[{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"name":"powDown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"name":"powUp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610e41806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063164c95d51461003b57806344735d4f14610070575b600080fd5b61005e6004803603604081101561005157600080fd5b5080359060200135610093565b60408051918252519081900360200190f35b61005e6004803603604081101561008657600080fd5b50803590602001356100a8565b600061009f83836100b4565b90505b92915050565b600061009f8383610159565b6000670de0b6b3a76400008214156100cd5750816100a2565b671bc16d674ec800008214156100ee576100e783846101f2565b90506100a2565b673782dace9d90000082141561011e57600061010a84856101f2565b905061011681826101f2565b9150506100a2565b600061012a8484610234565b9050600061014461013d836127106101f2565b6001610354565b90506101508282610354565b925050506100a2565b6000670de0b6b3a76400008214156101725750816100a2565b671bc16d674ec8000082141561018c576100e78384610366565b673782dace9d9000008214156101b45760006101a88485610366565b90506101168182610366565b60006101c08484610234565b905060006101d361013d836127106101f2565b9050808210156101e8576000925050506100a2565b6101508282610392565b600082820261021684158061020f57508385838161020c57fe5b04145b60036103a8565b6001670de0b6b3a76400006001830304018115150291505092915050565b60008161024a5750670de0b6b3a76400006100a2565b82610257575060006100a2565b61026760ff84901c1560066103a8565b8261028d770bce5086492111aea88f4bb1ca6bcf584181ea8059f76532841060076103a8565b826000670c7d713b49da0000831380156102ae5750670f43fc2c04ee000083125b156102e55760006102be846103ba565b9050670de0b6b3a764000080820784020583670de0b6b3a7640000830502019150506102f3565b816102ef846104f3565b0290505b670de0b6b3a764000090056103417ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc0000821280159061033a575068070c1cc73b00c800008213155b60086103a8565b61034a81610893565b9695505050505050565b600082820161009f84821015836103a8565b600082820261038084158061020f57508385838161020c57fe5b670de0b6b3a764000090049392505050565b60006103a28383111560016103a8565b50900390565b816103b6576103b681610d63565b5050565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f0000000008501028161040657fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f820581019050806002029450505050505b919050565b6000670de0b6b3a764000082121561053057610526826ec097ce7bc90715b34b9f10000000008161052057fe5b056104f3565b60000390506104ee565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261058157770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126105b9576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312610601576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a700831261063c576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261067357693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126106aa57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126106df5768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261070a57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d831261073f576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312610774576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b28660383126107a8576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126107dc576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816107ff57fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60006108d87ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000083121580156108d1575068070c1cc73b00c800008313155b60096103a8565b600082121561090c576108ed82600003610893565b6ec097ce7bc90715b34b9f10000000008161090457fe5b0590506104ee565b60006806f05b59d3b2000000831261096257507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec6302628270000000006109ae565b6803782dace9d900000083126109aa57507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef73806109ae565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412610a14577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412610a66577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412610ab6577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412610b06577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412610b55577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412610ba4577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412610bf3577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412610c42577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b610d8d817f42414c0000000000000000000000000000000000000000000000000000000000610d90565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212203ff1b2aebcec7d5497f25181ced37a3ec5d011d8db34d7f60359e637bc878edb64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE41 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x164C95D5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x44735D4F EQ PUSH2 0x70 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F DUP4 DUP4 PUSH2 0xB4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F DUP4 DUP4 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 EQ ISZERO PUSH2 0xCD JUMPI POP DUP2 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 DUP3 EQ ISZERO PUSH2 0xEE JUMPI PUSH2 0xE7 DUP4 DUP5 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP PUSH2 0xA2 JUMP JUMPDEST PUSH8 0x3782DACE9D900000 DUP3 EQ ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 PUSH2 0x10A DUP5 DUP6 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x116 DUP2 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP5 DUP5 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x144 PUSH2 0x13D DUP4 PUSH2 0x2710 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x354 JUMP JUMPDEST SWAP1 POP PUSH2 0x150 DUP3 DUP3 PUSH2 0x354 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 EQ ISZERO PUSH2 0x172 JUMPI POP DUP2 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 DUP3 EQ ISZERO PUSH2 0x18C JUMPI PUSH2 0xE7 DUP4 DUP5 PUSH2 0x366 JUMP JUMPDEST PUSH8 0x3782DACE9D900000 DUP3 EQ ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 PUSH2 0x1A8 DUP5 DUP6 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP PUSH2 0x116 DUP2 DUP3 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP5 DUP5 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D3 PUSH2 0x13D DUP4 PUSH2 0x2710 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x150 DUP3 DUP3 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x216 DUP5 ISZERO DUP1 PUSH2 0x20F JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x20C JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 DUP4 SUB DIV ADD DUP2 ISZERO ISZERO MUL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x24A JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2 JUMP JUMPDEST DUP3 PUSH2 0x257 JUMPI POP PUSH1 0x0 PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x267 PUSH1 0xFF DUP5 SWAP1 SHR ISZERO PUSH1 0x6 PUSH2 0x3A8 JUMP JUMPDEST DUP3 PUSH2 0x28D PUSH24 0xBCE5086492111AEA88F4BB1CA6BCF584181EA8059F76532 DUP5 LT PUSH1 0x7 PUSH2 0x3A8 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP4 SGT DUP1 ISZERO PUSH2 0x2AE JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP4 SLT JUMPDEST ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 PUSH2 0x2BE DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 SMOD DUP5 MUL SDIV DUP4 PUSH8 0xDE0B6B3A7640000 DUP4 SDIV MUL ADD SWAP2 POP POP PUSH2 0x2F3 JUMP JUMPDEST DUP2 PUSH2 0x2EF DUP5 PUSH2 0x4F3 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV PUSH2 0x341 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x33A JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP3 SGT ISZERO JUMPDEST PUSH1 0x8 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x34A DUP2 PUSH2 0x893 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x9F DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x380 DUP5 ISZERO DUP1 PUSH2 0x20F JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x20C JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x3A8 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x3B6 JUMPI PUSH2 0x3B6 DUP2 PUSH2 0xD63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP1 DUP5 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3F68318436F8EA4CB460F000000000 DUP6 ADD MUL DUP2 PUSH2 0x406 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 SDIV DUP2 ADD SWAP1 POP DUP1 PUSH1 0x2 MUL SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x530 JUMPI PUSH2 0x526 DUP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x520 JUMPI INVALID JUMPDEST SDIV PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x581 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x5B9 JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x601 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x63C JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x673 JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x6AA JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x6DF JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x70A JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x73F JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x774 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x7A8 JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x7DC JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x7FF JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP4 SGT ISZERO JUMPDEST PUSH1 0x9 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x90C JUMPI PUSH2 0x8ED DUP3 PUSH1 0x0 SUB PUSH2 0x893 JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x904 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 PUSH9 0x6F05B59D3B2000000 DUP4 SLT PUSH2 0x962 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF90FA4A62C4E000000 SWAP1 SWAP2 ADD SWAP1 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 PUSH2 0x9AE JUMP JUMPDEST PUSH9 0x3782DACE9D9000000 DUP4 SLT PUSH2 0x9AA JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC87D2531627000000 SWAP1 SWAP2 ADD SWAP1 PUSH12 0x1425982CF597CD205CEF7380 PUSH2 0x9AE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x64 SWAP3 SWAP1 SWAP3 MUL SWAP2 PUSH9 0x56BC75E2D63100000 PUSH9 0xAD78EBC5AC62000000 DUP5 SLT PUSH2 0xA14 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH15 0x1855144814A7FF805980FF0084000 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D631000000 DUP5 SLT PUSH2 0xA66 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B18800000 DUP5 SLT PUSH2 0xAB6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E7800000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x3F1FCE3DA636EA5CF850 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C400000 DUP5 SLT PUSH2 0xB06 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x127FA27722CC06CC5E2 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0xAD78EBC5AC6200000 DUP5 SLT PUSH2 0xB55 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x280E60114EDB805D03 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 SLT PUSH2 0xBA4 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0xEBC5FB41746121110 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP5 SLT PUSH2 0xBF3 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E780000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x8F00F760A4B2DB55D DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C40000 DUP5 SLT PUSH2 0xC42 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C0000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x6F5F1775788937937 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 DUP2 ADD SWAP1 DUP6 SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP1 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x3 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x4 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x5 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x6 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x7 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x8 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x9 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xA PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xB PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xC PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x64 PUSH9 0x56BC75E2D63100000 DUP5 DUP5 MUL SDIV DUP6 MUL SDIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xD90 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CALL 0xB2 0xAE 0xBC 0xEC PUSH30 0x5497F25181CED37A3EC5D011D8DB34D7F60359E637BC878EDB64736F6C63 NUMBER STOP SMOD ADD STOP CALLER ","sourceMap":"747:268:57:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063164c95d51461003b57806344735d4f14610070575b600080fd5b61005e6004803603604081101561005157600080fd5b5080359060200135610093565b60408051918252519081900360200190f35b61005e6004803603604081101561008657600080fd5b50803590602001356100a8565b600061009f83836100b4565b90505b92915050565b600061009f8383610159565b6000670de0b6b3a76400008214156100cd5750816100a2565b671bc16d674ec800008214156100ee576100e783846101f2565b90506100a2565b673782dace9d90000082141561011e57600061010a84856101f2565b905061011681826101f2565b9150506100a2565b600061012a8484610234565b9050600061014461013d836127106101f2565b6001610354565b90506101508282610354565b925050506100a2565b6000670de0b6b3a76400008214156101725750816100a2565b671bc16d674ec8000082141561018c576100e78384610366565b673782dace9d9000008214156101b45760006101a88485610366565b90506101168182610366565b60006101c08484610234565b905060006101d361013d836127106101f2565b9050808210156101e8576000925050506100a2565b6101508282610392565b600082820261021684158061020f57508385838161020c57fe5b04145b60036103a8565b6001670de0b6b3a76400006001830304018115150291505092915050565b60008161024a5750670de0b6b3a76400006100a2565b82610257575060006100a2565b61026760ff84901c1560066103a8565b8261028d770bce5086492111aea88f4bb1ca6bcf584181ea8059f76532841060076103a8565b826000670c7d713b49da0000831380156102ae5750670f43fc2c04ee000083125b156102e55760006102be846103ba565b9050670de0b6b3a764000080820784020583670de0b6b3a7640000830502019150506102f3565b816102ef846104f3565b0290505b670de0b6b3a764000090056103417ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc0000821280159061033a575068070c1cc73b00c800008213155b60086103a8565b61034a81610893565b9695505050505050565b600082820161009f84821015836103a8565b600082820261038084158061020f57508385838161020c57fe5b670de0b6b3a764000090049392505050565b60006103a28383111560016103a8565b50900390565b816103b6576103b681610d63565b5050565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f0000000008501028161040657fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f820581019050806002029450505050505b919050565b6000670de0b6b3a764000082121561053057610526826ec097ce7bc90715b34b9f10000000008161052057fe5b056104f3565b60000390506104ee565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261058157770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126105b9576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff00840008312610601576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a700831261063c576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261067357693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126106aa57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126106df5768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261070a57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d831261073f576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312610774576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b28660383126107a8576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126107dc576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816107ff57fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60006108d87ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000083121580156108d1575068070c1cc73b00c800008313155b60096103a8565b600082121561090c576108ed82600003610893565b6ec097ce7bc90715b34b9f10000000008161090457fe5b0590506104ee565b60006806f05b59d3b2000000831261096257507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec6302628270000000006109ae565b6803782dace9d900000083126109aa57507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef73806109ae565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412610a14577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412610a66577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412610ab6577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412610b06577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412610b55577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412610ba4577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412610bf3577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412610c42577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b610d8d817f42414c0000000000000000000000000000000000000000000000000000000000610d90565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212203ff1b2aebcec7d5497f25181ced37a3ec5d011d8db34d7f60359e637bc878edb64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x164C95D5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x44735D4F EQ PUSH2 0x70 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F DUP4 DUP4 PUSH2 0xB4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F DUP4 DUP4 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 EQ ISZERO PUSH2 0xCD JUMPI POP DUP2 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 DUP3 EQ ISZERO PUSH2 0xEE JUMPI PUSH2 0xE7 DUP4 DUP5 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP PUSH2 0xA2 JUMP JUMPDEST PUSH8 0x3782DACE9D900000 DUP3 EQ ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 PUSH2 0x10A DUP5 DUP6 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x116 DUP2 DUP3 PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP5 DUP5 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x144 PUSH2 0x13D DUP4 PUSH2 0x2710 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x354 JUMP JUMPDEST SWAP1 POP PUSH2 0x150 DUP3 DUP3 PUSH2 0x354 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 EQ ISZERO PUSH2 0x172 JUMPI POP DUP2 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 DUP3 EQ ISZERO PUSH2 0x18C JUMPI PUSH2 0xE7 DUP4 DUP5 PUSH2 0x366 JUMP JUMPDEST PUSH8 0x3782DACE9D900000 DUP3 EQ ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 PUSH2 0x1A8 DUP5 DUP6 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP PUSH2 0x116 DUP2 DUP3 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP5 DUP5 PUSH2 0x234 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D3 PUSH2 0x13D DUP4 PUSH2 0x2710 PUSH2 0x1F2 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x150 DUP3 DUP3 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x216 DUP5 ISZERO DUP1 PUSH2 0x20F JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x20C JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 DUP4 SUB DIV ADD DUP2 ISZERO ISZERO MUL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x24A JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2 JUMP JUMPDEST DUP3 PUSH2 0x257 JUMPI POP PUSH1 0x0 PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x267 PUSH1 0xFF DUP5 SWAP1 SHR ISZERO PUSH1 0x6 PUSH2 0x3A8 JUMP JUMPDEST DUP3 PUSH2 0x28D PUSH24 0xBCE5086492111AEA88F4BB1CA6BCF584181EA8059F76532 DUP5 LT PUSH1 0x7 PUSH2 0x3A8 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP4 SGT DUP1 ISZERO PUSH2 0x2AE JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP4 SLT JUMPDEST ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 PUSH2 0x2BE DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 SMOD DUP5 MUL SDIV DUP4 PUSH8 0xDE0B6B3A7640000 DUP4 SDIV MUL ADD SWAP2 POP POP PUSH2 0x2F3 JUMP JUMPDEST DUP2 PUSH2 0x2EF DUP5 PUSH2 0x4F3 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV PUSH2 0x341 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x33A JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP3 SGT ISZERO JUMPDEST PUSH1 0x8 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x34A DUP2 PUSH2 0x893 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x9F DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x380 DUP5 ISZERO DUP1 PUSH2 0x20F JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x20C JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x3A8 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x3B6 JUMPI PUSH2 0x3B6 DUP2 PUSH2 0xD63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP1 DUP5 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3F68318436F8EA4CB460F000000000 DUP6 ADD MUL DUP2 PUSH2 0x406 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 SDIV DUP2 ADD SWAP1 POP DUP1 PUSH1 0x2 MUL SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x530 JUMPI PUSH2 0x526 DUP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x520 JUMPI INVALID JUMPDEST SDIV PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x581 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x5B9 JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x601 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x63C JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x673 JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x6AA JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x6DF JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x70A JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x73F JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x774 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x7A8 JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x7DC JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x7FF JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x8D1 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP4 SGT ISZERO JUMPDEST PUSH1 0x9 PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x90C JUMPI PUSH2 0x8ED DUP3 PUSH1 0x0 SUB PUSH2 0x893 JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x904 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 PUSH9 0x6F05B59D3B2000000 DUP4 SLT PUSH2 0x962 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF90FA4A62C4E000000 SWAP1 SWAP2 ADD SWAP1 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 PUSH2 0x9AE JUMP JUMPDEST PUSH9 0x3782DACE9D9000000 DUP4 SLT PUSH2 0x9AA JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC87D2531627000000 SWAP1 SWAP2 ADD SWAP1 PUSH12 0x1425982CF597CD205CEF7380 PUSH2 0x9AE JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x64 SWAP3 SWAP1 SWAP3 MUL SWAP2 PUSH9 0x56BC75E2D63100000 PUSH9 0xAD78EBC5AC62000000 DUP5 SLT PUSH2 0xA14 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH15 0x1855144814A7FF805980FF0084000 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D631000000 DUP5 SLT PUSH2 0xA66 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B18800000 DUP5 SLT PUSH2 0xAB6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E7800000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x3F1FCE3DA636EA5CF850 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C400000 DUP5 SLT PUSH2 0xB06 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x127FA27722CC06CC5E2 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0xAD78EBC5AC6200000 DUP5 SLT PUSH2 0xB55 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x280E60114EDB805D03 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 SLT PUSH2 0xBA4 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0xEBC5FB41746121110 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP5 SLT PUSH2 0xBF3 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E780000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x8F00F760A4B2DB55D DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C40000 DUP5 SLT PUSH2 0xC42 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C0000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x6F5F1775788937937 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 DUP2 ADD SWAP1 DUP6 SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP1 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x3 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x4 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x5 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x6 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x7 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x8 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x9 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xA PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xB PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xC PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x64 PUSH9 0x56BC75E2D63100000 DUP5 DUP5 MUL SDIV DUP6 MUL SDIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xD90 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CALL 0xB2 0xAE 0xBC 0xEC PUSH30 0x5497F25181CED37A3EC5D011D8DB34D7F60359E637BC878EDB64736F6C63 NUMBER STOP SMOD ADD STOP CALLER ","sourceMap":"747:268:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:113;;;;;;;;;;;;;;;;-1:-1:-1;900:113:57;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;777:117;;;;;;;;;;;;;;;;-1:-1:-1;777:117:57;;;;;;;:::i;900:113::-;958:7;984:22;1001:1;1004;984:16;:22::i;:::-;977:29;;900:113;;;;;:::o;777:117::-;837:7;863:24;882:1;885;863:18;:24::i;5049:645:30:-;5109:7;988:4;5286:1;:8;5282:406;;;-1:-1:-1;5317:1:30;5310:8;;5282:406;1051:7;5339:8;;5335:353;;;5370:11;5376:1;5379;5370:5;:11::i;:::-;5363:18;;;;5335:353;1097:7;5402:9;;5398:290;;;5427:14;5444:11;5450:1;5453;5444:5;:11::i;:::-;5427:28;;5476:21;5482:6;5490;5476:5;:21::i;:::-;5469:28;;;;;5398:290;5528:11;5542:20;5557:1;5560;5542:14;:20::i;:::-;5528:34;;5576:16;5595:42;5599:34;5605:3;1161:5;5599;:34::i;:::-;5635:1;5595:3;:42::i;:::-;5576:61;;5659:18;5663:3;5668:8;5659:3;:18::i;:::-;5652:25;;;;;;4067:752;4129:7;988:4;4306:1;:8;4302:511;;;-1:-1:-1;4337:1:30;4330:8;;4302:511;1051:7;4359:8;;4355:458;;;4390:13;4398:1;4401;4390:7;:13::i;4355:458::-;1097:7;4424:9;;4420:393;;;4449:14;4466:13;4474:1;4477;4466:7;:13::i;:::-;4449:30;;4500:23;4508:6;4516;4500:7;:23::i;4420:393::-;4554:11;4568:20;4583:1;4586;4568:14;:20::i;:::-;4554:34;;4602:16;4621:42;4625:34;4631:3;1161:5;4625;:34::i;4621:42::-;4602:61;;4688:8;4682:3;:14;4678:125;;;4723:1;4716:8;;;;;;4678:125;4770:18;4774:3;4779:8;4770:3;:18::i;2048:714::-;2108:14;2152:5;;;2167:57;2176:6;;;:26;;;2201:1;2196;2186:7;:11;;;;;;:16;2176:26;5291:1:0;2167:8:30;:57::i;:::-;2743:1;2737:3;2733:1;2724:7;2720:15;2716:25;2712:33;2701:7;2694:15;2687:23;2683:63;2673:73;;2659:97;;;;;:::o;4916:2195:31:-;4974:7;4997:6;4993:131;;-1:-1:-1;1986:4:31;5091:22;;4993:131;5138:6;5134:45;;-1:-1:-1;5167:1:31;5160:8;;5134:45;5549:47;5563:3;5558:8;;;:13;5439:1:0;5549:8:31;:47::i;:::-;5631:1;5987:57;3129:24;5996:23;;5490:1:0;5987:8:31;:57::i;:::-;6079:1;6054:15;3015:13;6125:28;-1:-1:-1;6125:60:31;;;;-1:-1:-1;3070:13:31;6157:28;;6125:60;6121:684;;;6201:14;6218:16;6225:8;6218:6;:16::i;:::-;6201:33;-1:-1:-1;1986:4:31;6685:16;;;6684:29;;6683:40;6672:8;1986:4;6652:7;:16;6651:29;:72;6635:89;;6121:684;;;;6786:8;6770:13;6774:8;6770:3;:13::i;:::-;:24;6755:39;;6121:684;1986:4;6814:22;;6910:150;2822:6;6932:36;-1:-1:-1;6932:36:31;;;:76;;;2771:6;6972:12;:36;;6932:76;5547:1:0;6910:8:31;:150::i;:::-;7086:17;7090:12;7086:3;:17::i;:::-;7071:33;4916:2195;-1:-1:-1;;;;;;4916:2195:31:o;1343:239:30:-;1401:7;1505:5;;;1520:37;1529:6;;;;1401:7;1520:8;:37::i;1833:209::-;1895:7;1932:5;;;1947:57;1956:6;;;:26;;;1981:1;1976;1966:7;:11;;;;1947:57;988:4;2022:13;;;;-1:-1:-1;;;1833:209:30:o;1588:239::-;1646:7;1738:37;1752:1;1747;:6;;5194:1:0;1738:8:30;:37::i;:::-;-1:-1:-1;1797:5:30;;;1588:239::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;19430:1714:31:-;1986:4;19700:11;19478:6;;2211:4;20110:10;;;;20085;;;20084:21;20110:10;20083:38;;;;;;-1:-1:-1;20131:16:31;2211:4;20151:5;;;20150:16;;-1:-1:-1;20260:1:31;;2211:4;20475:15;;;20474:26;;-1:-1:-1;20529:1:31;20474:26;20523:7;20510:20;2211:4;20548:15;;;20547:26;;-1:-1:-1;20602:1:31;20547:26;20596:7;20583:20;2211:4;20621:15;;;20620:26;;-1:-1:-1;20675:1:31;20620:26;20669:7;20656:20;2211:4;20694:15;;;20693:26;;-1:-1:-1;20748:1:31;20693:26;20742:7;20729:20;2211:4;20767:15;;;20766:26;;-1:-1:-1;20821:2:31;20766:26;20815:8;20802:21;2211:4;20841:15;;;20840:26;;-1:-1:-1;20895:2:31;20840:26;20889:8;20876:21;2211:4;20915:15;;;20914:26;;-1:-1:-1;20969:2:31;20914:26;20963:8;20950:21;;;;21124:9;21136:1;21124:13;21117:20;;;;;;19430:1714;;;;:::o;14205:4959::-;14250:6;1986:4;14272:1;:10;14268:382;;;14612:26;14636:1;14617:15;14636:1;14616:21;;;;;14612:3;:26::i;:::-;14611:27;;14603:36;;;;14268:382;15975:10;16008:11;16003:16;;15999:114;;3265:56;16035:7;;;-1:-1:-1;3209:21:31;16093:9;15999:114;16132:11;16127:16;;16123:114;;3428:28;16159:7;;;-1:-1:-1;3373:20:31;16217:9;16123:114;16375:3;16388:8;;;;16368:10;3594:34;16523:7;;16519:82;;3594:34;2176:4;16551:10;;16550:17;;-1:-1:-1;3537:22:31;16581:9;16519:82;3723:27;16615:1;:7;16611:82;;3723:27;2176:4;16643:10;;16642:17;;-1:-1:-1;3666:22:31;16673:9;16611:82;3844:24;16707:1;:7;16703:82;;3844:24;2176:4;16735:10;;16734:17;;-1:-1:-1;3788:21:31;16765:9;16703:82;3962:22;16799:1;:7;16795:82;;3962:22;2176:4;16827:10;;16826:17;;-1:-1:-1;3906:21:31;16857:9;16795:82;4078:21;16891:1;:7;16887:82;;4078:21;2176:4;16919:10;;16918:17;;-1:-1:-1;4022:21:31;16949:9;16887:82;4193:21;16983:1;:7;16979:82;;4193:21;2176:4;17011:10;;;17010:17;;17041:9;16979:82;4308:21;17075:1;:7;17071:82;;4308:21;2176:4;17103:10;;17102:17;;-1:-1:-1;4252:20:31;17133:9;17071:82;4423:21;17167:1;:7;17163:82;;4423:21;2176:4;17195:10;;17194:17;;-1:-1:-1;4367:20:31;17225:9;17163:82;4540:21;17259:1;:8;17255:85;;4540:21;2176:4;17288:10;;17287:18;;-1:-1:-1;4483:20:31;17319:10;17255:85;4657:21;17354:1;:8;17350:85;;4657:21;2176:4;17383:10;;17382:18;;-1:-1:-1;4601:19:31;17414:10;17350:85;17937:8;2176:4;17975:1;:10;2176:4;;17950:1;:10;17949:21;17948:38;;;;;;;-1:-1:-1;17996:16:31;2176:4;18016:5;;;18015:16;;-1:-1:-1;18125:1:31;;2176:4;18340:15;;;18339:26;;-1:-1:-1;18394:1:31;18339:26;18388:7;18375:20;2176:4;18413:15;;;18412:26;;-1:-1:-1;18467:1:31;18412:26;18461:7;18448:20;2176:4;18486:15;;;18485:26;;-1:-1:-1;18540:1:31;18485:26;18534:7;18521:20;2176:4;18559:15;;;18558:26;;-1:-1:-1;18613:1:31;18558:26;18607:7;18594:20;2176:4;18632:15;;;18631:26;;-1:-1:-1;18686:2:31;18631:26;18680:8;18667:21;18860:1;18847:14;19154:3;19135:15;;;19134:23;;14205:4959;-1:-1:-1;;;;;;;14205:4959:31:o;7325:5379::-;7371:6;7389:89;2822:6;7398:1;:25;;:54;;;;;2771:6;7427:1;:25;;7398:54;5599:1:0;7389:8:31;:89::i;:::-;7497:1;7493;:5;7489:353;;;7823:7;7828:1;7827:2;;7823:3;:7::i;:::-;7804:15;7803:27;;;;;;7795:36;;;;7489:353;9143:14;3209:21;9171:1;:7;9167:220;;-1:-1:-1;9194:7:31;;;;;3265:56;9167:220;;;3373:20;9248:1;:7;9244:143;;-1:-1:-1;9271:7:31;;;;;3428:28;9244:143;;;-1:-1:-1;9345:1:31;9244:143;9542:3;9537:8;;;;;2176:4;3537:22;9796:7;;9792:92;;9819:7;;;;;2176:4;3594:34;9851:12;;9850:23;9840:33;;9792:92;3666:22;9897:1;:7;9893:92;;9920:7;;;;;2176:4;3723:27;9952:12;;9951:23;9941:33;;9893:92;3788:21;9998:1;:7;9994:92;;10021:7;;;;;2176:4;3844:24;10053:12;;10052:23;10042:33;;9994:92;3906:21;10099:1;:7;10095:92;;10122:7;;;;;2176:4;3962:22;10154:12;;10153:23;10143:33;;10095:92;4022:21;10200:1;:7;10196:92;;10223:7;;;;;2176:4;4078:21;10255:12;;10254:23;10244:33;;10196:92;4137:21;10301:1;:7;10297:92;;10324:7;;;;;4137:21;4193;10356:12;;10355:23;10345:33;;10297:92;4252:20;10402:1;:7;10398:92;;10425:7;;;;;2176:4;4308:21;10457:12;;10456:23;10446:33;;10398:92;4367:20;10503:1;:7;10499:92;;10526:7;;;;;2176:4;4423:21;10558:12;;10557:23;10547:33;;10499:92;2176:4;11123:17;;;;;;11408:1;;11386:8;;;11385:19;11384:25;11419:17;;;;11384:25;-1:-1:-1;11478:1:31;2176:4;11456:8;;;11455:19;11454:25;11489:17;;;;11454:25;-1:-1:-1;11548:1:31;2176:4;11526:8;;;11525:19;11524:25;11559:17;;;;11524:25;-1:-1:-1;11618:1:31;2176:4;11596:8;;;11595:19;11594:25;11629:17;;;;11594:25;-1:-1:-1;11688:1:31;2176:4;11666:8;;;11665:19;11664:25;11699:17;;;;11664:25;-1:-1:-1;11758:1:31;2176:4;11736:8;;;11735:19;11734:25;11769:17;;;;11734:25;-1:-1:-1;11828:1:31;2176:4;11806:8;;;11805:19;11804:25;11839:17;;;;11804:25;-1:-1:-1;11898:1:31;2176:4;11876:8;;;11875:19;11874:25;11909:17;;;;11874:25;-1:-1:-1;11968:2:31;2176:4;11946:8;;;11945:19;11944:26;11980:17;;;;11944:26;-1:-1:-1;12039:2:31;2176:4;12017:8;;;12016:19;12015:26;12051:17;;;;12015:26;-1:-1:-1;12110:2:31;2176:4;12088:8;;;12087:19;12086:26;12122:17;;;;12086:26;-1:-1:-1;12694:3:31;2176:4;12650:19;;;12649:30;12648:42;;12647:50;;7325:5379;-1:-1:-1;;;;;;7325:5379:31:o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"powDown(uint256,uint256)":"44735d4f","powUp(uint256,uint256)":"164c95d5"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"powDown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"powUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/FixedPointMock.sol\":\"FixedPointMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/math/FixedPoint.sol\":{\"keccak256\":\"0x596f4c9f0ac07a447dca74c20bffb5827dc2dc200b99181fc64d7ff6c89070a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7b625c6bfe363603bb9facfbe0e1198d5e7c369f713fdd1e729072ccdda0a5af\",\"dweb:/ipfs/QmcGpAUfw2EvJP4TEX6TUkXvfJynQaP4ntiL64cM5KrnbN\"]},\"contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x1ef044eb991d5278b9edfe159e3cd4824733d5ed8e6a9de3f4f57d6bf65be94d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168d31e5d2a92c9eeb0b50be5fb859d17746ad4ce0ee97552befce65dc6d726a\",\"dweb:/ipfs/QmQLyFUS1PTkkKUKKXU5Z7BoMPoQGdcvgpMUtJ6LaWMjrW\"]},\"contracts/test/FixedPointMock.sol\":{\"keccak256\":\"0x54a2c9c9cf97c4719c92997a09c54c01abd6eff87a9d8aa23cca13cbf9a86a90\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a8610d94c2b938e647bdd6263cd112149d32f1228d4f016e1f93066f2285c47\",\"dweb:/ipfs/QmNQKEQrMwDPwC9w7iE3ijndM1ZHBjHy81HXFwREEpwHeg\"]}},\"version\":1}"}},"contracts/test/LogExpMathMock.sol":{"LogExpMathMock":{"abi":[{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"}],"name":"pow","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610c33806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632e4c697f14610030575b600080fd5b6100536004803603604081101561004657600080fd5b5080359060200135610065565b60408051918252519081900360200190f35b6000610071838361007a565b90505b92915050565b6000816100905750670de0b6b3a7640000610074565b8261009d57506000610074565b6100ad60ff84901c15600661019a565b826100d3770bce5086492111aea88f4bb1ca6bcf584181ea8059f765328410600761019a565b826000670c7d713b49da0000831380156100f45750670f43fc2c04ee000083125b1561012b576000610104846101ac565b9050670de0b6b3a764000080820784020583670de0b6b3a764000083050201915050610139565b81610135846102e5565b0290505b670de0b6b3a764000090056101877ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008212801590610180575068070c1cc73b00c800008213155b600861019a565b61019081610685565b9695505050505050565b816101a8576101a881610b55565b5050565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000850102816101f857fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f820581019050806002029450505050505b919050565b6000670de0b6b3a764000082121561032257610318826ec097ce7bc90715b34b9f10000000008161031257fe5b056102e5565b60000390506102e0565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261037357770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126103ab576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff008400083126103f3576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a700831261042e576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261046557693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e2831261049c57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126104d15768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb4174612111083126104fc57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312610531576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312610566576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261059a576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126105ce576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816105f157fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60006106ca7ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000083121580156106c3575068070c1cc73b00c800008313155b600961019a565b60008212156106fe576106df82600003610685565b6ec097ce7bc90715b34b9f1000000000816106f657fe5b0590506102e0565b60006806f05b59d3b2000000831261075457507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec6302628270000000006107a0565b6803782dace9d9000000831261079c57507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef73806107a0565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412610806577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412610858577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b1880000084126108a8577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c40000084126108f8577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412610947577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412610996577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b188000084126109e5577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412610a34577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b610b7f817f42414c0000000000000000000000000000000000000000000000000000000000610b82565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122052d1dccccdea59f97a2e3d774bb8798efe81be6c0214fce05d0863681193270464736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC33 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E4C697F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x71 DUP4 DUP4 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x90 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x74 JUMP JUMPDEST DUP3 PUSH2 0x9D JUMPI POP PUSH1 0x0 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xAD PUSH1 0xFF DUP5 SWAP1 SHR ISZERO PUSH1 0x6 PUSH2 0x19A JUMP JUMPDEST DUP3 PUSH2 0xD3 PUSH24 0xBCE5086492111AEA88F4BB1CA6BCF584181EA8059F76532 DUP5 LT PUSH1 0x7 PUSH2 0x19A JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP4 SGT DUP1 ISZERO PUSH2 0xF4 JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP4 SLT JUMPDEST ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 PUSH2 0x104 DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 SMOD DUP5 MUL SDIV DUP4 PUSH8 0xDE0B6B3A7640000 DUP4 SDIV MUL ADD SWAP2 POP POP PUSH2 0x139 JUMP JUMPDEST DUP2 PUSH2 0x135 DUP5 PUSH2 0x2E5 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV PUSH2 0x187 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x180 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP3 SGT ISZERO JUMPDEST PUSH1 0x8 PUSH2 0x19A JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x685 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1A8 JUMPI PUSH2 0x1A8 DUP2 PUSH2 0xB55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP1 DUP5 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3F68318436F8EA4CB460F000000000 DUP6 ADD MUL DUP2 PUSH2 0x1F8 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 SDIV DUP2 ADD SWAP1 POP DUP1 PUSH1 0x2 MUL SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x322 JUMPI PUSH2 0x318 DUP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x312 JUMPI INVALID JUMPDEST SDIV PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x373 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x3AB JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x3F3 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x42E JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x465 JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x49C JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x4D1 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x4FC JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x531 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x566 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x59A JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x5CE JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x5F1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP4 SGT ISZERO JUMPDEST PUSH1 0x9 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6DF DUP3 PUSH1 0x0 SUB PUSH2 0x685 JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x6F6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x6F05B59D3B2000000 DUP4 SLT PUSH2 0x754 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF90FA4A62C4E000000 SWAP1 SWAP2 ADD SWAP1 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 PUSH2 0x7A0 JUMP JUMPDEST PUSH9 0x3782DACE9D9000000 DUP4 SLT PUSH2 0x79C JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC87D2531627000000 SWAP1 SWAP2 ADD SWAP1 PUSH12 0x1425982CF597CD205CEF7380 PUSH2 0x7A0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x64 SWAP3 SWAP1 SWAP3 MUL SWAP2 PUSH9 0x56BC75E2D63100000 PUSH9 0xAD78EBC5AC62000000 DUP5 SLT PUSH2 0x806 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH15 0x1855144814A7FF805980FF0084000 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D631000000 DUP5 SLT PUSH2 0x858 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B18800000 DUP5 SLT PUSH2 0x8A8 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E7800000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x3F1FCE3DA636EA5CF850 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C400000 DUP5 SLT PUSH2 0x8F8 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x127FA27722CC06CC5E2 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0xAD78EBC5AC6200000 DUP5 SLT PUSH2 0x947 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x280E60114EDB805D03 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 SLT PUSH2 0x996 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0xEBC5FB41746121110 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP5 SLT PUSH2 0x9E5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E780000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x8F00F760A4B2DB55D DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C40000 DUP5 SLT PUSH2 0xA34 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C0000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x6F5F1775788937937 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 DUP2 ADD SWAP1 DUP6 SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP1 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x3 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x4 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x5 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x6 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x7 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x8 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x9 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xA PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xB PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xC PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x64 PUSH9 0x56BC75E2D63100000 DUP5 DUP5 MUL SDIV DUP6 MUL SDIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB7F DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xB82 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xD1 0xDC 0xCC 0xCD 0xEA MSIZE 0xF9 PUSH27 0x2E3D774BB8798EFE81BE6C0214FCE05D0863681193270464736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"747:141:58:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80632e4c697f14610030575b600080fd5b6100536004803603604081101561004657600080fd5b5080359060200135610065565b60408051918252519081900360200190f35b6000610071838361007a565b90505b92915050565b6000816100905750670de0b6b3a7640000610074565b8261009d57506000610074565b6100ad60ff84901c15600661019a565b826100d3770bce5086492111aea88f4bb1ca6bcf584181ea8059f765328410600761019a565b826000670c7d713b49da0000831380156100f45750670f43fc2c04ee000083125b1561012b576000610104846101ac565b9050670de0b6b3a764000080820784020583670de0b6b3a764000083050201915050610139565b81610135846102e5565b0290505b670de0b6b3a764000090056101877ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008212801590610180575068070c1cc73b00c800008213155b600861019a565b61019081610685565b9695505050505050565b816101a8576101a881610b55565b5050565b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000850102816101f857fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f820581019050806002029450505050505b919050565b6000670de0b6b3a764000082121561032257610318826ec097ce7bc90715b34b9f10000000008161031257fe5b056102e5565b60000390506102e0565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261037357770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126103ab576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff008400083126103f3576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a700831261042e576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261046557693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e2831261049c57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126104d15768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb4174612111083126104fc57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312610531576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312610566576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b286603831261059a576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126105ce576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816105f157fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60006106ca7ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000083121580156106c3575068070c1cc73b00c800008313155b600961019a565b60008212156106fe576106df82600003610685565b6ec097ce7bc90715b34b9f1000000000816106f657fe5b0590506102e0565b60006806f05b59d3b2000000831261075457507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec6302628270000000006107a0565b6803782dace9d9000000831261079c57507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef73806107a0565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412610806577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412610858577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b1880000084126108a8577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c40000084126108f8577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412610947577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412610996577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b188000084126109e5577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412610a34577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b610b7f817f42414c0000000000000000000000000000000000000000000000000000000000610b82565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea264697066735822122052d1dccccdea59f97a2e3d774bb8798efe81be6c0214fce05d0863681193270464736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E4C697F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x53 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x71 DUP4 DUP4 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x90 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x74 JUMP JUMPDEST DUP3 PUSH2 0x9D JUMPI POP PUSH1 0x0 PUSH2 0x74 JUMP JUMPDEST PUSH2 0xAD PUSH1 0xFF DUP5 SWAP1 SHR ISZERO PUSH1 0x6 PUSH2 0x19A JUMP JUMPDEST DUP3 PUSH2 0xD3 PUSH24 0xBCE5086492111AEA88F4BB1CA6BCF584181EA8059F76532 DUP5 LT PUSH1 0x7 PUSH2 0x19A JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH8 0xC7D713B49DA0000 DUP4 SGT DUP1 ISZERO PUSH2 0xF4 JUMPI POP PUSH8 0xF43FC2C04EE0000 DUP4 SLT JUMPDEST ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 PUSH2 0x104 DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 SMOD DUP5 MUL SDIV DUP4 PUSH8 0xDE0B6B3A7640000 DUP4 SDIV MUL ADD SWAP2 POP POP PUSH2 0x139 JUMP JUMPDEST DUP2 PUSH2 0x135 DUP5 PUSH2 0x2E5 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 SDIV PUSH2 0x187 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x180 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP3 SGT ISZERO JUMPDEST PUSH1 0x8 PUSH2 0x19A JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x685 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x1A8 JUMPI PUSH2 0x1A8 DUP2 PUSH2 0xB55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 MUL PUSH1 0x0 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP1 DUP5 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3F68318436F8EA4CB460F000000000 DUP6 ADD MUL DUP2 PUSH2 0x1F8 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xD DUP3 SDIV ADD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xF DUP3 SDIV DUP2 ADD SWAP1 POP DUP1 PUSH1 0x2 MUL SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 SLT ISZERO PUSH2 0x322 JUMPI PUSH2 0x318 DUP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x312 JUMPI INVALID JUMPDEST SDIV PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 SUB SWAP1 POP PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 PUSH31 0x1600EF3172E58D2E933EC884FDE10064C63B5372D805E203C0000000000000 DUP4 SLT PUSH2 0x373 JUMPI PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 DUP4 SDIV SWAP3 POP PUSH9 0x6F05B59D3B2000000 ADD JUMPDEST PUSH20 0x11798004D755D3C8BC8E03204CF44619E000000 DUP4 SLT PUSH2 0x3AB JUMPI PUSH12 0x1425982CF597CD205CEF7380 DUP4 SDIV SWAP3 POP PUSH9 0x3782DACE9D9000000 ADD JUMPDEST PUSH1 0x64 SWAP3 DUP4 MUL SWAP3 MUL PUSH15 0x1855144814A7FF805980FF0084000 DUP4 SLT PUSH2 0x3F3 JUMPI PUSH15 0x1855144814A7FF805980FF0084000 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC62000000 ADD JUMPDEST PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP4 SLT PUSH2 0x42E JUMPI PUSH12 0x2DF0AB5A80A22C61AB5A700 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x56BC75E2D631000000 ADD JUMPDEST PUSH10 0x3F1FCE3DA636EA5CF850 DUP4 SLT PUSH2 0x465 JUMPI PUSH10 0x3F1FCE3DA636EA5CF850 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B18800000 ADD JUMPDEST PUSH10 0x127FA27722CC06CC5E2 DUP4 SLT PUSH2 0x49C JUMPI PUSH10 0x127FA27722CC06CC5E2 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C400000 ADD JUMPDEST PUSH9 0x280E60114EDB805D03 DUP4 SLT PUSH2 0x4D1 JUMPI PUSH9 0x280E60114EDB805D03 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0xAD78EBC5AC6200000 ADD JUMPDEST PUSH9 0xEBC5FB41746121110 DUP4 SLT PUSH2 0x4FC JUMPI PUSH9 0xEBC5FB41746121110 PUSH9 0x56BC75E2D63100000 SWAP4 DUP5 MUL SDIV SWAP3 ADD JUMPDEST PUSH9 0x8F00F760A4B2DB55D DUP4 SLT PUSH2 0x531 JUMPI PUSH9 0x8F00F760A4B2DB55D PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x2B5E3AF16B1880000 ADD JUMPDEST PUSH9 0x6F5F1775788937937 DUP4 SLT PUSH2 0x566 JUMPI PUSH9 0x6F5F1775788937937 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH9 0x15AF1D78B58C40000 ADD JUMPDEST PUSH9 0x6248F33704B286603 DUP4 SLT PUSH2 0x59A JUMPI PUSH9 0x6248F33704B286603 PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0xAD78EBC5AC620000 ADD JUMPDEST PUSH9 0x5C548670B9510E7AC DUP4 SLT PUSH2 0x5CE JUMPI PUSH9 0x5C548670B9510E7AC PUSH9 0x56BC75E2D63100000 DUP5 MUL SDIV SWAP3 POP PUSH8 0x56BC75E2D6310000 ADD JUMPDEST PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP5 ADD PUSH9 0x56BC75E2D63100000 DUP1 DUP7 SUB MUL DUP2 PUSH2 0x5F1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 PUSH9 0x56BC75E2D63100000 DUP3 DUP1 MUL SDIV SWAP1 POP DUP2 DUP1 PUSH9 0x56BC75E2D63100000 DUP2 DUP5 MUL SDIV SWAP2 POP PUSH1 0x3 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x5 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x7 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0x9 DUP3 SDIV ADD PUSH9 0x56BC75E2D63100000 DUP3 DUP5 MUL SDIV SWAP2 POP PUSH1 0xB DUP3 SDIV ADD PUSH1 0x2 MUL PUSH1 0x64 DUP6 DUP3 ADD SDIV SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC702BD3A30FC0000 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI POP PUSH9 0x70C1CC73B00C80000 DUP4 SGT ISZERO JUMPDEST PUSH1 0x9 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6DF DUP3 PUSH1 0x0 SUB PUSH2 0x685 JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP2 PUSH2 0x6F6 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x6F05B59D3B2000000 DUP4 SLT PUSH2 0x754 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF90FA4A62C4E000000 SWAP1 SWAP2 ADD SWAP1 PUSH24 0x195E54C5DD42177F53A27172FA9EC630262827000000000 PUSH2 0x7A0 JUMP JUMPDEST PUSH9 0x3782DACE9D9000000 DUP4 SLT PUSH2 0x79C JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC87D2531627000000 SWAP1 SWAP2 ADD SWAP1 PUSH12 0x1425982CF597CD205CEF7380 PUSH2 0x7A0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST PUSH1 0x64 SWAP3 SWAP1 SWAP3 MUL SWAP2 PUSH9 0x56BC75E2D63100000 PUSH9 0xAD78EBC5AC62000000 DUP5 SLT PUSH2 0x806 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH15 0x1855144814A7FF805980FF0084000 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D631000000 DUP5 SLT PUSH2 0x858 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF000000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH12 0x2DF0AB5A80A22C61AB5A700 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B18800000 DUP5 SLT PUSH2 0x8A8 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E7800000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x3F1FCE3DA636EA5CF850 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C400000 DUP5 SLT PUSH2 0x8F8 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH10 0x127FA27722CC06CC5E2 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0xAD78EBC5AC6200000 DUP5 SLT PUSH2 0x947 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5287143A539E00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x280E60114EDB805D03 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 SLT PUSH2 0x996 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA9438A1D29CF00000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0xEBC5FB41746121110 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP5 SLT PUSH2 0x9E5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4A1C50E94E780000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x8F00F760A4B2DB55D DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x15AF1D78B58C40000 DUP5 SLT PUSH2 0xA34 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEA50E2874A73C0000 SWAP1 SWAP4 ADD SWAP3 PUSH9 0x56BC75E2D63100000 PUSH9 0x6F5F1775788937937 DUP3 MUL SDIV SWAP1 POP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP5 DUP2 ADD SWAP1 DUP6 SWAP1 PUSH1 0x2 SWAP1 DUP3 DUP1 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x3 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x4 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x5 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x6 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x7 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x8 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x9 PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xA PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xB PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0xC PUSH9 0x56BC75E2D63100000 DUP8 DUP4 MUL SDIV SDIV SWAP2 DUP3 ADD SWAP2 SWAP1 POP PUSH1 0x64 PUSH9 0x56BC75E2D63100000 DUP5 DUP5 MUL SDIV DUP6 MUL SDIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB7F DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0xB82 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xD1 0xDC 0xCC 0xCD 0xEA MSIZE 0xF9 PUSH27 0x2E3D774BB8798EFE81BE6C0214FCE05D0863681193270464736F6C PUSH4 0x43000701 STOP CALLER ","sourceMap":"747:141:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:109;;;;;;;;;;;;;;;;-1:-1:-1;777:109:58;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;833:7;859:20;874:1;877;859:14;:20::i;:::-;852:27;;777:109;;;;;:::o;4916:2195:31:-;4974:7;4997:6;4993:131;;-1:-1:-1;1986:4:31;5091:22;;4993:131;5138:6;5134:45;;-1:-1:-1;5167:1:31;5160:8;;5134:45;5549:47;5563:3;5558:8;;;:13;5439:1:0;5549:8:31;:47::i;:::-;5631:1;5987:57;3129:24;5996:23;;5490:1:0;5987:8:31;:57::i;:::-;6079:1;6054:15;3015:13;6125:28;-1:-1:-1;6125:60:31;;;;-1:-1:-1;3070:13:31;6157:28;;6125:60;6121:684;;;6201:14;6218:16;6225:8;6218:6;:16::i;:::-;6201:33;-1:-1:-1;1986:4:31;6685:16;;;6684:29;;6683:40;6672:8;1986:4;6652:7;:16;6651:29;:72;6635:89;;6121:684;;;;6786:8;6770:13;6774:8;6770:3;:13::i;:::-;:24;6755:39;;6121:684;1986:4;6814:22;;6910:150;2822:6;6932:36;-1:-1:-1;6932:36:31;;;:76;;;2771:6;6972:12;:36;;6932:76;5547:1:0;6910:8:31;:150::i;:::-;7086:17;7090:12;7086:3;:17::i;:::-;7071:33;4916:2195;-1:-1:-1;;;;;;4916:2195:31:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;19430:1714:31:-;1986:4;19700:11;19478:6;;2211:4;20110:10;;;;20085;;;20084:21;20110:10;20083:38;;;;;;-1:-1:-1;20131:16:31;2211:4;20151:5;;;20150:16;;-1:-1:-1;20260:1:31;;2211:4;20475:15;;;20474:26;;-1:-1:-1;20529:1:31;20474:26;20523:7;20510:20;2211:4;20548:15;;;20547:26;;-1:-1:-1;20602:1:31;20547:26;20596:7;20583:20;2211:4;20621:15;;;20620:26;;-1:-1:-1;20675:1:31;20620:26;20669:7;20656:20;2211:4;20694:15;;;20693:26;;-1:-1:-1;20748:1:31;20693:26;20742:7;20729:20;2211:4;20767:15;;;20766:26;;-1:-1:-1;20821:2:31;20766:26;20815:8;20802:21;2211:4;20841:15;;;20840:26;;-1:-1:-1;20895:2:31;20840:26;20889:8;20876:21;2211:4;20915:15;;;20914:26;;-1:-1:-1;20969:2:31;20914:26;20963:8;20950:21;;;;21124:9;21136:1;21124:13;21117:20;;;;;;19430:1714;;;;:::o;14205:4959::-;14250:6;1986:4;14272:1;:10;14268:382;;;14612:26;14636:1;14617:15;14636:1;14616:21;;;;;14612:3;:26::i;:::-;14611:27;;14603:36;;;;14268:382;15975:10;16008:11;16003:16;;15999:114;;3265:56;16035:7;;;-1:-1:-1;3209:21:31;16093:9;15999:114;16132:11;16127:16;;16123:114;;3428:28;16159:7;;;-1:-1:-1;3373:20:31;16217:9;16123:114;16375:3;16388:8;;;;16368:10;3594:34;16523:7;;16519:82;;3594:34;2176:4;16551:10;;16550:17;;-1:-1:-1;3537:22:31;16581:9;16519:82;3723:27;16615:1;:7;16611:82;;3723:27;2176:4;16643:10;;16642:17;;-1:-1:-1;3666:22:31;16673:9;16611:82;3844:24;16707:1;:7;16703:82;;3844:24;2176:4;16735:10;;16734:17;;-1:-1:-1;3788:21:31;16765:9;16703:82;3962:22;16799:1;:7;16795:82;;3962:22;2176:4;16827:10;;16826:17;;-1:-1:-1;3906:21:31;16857:9;16795:82;4078:21;16891:1;:7;16887:82;;4078:21;2176:4;16919:10;;16918:17;;-1:-1:-1;4022:21:31;16949:9;16887:82;4193:21;16983:1;:7;16979:82;;4193:21;2176:4;17011:10;;;17010:17;;17041:9;16979:82;4308:21;17075:1;:7;17071:82;;4308:21;2176:4;17103:10;;17102:17;;-1:-1:-1;4252:20:31;17133:9;17071:82;4423:21;17167:1;:7;17163:82;;4423:21;2176:4;17195:10;;17194:17;;-1:-1:-1;4367:20:31;17225:9;17163:82;4540:21;17259:1;:8;17255:85;;4540:21;2176:4;17288:10;;17287:18;;-1:-1:-1;4483:20:31;17319:10;17255:85;4657:21;17354:1;:8;17350:85;;4657:21;2176:4;17383:10;;17382:18;;-1:-1:-1;4601:19:31;17414:10;17350:85;17937:8;2176:4;17975:1;:10;2176:4;;17950:1;:10;17949:21;17948:38;;;;;;;-1:-1:-1;17996:16:31;2176:4;18016:5;;;18015:16;;-1:-1:-1;18125:1:31;;2176:4;18340:15;;;18339:26;;-1:-1:-1;18394:1:31;18339:26;18388:7;18375:20;2176:4;18413:15;;;18412:26;;-1:-1:-1;18467:1:31;18412:26;18461:7;18448:20;2176:4;18486:15;;;18485:26;;-1:-1:-1;18540:1:31;18485:26;18534:7;18521:20;2176:4;18559:15;;;18558:26;;-1:-1:-1;18613:1:31;18558:26;18607:7;18594:20;2176:4;18632:15;;;18631:26;;-1:-1:-1;18686:2:31;18631:26;18680:8;18667:21;18860:1;18847:14;19154:3;19135:15;;;19134:23;;14205:4959;-1:-1:-1;;;;;;;14205:4959:31:o;7325:5379::-;7371:6;7389:89;2822:6;7398:1;:25;;:54;;;;;2771:6;7427:1;:25;;7398:54;5599:1:0;7389:8:31;:89::i;:::-;7497:1;7493;:5;7489:353;;;7823:7;7828:1;7827:2;;7823:3;:7::i;:::-;7804:15;7803:27;;;;;;7795:36;;;;7489:353;9143:14;3209:21;9171:1;:7;9167:220;;-1:-1:-1;9194:7:31;;;;;3265:56;9167:220;;;3373:20;9248:1;:7;9244:143;;-1:-1:-1;9271:7:31;;;;;3428:28;9244:143;;;-1:-1:-1;9345:1:31;9244:143;9542:3;9537:8;;;;;2176:4;3537:22;9796:7;;9792:92;;9819:7;;;;;2176:4;3594:34;9851:12;;9850:23;9840:33;;9792:92;3666:22;9897:1;:7;9893:92;;9920:7;;;;;2176:4;3723:27;9952:12;;9951:23;9941:33;;9893:92;3788:21;9998:1;:7;9994:92;;10021:7;;;;;2176:4;3844:24;10053:12;;10052:23;10042:33;;9994:92;3906:21;10099:1;:7;10095:92;;10122:7;;;;;2176:4;3962:22;10154:12;;10153:23;10143:33;;10095:92;4022:21;10200:1;:7;10196:92;;10223:7;;;;;2176:4;4078:21;10255:12;;10254:23;10244:33;;10196:92;4137:21;10301:1;:7;10297:92;;10324:7;;;;;4137:21;4193;10356:12;;10355:23;10345:33;;10297:92;4252:20;10402:1;:7;10398:92;;10425:7;;;;;2176:4;4308:21;10457:12;;10456:23;10446:33;;10398:92;4367:20;10503:1;:7;10499:92;;10526:7;;;;;2176:4;4423:21;10558:12;;10557:23;10547:33;;10499:92;2176:4;11123:17;;;;;;11408:1;;11386:8;;;11385:19;11384:25;11419:17;;;;11384:25;-1:-1:-1;11478:1:31;2176:4;11456:8;;;11455:19;11454:25;11489:17;;;;11454:25;-1:-1:-1;11548:1:31;2176:4;11526:8;;;11525:19;11524:25;11559:17;;;;11524:25;-1:-1:-1;11618:1:31;2176:4;11596:8;;;11595:19;11594:25;11629:17;;;;11594:25;-1:-1:-1;11688:1:31;2176:4;11666:8;;;11665:19;11664:25;11699:17;;;;11664:25;-1:-1:-1;11758:1:31;2176:4;11736:8;;;11735:19;11734:25;11769:17;;;;11734:25;-1:-1:-1;11828:1:31;2176:4;11806:8;;;11805:19;11804:25;11839:17;;;;11804:25;-1:-1:-1;11898:1:31;2176:4;11876:8;;;11875:19;11874:25;11909:17;;;;11874:25;-1:-1:-1;11968:2:31;2176:4;11946:8;;;11945:19;11944:26;11980:17;;;;11944:26;-1:-1:-1;12039:2:31;2176:4;12017:8;;;12016:19;12015:26;12051:17;;;;12015:26;-1:-1:-1;12110:2:31;2176:4;12088:8;;;12087:19;12086:26;12122:17;;;;12086:26;-1:-1:-1;12694:3:31;2176:4;12650:19;;;12649:30;12648:42;;12647:50;;7325:5379;-1:-1:-1;;;;;;7325:5379:31:o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"pow(uint256,uint256)":"2e4c697f"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"pow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/LogExpMathMock.sol\":\"LogExpMathMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x1ef044eb991d5278b9edfe159e3cd4824733d5ed8e6a9de3f4f57d6bf65be94d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168d31e5d2a92c9eeb0b50be5fb859d17746ad4ce0ee97552befce65dc6d726a\",\"dweb:/ipfs/QmQLyFUS1PTkkKUKKXU5Z7BoMPoQGdcvgpMUtJ6LaWMjrW\"]},\"contracts/test/LogExpMathMock.sol\":{\"keccak256\":\"0x1a6939025a750254dfb215226bad6a245d382bc7bf850a9e47a321b6c198fa8f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b34773f11c11b4fb5108ee7de13f0d8414d063558477222dc9b50017a70912f8\",\"dweb:/ipfs/QmQGcoJW6Cu5yhzCoKHPKnKA9FeWNtsTRykU46Q3tiCmz8\"]}},\"version\":1}"}},"contracts/test/MathMock.sol":{"MathMock":{"abi":[{"inputs":[{"internalType":"int256","name":"a","type":"int256"}],"name":"abs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"6080604052348015600f57600080fd5b5060aa8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631b5ac4b514602d575b600080fd5b604760048036036020811015604157600080fd5b50356059565b60408051918252519081900360200190f35b60006062826068565b92915050565b60ff81901d908118039056fea2646970667358221220dfb8d96361a6dc299b88d3ad5c0856c80415e6ac071bdecf3385241b5a373c3864736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xAA DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B5AC4B5 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x62 DUP3 PUSH1 0x68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 SWAP1 SAR SWAP1 DUP2 XOR SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xB8 0xD9 PUSH4 0x61A6DC29 SWAP12 DUP9 0xD3 0xAD 0x5C ADDMOD JUMP 0xC8 DIV ISZERO 0xE6 0xAC SMOD SHL 0xDE 0xCF CALLER DUP6 0x24 SHL GAS CALLDATACOPY EXTCODECOPY CODESIZE PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"741:114:59:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c80631b5ac4b514602d575b600080fd5b604760048036036020811015604157600080fd5b50356059565b60408051918252519081900360200190f35b60006062826068565b92915050565b60ff81901d908118039056fea2646970667358221220dfb8d96361a6dc299b88d3ad5c0856c80415e6ac071bdecf3385241b5a373c3864736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B5AC4B5 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x62 DUP3 PUSH1 0x68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 SWAP1 SAR SWAP1 DUP2 XOR SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xB8 0xD9 PUSH4 0x61A6DC29 SWAP12 DUP9 0xD3 0xAD 0x5C ADDMOD JUMP 0xC8 DIV ISZERO 0xE6 0xAC SMOD SHL 0xDE 0xCF CALLER DUP6 0x24 SHL GAS CALLDATACOPY EXTCODECOPY CODESIZE PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"741:114:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:88;;;;;;;;;;;;;;;;-1:-1:-1;765:88:59;;:::i;:::-;;;;;;;;;;;;;;;;;809:7;835:11;844:1;835:8;:11::i;:::-;828:18;765:88;-1:-1:-1;;765:88:59:o;428:250:32:-;615:3;611:11;;;649:9;;;645:17;;588:84::o"},"methodIdentifiers":{"abs(int256)":"1b5ac4b5"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"}],\"name\":\"abs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MathMock.sol\":\"MathMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/math/Math.sol\":{\"keccak256\":\"0xfa4216e1e8089d1141ed73af197c4a390b6b4722c91821ad12dacd3cf81739f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f30785ec65a1a46181b4724398f39157ba11967327e770b29174b130d2dfe8f\",\"dweb:/ipfs/Qmem8qK7ExQnQ24Def6FEmLHcjC69JbvPXcnwdcosf7LNM\"]},\"contracts/test/MathMock.sol\":{\"keccak256\":\"0x4c2bc339488ea185c5be1c1ce327de814c745c1a25830d836a75173e4ddec65f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://25fe2817aaebab8a0e5360e15b95f87fdab8f4e5d9c9bae1db6245b21a1163e2\",\"dweb:/ipfs/QmSZ2od6qjvboDe87JSBBu8voyqRxoMdSQFuzdmssPbwL9\"]}},\"version\":1}"}},"contracts/test/MockBasicAuthorizer.sol":{"MockBasicAuthorizer":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"roles","type":"bytes32[]"},{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"grantRolesToMany","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b5061001c600033610021565b6100ce565b6000828152602081815260409091206100439183906102b5610048821b17901c565b505050565b600061005483836100ad565b6100a357508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b038616908117909155855490825282860190935260409020919091556100a7565b5060005b92915050565b6001600160a01b031660009081526001919091016020526040902054151590565b61090e806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639be2a88411610076578063a73cb2ab1161005b578063a73cb2ab14610141578063ca15c87314610154578063d547741f14610167576100a3565b80639be2a88414610126578063a217fddf14610139576100a3565b8063248a9ca3146100a85780632f2ff15d146100d15780639010d07c146100e657806391d1485414610106575b600080fd5b6100bb6100b63660046107ba565b61017a565b6040516100c89190610888565b60405180910390f35b6100e46100df3660046107d2565b61018f565b005b6100f96100f436600461083b565b6101c5565b6040516100c8919061085c565b6101196101143660046107d2565b6101e6565b6040516100c8919061087d565b6101196101343660046107fe565b6101fe565b6100bb610212565b6100e461014f366004610700565b610217565b6100bb6101623660046107ba565b61026c565b6100e46101753660046107d2565b610283565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546101b7906101af90336101e6565b6101a661033d565b6101c1828261034b565b5050565b60008281526020819052604081206101dd9083610363565b90505b92915050565b60008281526020819052604081206101dd908361037f565b600061020a84846101e6565b949350505050565b600081565b610223825182516103ad565b60005b82518110156102675761025f83828151811061023e57fe5b602002602001015183838151811061025257fe5b602002602001015161018f565b600101610226565b505050565b60008181526020819052604081206101e0906103ba565b6000828152602081905260409020600201546102ab906102a390336101e6565b6101a761033d565b6101c182826103be565b60006102c1838361037f565b61033557508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155855490825282860190935260409020919091556101e0565b5060006101e0565b816101c1576101c1816103d6565b600082815260208190526040902061026790826102b5565b8154600090610375908310606461033d565b6101dd8383610403565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001919091016020526040902054151590565b6101c1818314606761033d565b5490565b6000828152602081905260409020610267908261043d565b610400817f42414c00000000000000000000000000000000000000000000000000000000006105eb565b50565b600082600001828154811061041457fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169392505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205480156105e15783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191018082146105465760008660000182815481106104ab57fe5b600091825260209091200154875473ffffffffffffffffffffffffffffffffffffffff909116915081908890859081106104e157fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260018881019092526040902090830190555b855486908061055157fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff871682526001888101909152604082209190915593506101e092505050565b60009150506101e0565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b803573ffffffffffffffffffffffffffffffffffffffff811681146101e057600080fd5b600082601f83011261069a578081fd5b81356106ad6106a8826108b8565b610891565b8181529150602080830190848101818402860182018710156106ce57600080fd5b60005b848110156106f5576106e38883610666565b845292820192908201906001016106d1565b505050505092915050565b60008060408385031215610712578182fd5b823567ffffffffffffffff80821115610729578384fd5b818501915085601f83011261073c578384fd5b813561074a6106a8826108b8565b80828252602080830192508086018a82838702890101111561076a578889fd5b8896505b8487101561078c57803584526001969096019592810192810161076e565b5090965087013593505050808211156107a3578283fd5b506107b08582860161068a565b9150509250929050565b6000602082840312156107cb578081fd5b5035919050565b600080604083850312156107e4578182fd5b823591506107f58460208501610666565b90509250929050565b600080600060608486031215610812578081fd5b833592506108238560208601610666565b91506108328560408601610666565b90509250925092565b6000806040838503121561084d578182fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b90815260200190565b60405181810167ffffffffffffffff811182821017156108b057600080fd5b604052919050565b600067ffffffffffffffff8211156108ce578081fd5b506020908102019056fea2646970667358221220986c6c2310fe11e833540702bc1bef8a8f722af948bdf8a0fcd104938b23afb564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH1 0x0 CALLER PUSH2 0x21 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH2 0x43 SWAP2 DUP4 SWAP1 PUSH2 0x2B5 PUSH2 0x48 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54 DUP4 DUP4 PUSH2 0xAD JUMP JUMPDEST PUSH2 0xA3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xA7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x90E DUP1 PUSH2 0xDD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BE2A884 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xA73CB2AB GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA73CB2AB EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x167 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x9BE2A884 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x139 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x106 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH2 0xBB PUSH2 0x212 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1B7 SWAP1 PUSH2 0x1AF SWAP1 CALLER PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x34B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1DD SWAP1 DUP4 PUSH2 0x363 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1DD SWAP1 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A DUP5 DUP5 PUSH2 0x1E6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x223 DUP3 MLOAD DUP3 MLOAD PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH2 0x25F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x252 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x226 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1E0 SWAP1 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x2A3 SWAP1 CALLER PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1 DUP4 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x335 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1E0 JUMP JUMPDEST DUP2 PUSH2 0x1C1 JUMPI PUSH2 0x1C1 DUP2 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x267 SWAP1 DUP3 PUSH2 0x2B5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x375 SWAP1 DUP4 LT PUSH1 0x64 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x1DD DUP4 DUP4 PUSH2 0x403 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1C1 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x33D JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x267 SWAP1 DUP3 PUSH2 0x43D JUMP JUMPDEST PUSH2 0x400 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x5EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x414 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x546 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4AB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x4E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 DUP9 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 ADD SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x551 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP3 MSTORE PUSH1 0x1 DUP9 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP4 POP PUSH2 0x1E0 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E0 JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x69A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6AD PUSH2 0x6A8 DUP3 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x6E3 DUP9 DUP4 PUSH2 0x666 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6D1 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x712 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x729 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x73C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x74A PUSH2 0x6A8 DUP3 PUSH2 0x8B8 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP1 DUP7 ADD DUP11 DUP3 DUP4 DUP8 MUL DUP10 ADD ADD GT ISZERO PUSH2 0x76A JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x78C JUMPI DUP1 CALLDATALOAD DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x76E JUMP JUMPDEST POP SWAP1 SWAP7 POP DUP8 ADD CALLDATALOAD SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x7A3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x7B0 DUP6 DUP3 DUP7 ADD PUSH2 0x68A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x7F5 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x666 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x812 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x823 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x666 JUMP JUMPDEST SWAP2 POP PUSH2 0x832 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x666 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84D JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8CE JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH13 0x6C2310FE11E833540702BC1BEF DUP11 DUP16 PUSH19 0x2AF948BDF8A0FCD104938B23AFB564736F6C63 NUMBER STOP SMOD ADD STOP CALLER ","sourceMap":"998:2081:60:-:0;;;1321:73;;;;;;;;;-1:-1:-1;1345:42:60;1162:4;1376:10;1345;:42::i;:::-;998:2081;;2849:109;2918:6;:12;;;;;;;;;;;:33;;2943:7;;2918:24;;;;;:33;;:::i;:::-;;2849:109;;:::o;1851:410:40:-;1921:4;1942:20;1951:3;1956:5;1942:8;:20::i;:::-;1937:318;;-1:-1:-1;1978:23:40;;;;;;;;-1:-1:-1;1978:23:40;;;;;;;;;;;;-1:-1:-1;;;;;;1978:23:40;-1:-1:-1;;;;;1978:23:40;;;;;;;;2158:18;;2136:19;;;:12;;;:19;;;;;;:40;;;;2190:11;;1937:318;-1:-1:-1;2239:5:40;1937:318;1851:410;;;;:::o;3977:134::-;-1:-1:-1;;;;;4080:19:40;4057:4;4080:19;;;:12;;;;;:19;;;;;;:24;;;3977:134::o;998:2081:60:-;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a35760003560e01c80639be2a88411610076578063a73cb2ab1161005b578063a73cb2ab14610141578063ca15c87314610154578063d547741f14610167576100a3565b80639be2a88414610126578063a217fddf14610139576100a3565b8063248a9ca3146100a85780632f2ff15d146100d15780639010d07c146100e657806391d1485414610106575b600080fd5b6100bb6100b63660046107ba565b61017a565b6040516100c89190610888565b60405180910390f35b6100e46100df3660046107d2565b61018f565b005b6100f96100f436600461083b565b6101c5565b6040516100c8919061085c565b6101196101143660046107d2565b6101e6565b6040516100c8919061087d565b6101196101343660046107fe565b6101fe565b6100bb610212565b6100e461014f366004610700565b610217565b6100bb6101623660046107ba565b61026c565b6100e46101753660046107d2565b610283565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546101b7906101af90336101e6565b6101a661033d565b6101c1828261034b565b5050565b60008281526020819052604081206101dd9083610363565b90505b92915050565b60008281526020819052604081206101dd908361037f565b600061020a84846101e6565b949350505050565b600081565b610223825182516103ad565b60005b82518110156102675761025f83828151811061023e57fe5b602002602001015183838151811061025257fe5b602002602001015161018f565b600101610226565b505050565b60008181526020819052604081206101e0906103ba565b6000828152602081905260409020600201546102ab906102a390336101e6565b6101a761033d565b6101c182826103be565b60006102c1838361037f565b61033557508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155855490825282860190935260409020919091556101e0565b5060006101e0565b816101c1576101c1816103d6565b600082815260208190526040902061026790826102b5565b8154600090610375908310606461033d565b6101dd8383610403565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001919091016020526040902054151590565b6101c1818314606761033d565b5490565b6000828152602081905260409020610267908261043d565b610400817f42414c00000000000000000000000000000000000000000000000000000000006105eb565b50565b600082600001828154811061041457fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169392505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205480156105e15783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191018082146105465760008660000182815481106104ab57fe5b600091825260209091200154875473ffffffffffffffffffffffffffffffffffffffff909116915081908890859081106104e157fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260018881019092526040902090830190555b855486908061055157fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff871682526001888101909152604082209190915593506101e092505050565b60009150506101e0565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b803573ffffffffffffffffffffffffffffffffffffffff811681146101e057600080fd5b600082601f83011261069a578081fd5b81356106ad6106a8826108b8565b610891565b8181529150602080830190848101818402860182018710156106ce57600080fd5b60005b848110156106f5576106e38883610666565b845292820192908201906001016106d1565b505050505092915050565b60008060408385031215610712578182fd5b823567ffffffffffffffff80821115610729578384fd5b818501915085601f83011261073c578384fd5b813561074a6106a8826108b8565b80828252602080830192508086018a82838702890101111561076a578889fd5b8896505b8487101561078c57803584526001969096019592810192810161076e565b5090965087013593505050808211156107a3578283fd5b506107b08582860161068a565b9150509250929050565b6000602082840312156107cb578081fd5b5035919050565b600080604083850312156107e4578182fd5b823591506107f58460208501610666565b90509250929050565b600080600060608486031215610812578081fd5b833592506108238560208601610666565b91506108328560408601610666565b90509250925092565b6000806040838503121561084d578182fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b90815260200190565b60405181810167ffffffffffffffff811182821017156108b057600080fd5b604052919050565b600067ffffffffffffffff8211156108ce578081fd5b506020908102019056fea2646970667358221220986c6c2310fe11e833540702bc1bef8a8f722af948bdf8a0fcd104938b23afb564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BE2A884 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xA73CB2AB GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA73CB2AB EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x167 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x9BE2A884 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x139 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x106 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x119 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FE JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH2 0xBB PUSH2 0x212 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1B7 SWAP1 PUSH2 0x1AF SWAP1 CALLER PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x34B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1DD SWAP1 DUP4 PUSH2 0x363 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1DD SWAP1 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A DUP5 DUP5 PUSH2 0x1E6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x223 DUP3 MLOAD DUP3 MLOAD PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH2 0x25F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x252 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x226 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1E0 SWAP1 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x2A3 SWAP1 CALLER PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C1 DUP4 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x335 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 SLOAD SWAP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1E0 JUMP JUMPDEST DUP2 PUSH2 0x1C1 JUMPI PUSH2 0x1C1 DUP2 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x267 SWAP1 DUP3 PUSH2 0x2B5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x375 SWAP1 DUP4 LT PUSH1 0x64 PUSH2 0x33D JUMP JUMPDEST PUSH2 0x1DD DUP4 DUP4 PUSH2 0x403 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1C1 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x33D JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x267 SWAP1 DUP3 PUSH2 0x43D JUMP JUMPDEST PUSH2 0x400 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x5EB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x414 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP4 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 ADD SWAP2 ADD DUP1 DUP3 EQ PUSH2 0x546 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4AB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x4E1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 DUP9 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 ADD SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x551 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP3 MSTORE PUSH1 0x1 DUP9 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP4 POP PUSH2 0x1E0 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1E0 JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x69A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6AD PUSH2 0x6A8 DUP3 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x6E3 DUP9 DUP4 PUSH2 0x666 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6D1 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x712 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x729 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x73C JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x74A PUSH2 0x6A8 DUP3 PUSH2 0x8B8 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 POP DUP1 DUP7 ADD DUP11 DUP3 DUP4 DUP8 MUL DUP10 ADD ADD GT ISZERO PUSH2 0x76A JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x78C JUMPI DUP1 CALLDATALOAD DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP2 ADD PUSH2 0x76E JUMP JUMPDEST POP SWAP1 SWAP7 POP DUP8 ADD CALLDATALOAD SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x7A3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x7B0 DUP6 DUP3 DUP7 ADD PUSH2 0x68A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CB JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7E4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x7F5 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x666 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x812 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x823 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x666 JUMP JUMPDEST SWAP2 POP PUSH2 0x832 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x666 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84D JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8CE JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH13 0x6C2310FE11E833540702BC1BEF DUP11 DUP16 PUSH19 0x2AF948BDF8A0FCD104938B23AFB564736F6C63 NUMBER STOP SMOD ADD STOP CALLER ","sourceMap":"998:2081:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:123;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2439:193;;;;;;:::i;:::-;;:::i;:::-;;1873:147;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1400:137::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1543:182::-;;;;;;:::i;:::-;;:::i;1108:58::-;;;:::i;2155:278::-;;;;;;:::i;:::-;;:::i;1731:136::-;;;;;;:::i;:::-;;:::i;2638:205::-;;;;;;:::i;:::-;;:::i;2026:123::-;2094:7;2120:12;;;;;;;;;;:22;;;;2026:123::o;2439:193::-;2523:6;:12;;;;;;;;;;:22;;;2506:84;;2515:43;;2547:10;2515:7;:43::i;:::-;11617:3:0;2506:8:60;:84::i;:::-;2600:25;2611:4;2617:7;2600:10;:25::i;:::-;2439:193;;:::o;1873:147::-;1957:7;1983:12;;;;;;;;;;:30;;2007:5;1983:23;:30::i;:::-;1976:37;;1873:147;;;;;:::o;1400:137::-;1469:4;1492:12;;;;;;;;;;:38;;1522:7;1492:29;:38::i;1543:182::-;1669:4;1692:26;1700:8;1710:7;1692;:26::i;:::-;1685:33;1543:182;-1:-1:-1;;;;1543:182:60:o;1108:58::-;1162:4;1108:58;:::o;2155:278::-;2251:66;2287:5;:12;2301:8;:15;2251:35;:66::i;:::-;2332:9;2327:100;2351:5;:12;2347:1;:16;2327:100;;;2384:32;2394:5;2400:1;2394:8;;;;;;;;;;;;;;2404;2413:1;2404:11;;;;;;;;;;;;;;2384:9;:32::i;:::-;2365:3;;2327:100;;;;2155:278;;:::o;1731:136::-;1805:7;1831:12;;;;;;;;;;:29;;:27;:29::i;2638:205::-;2731:6;:12;;;;;;;;;;:22;;;2714:85;;2723:43;;2755:10;2723:7;:43::i;:::-;11678:3:0;2714:8:60;:85::i;:::-;2810:26;2822:4;2828:7;2810:11;:26::i;1851:410:40:-;1921:4;1942:20;1951:3;1956:5;1942:8;:20::i;:::-;1937:318;;-1:-1:-1;1978:23:40;;;;;;;;-1:-1:-1;1978:23:40;;;;;;;;;;;;;;;;;;;;;;;2158:18;;2136:19;;;:12;;;:19;;;;;;:40;;;;2190:11;;1937:318;-1:-1:-1;2239:5:40;2232:12;;926:101:0;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;2849:109:60:-;2918:6;:12;;;;;;;;;;:33;;2943:7;2918:24;:33::i;4648:199:40:-;4750:18;;4722:7;;4741:58;;4750:26;-1:-1:-1;5662:3:0;4741:8:40;:58::i;:::-;4816:24;4829:3;4834:5;4816:12;:24::i;3977:134::-;4080:19;;4057:4;4080:19;;;:12;;;;;:19;;;;;;:24;;;3977:134::o;920:131:22:-;998:46;1012:1;1007;:6;5826:3:0;998:8:22;:46::i;4192:114:40:-;4281:18;;4192:114::o;2964:113:60:-;3034:6;:12;;;;;;;;;;:36;;3062:7;3034:27;:36::i;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;5212:135:40:-;5296:7;5322:3;:11;;5334:5;5322:18;;;;;;;;;;;;;;;;;;;;;5212:135;-1:-1:-1;;;5212:135:40:o;2429:1467::-;2639:19;;;2502:4;2639:19;;;:12;;;:19;;;;;;2673:15;;2669:1221;;3114:18;;3066:14;;;;;3114:22;3236:26;;;3232:389;;3282:17;3302:3;:11;;3314:9;3302:22;;;;;;;;;;;;;;;;;;3424:26;;3302:22;;;;;-1:-1:-1;3302:22:40;;3424:3;;3436:13;;3424:26;;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;3536:23;;;;;;-1:-1:-1;3536:12:40;;;:23;;;;;;3562:17;;;3536:43;;3232:389;3699:17;;:3;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3791:19;;;;3699:17;3791:12;;;:19;;;;;;3784:26;;;;3699:17;-1:-1:-1;3825:11:40;;-1:-1:-1;;;3825:11:40;2669:1221;3874:5;3867:12;;;;;1692:3378:0;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14;5:130:-1;72:20;;6621:42;6610:54;;6814:35;;6804:2;;6863:1;;6853:12;160:707;;277:3;270:4;262:6;258:17;254:27;244:2;;-1:-1;;285:12;244:2;332:6;319:20;354:80;369:64;426:6;369:64;:::i;:::-;354:80;:::i;:::-;462:21;;;345:89;-1:-1;506:4;519:14;;;;494:17;;;608;;;599:27;;;;596:36;-1:-1;593:2;;;645:1;;635:12;593:2;670:1;655:206;680:6;677:1;674:13;655:206;;;760:37;793:3;781:10;760:37;:::i;:::-;748:50;;812:14;;;;840;;;;702:1;695:9;655:206;;;659:14;;;;;237:630;;;;:::o;1882:638::-;;;2053:2;2041:9;2032:7;2028:23;2024:32;2021:2;;;-1:-1;;2059:12;2021:2;2117:17;2104:31;2155:18;;2147:6;2144:30;2141:2;;;-1:-1;;2177:12;2141:2;2268:6;2257:9;2253:22;;;1010:3;1003:4;995:6;991:17;987:27;977:2;;-1:-1;;1018:12;977:2;1065:6;1052:20;1087:80;1102:64;1159:6;1102:64;:::i;1087:80::-;1173:16;1209:6;1202:5;1195:21;1239:4;;1256:3;1252:14;1245:21;;1239:4;1231:6;1227:17;1361:3;1239:4;;1345:6;1341:17;1231:6;1332:27;;1329:36;1326:2;;;-1:-1;;1368:12;1326:2;-1:-1;1394:10;;1388:206;1413:6;1410:1;1407:13;1388:206;;;1675:20;;1481:50;;1435:1;1428:9;;;;;1545:14;;;;1573;;1388:206;;;-1:-1;2197:88;;-1:-1;2335:18;;2322:32;;-1:-1;;;2363:30;;;2360:2;;;-1:-1;;2396:12;2360:2;;2426:78;2496:7;2487:6;2476:9;2472:22;2426:78;:::i;:::-;2416:88;;;2015:505;;;;;:::o;2527:241::-;;2631:2;2619:9;2610:7;2606:23;2602:32;2599:2;;;-1:-1;;2637:12;2599:2;-1:-1;1675:20;;2593:175;-1:-1;2593:175::o;2775:366::-;;;2896:2;2884:9;2875:7;2871:23;2867:32;2864:2;;;-1:-1;;2902:12;2864:2;1688:6;1675:20;2954:63;;3072:53;3117:7;3054:2;3097:9;3093:22;3072:53;:::i;:::-;3062:63;;2858:283;;;;;:::o;3148:491::-;;;;3286:2;3274:9;3265:7;3261:23;3257:32;3254:2;;;-1:-1;;3292:12;3254:2;1688:6;1675:20;3344:63;;3462:53;3507:7;3444:2;3487:9;3483:22;3462:53;:::i;:::-;3452:63;;3570:53;3615:7;3552:2;3595:9;3591:22;3570:53;:::i;:::-;3560:63;;3248:391;;;;;:::o;3646:366::-;;;3767:2;3755:9;3746:7;3742:23;3738:32;3735:2;;;-1:-1;;3773:12;3735:2;-1:-1;;1675:20;;;3925:2;3964:22;;;1812:20;;-1:-1;3729:283::o;4490:222::-;6621:42;6610:54;;;;4090:37;;4617:2;4602:18;;4588:124::o;4719:210::-;6443:13;;6436:21;4204:34;;4840:2;4825:18;;4811:118::o;4936:222::-;4321:37;;;5063:2;5048:18;;5034:124::o;5394:256::-;5456:2;5450:9;5482:17;;;5557:18;5542:34;;5578:22;;;5539:62;5536:2;;;5614:1;;5604:12;5536:2;5456;5623:22;5434:216;;-1:-1;5434:216::o;5657:304::-;;5816:18;5808:6;5805:30;5802:2;;;-1:-1;;5838:12;5802:2;-1:-1;5883:4;5871:17;;;5936:15;;5739:222::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","canPerform(bytes32,address,address)":"9be2a884","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","grantRolesToMany(bytes32[],address[])":"a73cb2ab","hasRole(bytes32,address)":"91d14854","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"grantRolesToMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockBasicAuthorizer.sol\":\"MockBasicAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IBasicAuthorizer.sol\":{\"keccak256\":\"0x4656ac33eb25f189c22bbf68981178a0aadf59a0e0313d0bc00f62d226cd0424\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d1220915bb91e48cf54890fda4857cbcb0b41ab51ebd63cddf76742cf3f6ec35\",\"dweb:/ipfs/QmfMQqDs1iWePz9qafrXf8pHVYb5SMFvriYnkAsXC3Py3E\"]},\"contracts/helpers/InputHelpers.sol\":{\"keccak256\":\"0xb9f711fe78be500e514d52ab9d39319ab05019a82a70be8ca071d0c8a7e2cb4c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://33f606957103269b63c5892bb843ff17af87dfe9ecdb560c12ff0b9f29aaf3a9\",\"dweb:/ipfs/QmUS1HHLQHEnNVhbGidzwnfW7PLoQDv3oq85edWRXgEoeM\"]},\"contracts/openzeppelin/EnumerableSet.sol\":{\"keccak256\":\"0xa644f3f9066d6a300bd7c1c214ce55c1569bb5ec54815d49c5c7a1a63cd03df3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ee2467e6a0f340d64738d7a03a407e88caa5ee31cb3c8bd6990985f1891acc\",\"dweb:/ipfs/QmP7s6CSdDLGFjNxi9Q8GEVJFiD6QkeseGD857bPE7E7Ki\"]},\"contracts/test/MockBasicAuthorizer.sol\":{\"keccak256\":\"0x7b3bd29e426a32943014bc23e431c11b8ff05f714b06c0672ce1f6cc690fe924\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c01a4f081d913b265f815858f6476c36935f2ad9a850bc33908f06f7b43bd1a2\",\"dweb:/ipfs/Qmb99C7jth4k8qYp64jzGHnS4tzouk7VMoJjjVihnLgzQM\"]}},\"version\":1}"}},"contracts/test/MockScalingHelpers.sol":{"MockScalingHelpers":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"scalingFactor","type":"uint256"}],"name":"downscaleDown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"scalingFactors","type":"uint256[]"}],"name":"downscaleDownArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"scalingFactor","type":"uint256"}],"name":"downscaleUp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"scalingFactors","type":"uint256[]"}],"name":"downscaleUpArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"scalingFactor","type":"uint256"}],"name":"upscale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"scalingFactors","type":"uint256[]"}],"name":"upscaleArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b506105f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806351d7f8e71161005057806351d7f8e7146100d357806374cd2c44146100e65780638f26f906146100f957610072565b806313c809d4146100775780632659f004146100a05780634f547360146100c0575b600080fd5b61008a61008536600461054c565b61010c565b60405161009791906105b1565b60405180910390f35b6100b36100ae3660046104eb565b61011f565b604051610097919061056d565b6100b36100ce3660046104eb565b610132565b6100b36100e13660046104eb565b61013e565b61008a6100f436600461054c565b61014a565b61008a61010736600461054c565b610156565b60006101188383610162565b9392505050565b606061012b838361016e565b5090919050565b606061012b83836101dd565b606061012b8383610246565b600061011883836102af565b600061011883836102bb565b600061011883836102c7565b8151815161017d9082906102ff565b60005b818110156101d7576101b884828151811061019757fe5b60200260200101518483815181106101ab57fe5b6020026020010151610310565b8482815181106101c457fe5b6020908102919091010152600101610180565b50505050565b815181516101ec9082906102ff565b60005b818110156101d75761022784828151811061020657fe5b602002602001015184838151811061021a57fe5b602002602001015161035a565b84828151811061023357fe5b60209081029190910101526001016101ef565b815181516102559082906102ff565b60005b818110156101d75761029084828151811061026f57fe5b602002602001015184838151811061028357fe5b60200260200101516102c7565b84828151811061029c57fe5b6020908102919091010152600101610258565b6000610118838361035a565b60006101188383610310565b60008282026102eb8415806102e45750838583816102e157fe5b04145b60036103a7565b670de0b6b3a7640000815b04949350505050565b61030c81831460676103a7565b5050565b600061031f82151560046103a7565b670de0b6b3a7640000830261035184158061034a5750670de0b6b3a764000085838161034757fe5b04145b60056103a7565b8281816102f657fe5b600061036982151560046103a7565b670de0b6b3a7640000830261039184158061034a5750670de0b6b3a764000085838161034757fe5b6001836001830304018115150291505092915050565b8161030c5761030c816103da817f42414c00000000000000000000000000000000000000000000000000000000006103dd565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600082601f830112610468578081fd5b813567ffffffffffffffff8082111561047f578283fd5b60208083026040518282820101818110858211171561049c578687fd5b6040528481529450818501925085820181870183018810156104bd57600080fd5b600091505b848210156104e05780358452928201926001919091019082016104c2565b505050505092915050565b600080604083850312156104fd578182fd5b823567ffffffffffffffff80821115610514578384fd5b61052086838701610458565b93506020850135915080821115610535578283fd5b5061054285828601610458565b9150509250929050565b6000806040838503121561055e578182fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156105a557835183529284019291840191600101610589565b50909695505050505050565b9081526020019056fea2646970667358221220a5949228ff8b645ec2aca50bc10186fbe28905bb5ad72d3998af79da3965ca3164736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51D7F8E7 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x51D7F8E7 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x74CD2C44 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8F26F906 EQ PUSH2 0xF9 JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x13C809D4 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x2659F004 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x4F547360 EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x56D JUMP JUMPDEST PUSH2 0xB3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH2 0xB3 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH2 0x8A PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH2 0x8A PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x162 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12B DUP4 DUP4 PUSH2 0x16E JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12B DUP4 DUP4 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12B DUP4 DUP4 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x2C7 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x17D SWAP1 DUP3 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x1B8 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x197 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x310 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x180 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x1EC SWAP1 DUP3 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x227 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x206 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x21A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x35A JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x233 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1EF JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x255 SWAP1 DUP3 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x290 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x26F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x283 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C7 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x29C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x2EB DUP5 ISZERO DUP1 PUSH2 0x2E4 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2E1 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x3A7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x30C DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x3A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x3A7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 MUL PUSH2 0x351 DUP5 ISZERO DUP1 PUSH2 0x34A JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x347 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x5 PUSH2 0x3A7 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2F6 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x3A7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 MUL PUSH2 0x391 DUP5 ISZERO DUP1 PUSH2 0x34A JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x1 DUP4 SUB DIV ADD DUP2 ISZERO ISZERO MUL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x30C JUMPI PUSH2 0x30C DUP2 PUSH2 0x3DA DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x3DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x468 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x47F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP4 MUL PUSH1 0x40 MLOAD DUP3 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x49C JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE SWAP5 POP DUP2 DUP6 ADD SWAP3 POP DUP6 DUP3 ADD DUP2 DUP8 ADD DUP4 ADD DUP9 LT ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x4E0 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 DUP3 ADD PUSH2 0x4C2 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FD JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x514 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x520 DUP7 DUP4 DUP8 ADD PUSH2 0x458 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x535 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x542 DUP6 DUP3 DUP7 ADD PUSH2 0x458 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x55E JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x589 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SWAP5 SWAP3 0x28 SELFDESTRUCT DUP12 PUSH5 0x5EC2ACA50B 0xC1 ADD DUP7 0xFB 0xE2 DUP10 SDIV 0xBB GAS 0xD7 0x2D CODECOPY SWAP9 0xAF PUSH26 0xDA3965CA3164736F6C6343000701003300000000000000000000 ","sourceMap":"788:1222:61:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c806351d7f8e71161005057806351d7f8e7146100d357806374cd2c44146100e65780638f26f906146100f957610072565b806313c809d4146100775780632659f004146100a05780634f547360146100c0575b600080fd5b61008a61008536600461054c565b61010c565b60405161009791906105b1565b60405180910390f35b6100b36100ae3660046104eb565b61011f565b604051610097919061056d565b6100b36100ce3660046104eb565b610132565b6100b36100e13660046104eb565b61013e565b61008a6100f436600461054c565b61014a565b61008a61010736600461054c565b610156565b60006101188383610162565b9392505050565b606061012b838361016e565b5090919050565b606061012b83836101dd565b606061012b8383610246565b600061011883836102af565b600061011883836102bb565b600061011883836102c7565b8151815161017d9082906102ff565b60005b818110156101d7576101b884828151811061019757fe5b60200260200101518483815181106101ab57fe5b6020026020010151610310565b8482815181106101c457fe5b6020908102919091010152600101610180565b50505050565b815181516101ec9082906102ff565b60005b818110156101d75761022784828151811061020657fe5b602002602001015184838151811061021a57fe5b602002602001015161035a565b84828151811061023357fe5b60209081029190910101526001016101ef565b815181516102559082906102ff565b60005b818110156101d75761029084828151811061026f57fe5b602002602001015184838151811061028357fe5b60200260200101516102c7565b84828151811061029c57fe5b6020908102919091010152600101610258565b6000610118838361035a565b60006101188383610310565b60008282026102eb8415806102e45750838583816102e157fe5b04145b60036103a7565b670de0b6b3a7640000815b04949350505050565b61030c81831460676103a7565b5050565b600061031f82151560046103a7565b670de0b6b3a7640000830261035184158061034a5750670de0b6b3a764000085838161034757fe5b04145b60056103a7565b8281816102f657fe5b600061036982151560046103a7565b670de0b6b3a7640000830261039184158061034a5750670de0b6b3a764000085838161034757fe5b6001836001830304018115150291505092915050565b8161030c5761030c816103da817f42414c00000000000000000000000000000000000000000000000000000000006103dd565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600082601f830112610468578081fd5b813567ffffffffffffffff8082111561047f578283fd5b60208083026040518282820101818110858211171561049c578687fd5b6040528481529450818501925085820181870183018810156104bd57600080fd5b600091505b848210156104e05780358452928201926001919091019082016104c2565b505050505092915050565b600080604083850312156104fd578182fd5b823567ffffffffffffffff80821115610514578384fd5b61052086838701610458565b93506020850135915080821115610535578283fd5b5061054285828601610458565b9150509250929050565b6000806040838503121561055e578182fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156105a557835183529284019291840191600101610589565b50909695505050505050565b9081526020019056fea2646970667358221220a5949228ff8b645ec2aca50bc10186fbe28905bb5ad72d3998af79da3965ca3164736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51D7F8E7 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x51D7F8E7 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x74CD2C44 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8F26F906 EQ PUSH2 0xF9 JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x13C809D4 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x2659F004 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x4F547360 EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x85 CALLDATASIZE PUSH1 0x4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x10C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x56D JUMP JUMPDEST PUSH2 0xB3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x132 JUMP JUMPDEST PUSH2 0xB3 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x13E JUMP JUMPDEST PUSH2 0x8A PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x14A JUMP JUMPDEST PUSH2 0x8A PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x162 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12B DUP4 DUP4 PUSH2 0x16E JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12B DUP4 DUP4 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12B DUP4 DUP4 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x2C7 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x17D SWAP1 DUP3 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x1B8 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x197 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x310 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x180 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x1EC SWAP1 DUP3 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x227 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x206 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x21A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x35A JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x233 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1EF JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH2 0x255 SWAP1 DUP3 SWAP1 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7 JUMPI PUSH2 0x290 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x26F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x283 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C7 JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x29C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP4 DUP4 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x2EB DUP5 ISZERO DUP1 PUSH2 0x2E4 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2E1 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x3A7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x30C DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x3A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x3A7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 MUL PUSH2 0x351 DUP5 ISZERO DUP1 PUSH2 0x34A JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x347 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x5 PUSH2 0x3A7 JUMP JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2F6 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x3A7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 MUL PUSH2 0x391 DUP5 ISZERO DUP1 PUSH2 0x34A JUMPI POP PUSH8 0xDE0B6B3A7640000 DUP6 DUP4 DUP2 PUSH2 0x347 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x1 DUP4 SUB DIV ADD DUP2 ISZERO ISZERO MUL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x30C JUMPI PUSH2 0x30C DUP2 PUSH2 0x3DA DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x3DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x468 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x47F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP4 MUL PUSH1 0x40 MLOAD DUP3 DUP3 DUP3 ADD ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x49C JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE SWAP5 POP DUP2 DUP6 ADD SWAP3 POP DUP6 DUP3 ADD DUP2 DUP8 ADD DUP4 ADD DUP9 LT ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x4E0 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 DUP3 ADD PUSH2 0x4C2 JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FD JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x514 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x520 DUP7 DUP4 DUP8 ADD PUSH2 0x458 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x535 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x542 DUP6 DUP3 DUP7 ADD PUSH2 0x458 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x55E JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x589 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SWAP5 SWAP3 0x28 SELFDESTRUCT DUP12 PUSH5 0x5EC2ACA50B 0xC1 ADD DUP7 0xFB 0xE2 DUP10 SDIV 0xBB GAS 0xD7 0x2D CODECOPY SWAP9 0xAF PUSH26 0xDA3965CA3164736F6C6343000701003300000000000000000000 ","sourceMap":"788:1222:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:143;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:241;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1771:237::-;;;;;;:::i;:::-;;:::i;971:229::-;;;;;;:::i;:::-;;:::i;1614:151::-;;;;;;:::i;:::-;;:::i;1206:155::-;;;;;;:::i;:::-;;:::i;822:143::-;901:7;927:31;936:6;944:13;927:8;:31::i;:::-;920:38;822:143;-1:-1:-1;;;822:143:61:o;1367:241::-;1501:16;1533:44;1553:7;1562:14;1533:19;:44::i;:::-;-1:-1:-1;1594:7:61;;1367:241;-1:-1:-1;1367:241:61:o;1771:237::-;1903:16;1935:42;1953:7;1962:14;1935:17;:42::i;971:229::-;1099:16;1131:38;1145:7;1154:14;1131:13;:38::i;1614:151::-;1697:7;1723:35;1736:6;1744:13;1723:12;:35::i;1206:155::-;1291:7;1317:37;1332:6;1340:13;1317:14;:37::i;1428:468:24:-;1499:7;1852:41;1871:6;1879:13;1852:18;:41::i;3179:327::-;3295:14;;3359:21;;3315:66;;3295:14;;3315:35;:66::i;:::-;3393:9;3388:116;3412:6;3408:1;:10;3388:116;;;3448:49;3467:7;3475:1;3467:10;;;;;;;;;;;;;;3479:14;3494:1;3479:17;;;;;;;;;;;;;;3448:18;:49::i;:::-;3435:7;3443:1;3435:10;;;;;;;;;;;;;;;;;:62;3420:3;;3388:116;;;;3179:327;;;:::o;3659:323::-;3773:14;;3837:21;;3793:66;;3773:14;;3793:35;:66::i;:::-;3871:9;3866:114;3890:6;3886:1;:10;3866:114;;;3926:47;3943:7;3951:1;3943:10;;;;;;;;;;;;;;3955:14;3970:1;3955:17;;;;;;;;;;;;;;3926:16;:47::i;:::-;3913:7;3921:1;3913:10;;;;;;;;;;;;;;;;;:60;3898:3;;3866:114;;2703:321;2813:14;;2877:21;;2833:66;;2813:14;;2833:35;:66::i;:::-;2911:9;2906:116;2930:6;2926:1;:10;2906:116;;;2966:49;2985:7;2993:1;2985:10;;;;;;;;;;;;;;2997:14;3012:1;2997:17;;;;;;;;;;;;;;2966:18;:49::i;:::-;2953:7;2961:1;2953:10;;;;;;;;;;;;;;;;;:62;2938:3;;2906:116;;2405:139;2480:7;2502:39;2519:6;2527:13;2502:16;:39::i;2080:143::-;2157:7;2179:41;2198:6;2206:13;2179:18;:41::i;1833:209:30:-;1895:7;1932:5;;;1947:57;1956:6;;;:26;;;1981:1;1976;1966:7;:11;;;;;;:16;1956:26;5291:1:0;1947:8:30;:57::i;:::-;988:4;2022:7;:13;;;1833:209;-1:-1:-1;;;;1833:209:30:o;920:131:22:-;998:46;1012:1;1007;:6;5826:3:0;998:8:22;:46::i;:::-;920:131;;:::o;2768:282:30:-;2830:7;2849:38;2858:6;;;5340:1:0;2849:8:30;:38::i;:::-;988:4;2918:7;;2935:61;2944:6;;;:30;;;988:4;2966:1;2954:9;:13;;;;;;:20;2944:30;5388:1:0;2935:8:30;:61::i;:::-;3042:1;3030:9;:13;;;;3056:779;3116:14;3142:38;3151:6;;;5340:1:0;3142:8:30;:38::i;:::-;988:4;3211:7;;3228:61;3237:6;;;:30;;;988:4;3259:1;3247:9;:13;;;;3228:61;3816:1;3812;3808;3797:9;3793:17;3789:25;3785:33;3772:9;3765:17;3758:25;3754:65;3744:75;;3730:99;;;;;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14;23:707:-1;;140:3;133:4;125:6;121:17;117:27;107:2;;-1:-1;;148:12;107:2;195:6;182:20;4062:18;;4054:6;4051:30;4048:2;;;-1:-1;;4084:12;4048:2;4129:4;;4121:6;4117:17;3702:2;3696:9;4129:4;4117:17;3732:6;3728:17;;3839:6;3827:10;3824:22;4062:18;3791:10;3788:34;3785:62;3782:2;;;-1:-1;;3850:12;3782:2;3702;3869:22;325:21;;;208:89;-1:-1;382:14;;;;-1:-1;357:17;;;462:27;;;;;459:36;-1:-1;456:2;;;508:1;;498:12;456:2;533:1;524:10;;518:206;543:6;540:1;537:13;518:206;;;805:20;;611:50;;675:14;;;;565:1;558:9;;;;;703:14;;518:206;;;522:14;;;;;100:630;;;;:::o;875:638::-;;;1046:2;1034:9;1025:7;1021:23;1017:32;1014:2;;;-1:-1;;1052:12;1014:2;1110:17;1097:31;1148:18;;1140:6;1137:30;1134:2;;;-1:-1;;1170:12;1134:2;1200:78;1270:7;1261:6;1250:9;1246:22;1200:78;:::i;:::-;1190:88;;1343:2;1332:9;1328:18;1315:32;1301:46;;1148:18;1359:6;1356:30;1353:2;;;-1:-1;;1389:12;1353:2;;1419:78;1489:7;1480:6;1469:9;1465:22;1419:78;:::i;:::-;1409:88;;;1008:505;;;;;:::o;1520:366::-;;;1641:2;1629:9;1620:7;1616:23;1612:32;1609:2;;;-1:-1;;1647:12;1609:2;-1:-1;;805:20;;;1799:2;1838:22;;;805:20;;-1:-1;1603:283::o;3034:370::-;3211:2;3225:47;;;4475:12;;3196:18;;;4750:19;;;3034:370;;3211:2;4329:14;;;;4790;;;;3034:370;2514:260;2539:6;2536:1;2533:13;2514:260;;;2600:13;;2865:37;;4605:14;;;;2047;;;;2561:1;2554:9;2514:260;;;-1:-1;3278:116;;3182:222;-1:-1;;;;;;3182:222::o;3411:::-;2865:37;;;3538:2;3523:18;;3509:124::o"},"methodIdentifiers":{"downscaleDown(uint256,uint256)":"8f26f906","downscaleDownArray(uint256[],uint256[])":"2659f004","downscaleUp(uint256,uint256)":"74cd2c44","downscaleUpArray(uint256[],uint256[])":"4f547360","upscale(uint256,uint256)":"13c809d4","upscaleArray(uint256[],uint256[])":"51d7f8e7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scalingFactor\",\"type\":\"uint256\"}],\"name\":\"downscaleDown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scalingFactors\",\"type\":\"uint256[]\"}],\"name\":\"downscaleDownArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scalingFactor\",\"type\":\"uint256\"}],\"name\":\"downscaleUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scalingFactors\",\"type\":\"uint256[]\"}],\"name\":\"downscaleUpArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scalingFactor\",\"type\":\"uint256\"}],\"name\":\"upscale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scalingFactors\",\"type\":\"uint256[]\"}],\"name\":\"upscaleArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockScalingHelpers.sol\":\"MockScalingHelpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/helpers/InputHelpers.sol\":{\"keccak256\":\"0xb9f711fe78be500e514d52ab9d39319ab05019a82a70be8ca071d0c8a7e2cb4c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://33f606957103269b63c5892bb843ff17af87dfe9ecdb560c12ff0b9f29aaf3a9\",\"dweb:/ipfs/QmUS1HHLQHEnNVhbGidzwnfW7PLoQDv3oq85edWRXgEoeM\"]},\"contracts/helpers/ScalingHelpers.sol\":{\"keccak256\":\"0x8fc4fd4afe5e736aaceb593e63440c196487af3b30d41a36494163d032c2f532\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b328b8106a44c6829e941d5325fff518726d94908f6bdca16cacdd63b593d3fe\",\"dweb:/ipfs/QmNsEuJKKep5TpLzzt3VdMeuu3jLANQZtngynVfEUi2UQA\"]},\"contracts/math/FixedPoint.sol\":{\"keccak256\":\"0x596f4c9f0ac07a447dca74c20bffb5827dc2dc200b99181fc64d7ff6c89070a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7b625c6bfe363603bb9facfbe0e1198d5e7c369f713fdd1e729072ccdda0a5af\",\"dweb:/ipfs/QmcGpAUfw2EvJP4TEX6TUkXvfJynQaP4ntiL64cM5KrnbN\"]},\"contracts/math/LogExpMath.sol\":{\"keccak256\":\"0x1ef044eb991d5278b9edfe159e3cd4824733d5ed8e6a9de3f4f57d6bf65be94d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://168d31e5d2a92c9eeb0b50be5fb859d17746ad4ce0ee97552befce65dc6d726a\",\"dweb:/ipfs/QmQLyFUS1PTkkKUKKXU5Z7BoMPoQGdcvgpMUtJ6LaWMjrW\"]},\"contracts/math/Math.sol\":{\"keccak256\":\"0xfa4216e1e8089d1141ed73af197c4a390b6b4722c91821ad12dacd3cf81739f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f30785ec65a1a46181b4724398f39157ba11967327e770b29174b130d2dfe8f\",\"dweb:/ipfs/Qmem8qK7ExQnQ24Def6FEmLHcjC69JbvPXcnwdcosf7LNM\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/MockScalingHelpers.sol\":{\"keccak256\":\"0xaebadde43a218bdff2fad1e2e27b289345a44ed5fbe58a06a8153594bde96348\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://082851912c9b417bc437e1a0056252be5a364964cafd8a0959c22c9fd677d2e6\",\"dweb:/ipfs/QmdpQHFZdMbogMFysZVnKxKun8JwwB4UucE7ofpEsp5Se8\"]}},\"version\":1}"}},"contracts/test/MockSplitCodeFactory.sol":{"MockFactoryCreatedContract":{"abi":[{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516101073803806101078339818101604052602081101561003357600080fd5b505180610075576040805162461bcd60e51b815260206004820152600b60248201526a1393d397d6915493d7d25160aa1b604482015290519081900360640190fd5b6000556081806100866000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635d1ca63114602d575b600080fd5b60336045565b60408051918252519081900360200190f35b6000549056fea264697066735822122039c640e89d74edc74929d308943363266fb3e9eb1a13277838d1094530f61e7564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x107 CODESIZE SUB DUP1 PUSH2 0x107 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH2 0x75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1393D397D6915493D7D251 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x81 DUP1 PUSH2 0x86 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC6 BLOCKHASH 0xE8 SWAP14 PUSH21 0xEDC74929D308943363266FB3E9EB1A13277838D109 GASLIMIT ADDRESS 0xF6 0x1E PUSH22 0x64736F6C634300070100330000000000000000000000 ","sourceMap":"760:242:62:-:0;;;828:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:90:62;870:7;862:31;;;;;-1:-1:-1;862:31:62;;;;;;;;;;;;-1:-1:-1;862:31:62;;;;;;;;;;;;;;;903:3;:8;760:242;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c80635d1ca63114602d575b600080fd5b60336045565b60408051918252519081900360200190f35b6000549056fea264697066735822122039c640e89d74edc74929d308943363266fb3e9eb1a13277838d1094530f61e7564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC6 BLOCKHASH 0xE8 SWAP14 PUSH21 0xEDC74929D308943363266FB3E9EB1A13277838D109 GASLIMIT ADDRESS 0xF6 0x1E PUSH22 0x64736F6C634300070100330000000000000000000000 ","sourceMap":"760:242:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:76;;;:::i;:::-;;;;;;;;;;;;;;;;;964:7;990:3;924:76;:::o"},"methodIdentifiers":{"getId()":"5d1ca631"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockSplitCodeFactory.sol\":\"MockFactoryCreatedContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/BaseSplitCodeFactory.sol\":{\"keccak256\":\"0xd95018601e19e9d122ff571a041482d18852472fc1d11023a08020026c59cb83\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://620d69edbc679d988a6781fb24ad1065ed1a5244d2b596d6982b23ba047ed5b3\",\"dweb:/ipfs/QmXjEExnJkbxf2kpECjSPK9sHdFsmmWX7qdEiD8TsNCcy3\"]},\"contracts/helpers/CodeDeployer.sol\":{\"keccak256\":\"0x99d7503e23100e0d0aac1947942816b7e1a7e6bc8067a219a10f3ceb4f5edb7e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8b6bcea0432fcae4e1631deba44104bd8e21cd1cc5696f1b8f0ee8903302b115\",\"dweb:/ipfs/QmNvPKytQXvHpDVJsYSqhug515Hwp38EotY2oqcVMa5pJU\"]},\"contracts/test/MockSplitCodeFactory.sol\":{\"keccak256\":\"0x935994f78a1fe2d2a531ec5b9987bf4fa8f94555ed7021c1b321ee16ec518650\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ab35871c4119b365108a2f82a7125a506c8ef5baa4a6df4f8150d4fd00cc8d6\",\"dweb:/ipfs/Qmb91PhpDCKBavh6XLU8xTsGfagQpLaq5ung4VM5f9EWFG\"]}},\"version\":1}"},"MockSplitCodeFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"destination","type":"address"}],"name":"ContractCreated","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"create","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationCodeContracts","outputs":[{"internalType":"address","name":"contractA","type":"address"},{"internalType":"address","name":"contractB","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"61010060405234801561001157600080fd5b50604051610021602082016101c3565b601f1982820381018352601f90910116604052805160006002820460a081905280830360e081905281855290915083600061006782826100bb602090811b61024417901c565b60601b6001600160601b0319166080525082850180518382526001919061009982846100bb602090811b61024417901c565b60601b6001600160601b03191660c052959092525092909252506101d0915050565b600080826100e9577f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe61010b565b7f60fe600053602038038060206001396001016000f3fefefefefefefefefefefe5b9050835181855260208101856000f090855291506101366001600160a01b03831615156101ac61013d565b5092915050565b8161014b5761014b8161014f565b5050565b61015f816210905360ea1b610162565b50565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b6101078061077583390190565b60805160601c60a05160c05160601c60e051610560610215600039806102db5250806101a152806103575250806102fc525080610180528061033352506105606000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062c194db14610045578063174481fa146100c2578063634bc7db14610113575b600080fd5b61004d61015f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561008757818101518382015260200161006f565b50505050905090810190601f1680156100b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ca61017e565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6101366004803603604081101561012957600080fd5b50803590602001356101c4565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6060610179604051806020016040528060008152506102d3565b905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000009091565b6000806101f08460405160200180828152602001915050604051602081830303815290604052846103ac565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312919081900360200190a19392505050565b60008082610272577f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe610294565b7f60fe600053602038038060206001396001016000f3fefefefefefefefefefefe5b9050835181855260208101856000f090855291506102cc73ffffffffffffffffffffffffffffffffffffffff831615156101ac6103f6565b5092915050565b8051604080517f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000818101858101848101602090810190965280855293957f00000000000000000000000000000000000000000000000000000000000000009592947f000000000000000000000000000000000000000000000000000000000000000094938801866000828a3c846001888301883c506020898101908985010161039e818386610408565b505050505050505050919050565b600060606103b9846102d3565b90506000838251602084016000f5905073ffffffffffffffffffffffffffffffffffffffff81166103ee573d6000803e3d6000fd5b949350505050565b816104045761040481610482565b5050565b5b602081106104465781518352602092830192909101907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001610409565b905182516020929092036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169116179052565b6104ac817f42414c00000000000000000000000000000000000000000000000000000000006104af565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220127b6350b6f2e1ce14e6e2006c62f2c4b625d2e434b4549cea72e4b2187d72a264736f6c63430007010033608060405234801561001057600080fd5b506040516101073803806101078339818101604052602081101561003357600080fd5b505180610075576040805162461bcd60e51b815260206004820152600b60248201526a1393d397d6915493d7d25160aa1b604482015290519081900360640190fd5b6000556081806100866000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635d1ca63114602d575b600080fd5b60336045565b60408051918252519081900360200190f35b6000549056fea264697066735822122039c640e89d74edc74929d308943363266fb3e9eb1a13277838d1094530f61e7564736f6c63430007010033","opcodes":"PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x21 PUSH1 0x20 DUP3 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 MSTORE DUP1 MLOAD PUSH1 0x0 PUSH1 0x2 DUP3 DIV PUSH1 0xA0 DUP2 SWAP1 MSTORE DUP1 DUP4 SUB PUSH1 0xE0 DUP2 SWAP1 MSTORE DUP2 DUP6 MSTORE SWAP1 SWAP2 POP DUP4 PUSH1 0x0 PUSH2 0x67 DUP3 DUP3 PUSH2 0xBB PUSH1 0x20 SWAP1 DUP2 SHL PUSH2 0x244 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE POP DUP3 DUP6 ADD DUP1 MLOAD DUP4 DUP3 MSTORE PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x99 DUP3 DUP5 PUSH2 0xBB PUSH1 0x20 SWAP1 DUP2 SHL PUSH2 0x244 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xC0 MSTORE SWAP6 SWAP1 SWAP3 MSTORE POP SWAP3 SWAP1 SWAP3 MSTORE POP PUSH2 0x1D0 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0xE9 JUMPI PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE PUSH2 0x10B JUMP JUMPDEST PUSH32 0x60FE600053602038038060206001396001016000F3FEFEFEFEFEFEFEFEFEFEFE JUMPDEST SWAP1 POP DUP4 MLOAD DUP2 DUP6 MSTORE PUSH1 0x20 DUP2 ADD DUP6 PUSH1 0x0 CREATE SWAP1 DUP6 MSTORE SWAP2 POP PUSH2 0x136 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x13D JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x14B JUMPI PUSH2 0x14B DUP2 PUSH2 0x14F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x15F DUP2 PUSH3 0x109053 PUSH1 0xEA SHL PUSH2 0x162 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x107 DUP1 PUSH2 0x775 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x560 PUSH2 0x215 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x2DB MSTORE POP DUP1 PUSH2 0x1A1 MSTORE DUP1 PUSH2 0x357 MSTORE POP DUP1 PUSH2 0x2FC MSTORE POP DUP1 PUSH2 0x180 MSTORE DUP1 PUSH2 0x333 MSTORE POP PUSH2 0x560 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xC194DB EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x174481FA EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x634BC7DB EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x87 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x179 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2D3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xCF78CF0D6F3D8371E1075C69C492AB4EC5D8CF23A1A239B6A51A1D00BE7CA312 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x272 JUMPI PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE PUSH2 0x294 JUMP JUMPDEST PUSH32 0x60FE600053602038038060206001396001016000F3FEFEFEFEFEFEFEFEFEFEFE JUMPDEST SWAP1 POP DUP4 MLOAD DUP2 DUP6 MSTORE PUSH1 0x20 DUP2 ADD DUP6 PUSH1 0x0 CREATE SWAP1 DUP6 MSTORE SWAP2 POP PUSH2 0x2CC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x3F6 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH32 0x0 DUP2 DUP2 ADD DUP6 DUP2 ADD DUP5 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE SWAP4 SWAP6 PUSH32 0x0 SWAP6 SWAP3 SWAP5 PUSH32 0x0 SWAP5 SWAP4 DUP9 ADD DUP7 PUSH1 0x0 DUP3 DUP11 EXTCODECOPY DUP5 PUSH1 0x1 DUP9 DUP4 ADD DUP9 EXTCODECOPY POP PUSH1 0x20 DUP10 DUP2 ADD SWAP1 DUP10 DUP6 ADD ADD PUSH2 0x39E DUP2 DUP4 DUP7 PUSH2 0x408 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x3B9 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x404 JUMPI PUSH2 0x404 DUP2 PUSH2 0x482 JUMP JUMPDEST POP POP JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x446 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD PUSH2 0x409 JUMP JUMPDEST SWAP1 MLOAD DUP3 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 SUB PUSH2 0x100 EXP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 NOT SWAP1 SWAP2 AND SWAP2 AND OR SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x4AC DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x4AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH28 0x6350B6F2E1CE14E6E2006C62F2C4B625D2E434B4549CEA72E4B2187D PUSH19 0xA264736F6C6343000701003360806040523480 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x107 CODESIZE SUB DUP1 PUSH2 0x107 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 PUSH2 0x75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1393D397D6915493D7D251 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE PUSH1 0x81 DUP1 PUSH2 0x86 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D1CA631 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC6 BLOCKHASH 0xE8 SWAP14 PUSH21 0xEDC74929D308943363266FB3E9EB1A13277838D109 GASLIMIT ADDRESS 0xF6 0x1E PUSH22 0x64736F6C634300070100330000000000000000000000 ","sourceMap":"1004:472:62:-:0;;;1113:146;;;;;;;;;-1:-1:-1;1148:45:62;;;;;;;:::i;:::-;-1:-1:-1;;1148:45:62;;;;;;;;;;;;;;1942:19:17;;1915:24;2336:1;1942:19;2317:20;2347:38;;;;2424:36;;;2470:38;;;;3172:40;;;2317:20;;-1:-1:-1;3172:40:17;2396:25;3631:52;3172:40;2396:25;3631:19;;;;;;;:52;;:::i;:::-;3606:77;;-1:-1:-1;;;;;;3606:77:17;;;-1:-1:-1;4222:36:17;;;4284:20;;4317:40;;;4867:4;;4222:36;4906:52;4222:36;4867:4;4906:19;;;;;;;:52;;:::i;:::-;4881:77;;-1:-1:-1;;;;;;4881:77:17;;;5113:39;;;;-1:-1:-1;5165:32:17;;;;-1:-1:-1;1004:472:62;;-1:-1:-1;;1004:472:62;4838:1444:18;4914:19;4945:28;4976:16;:78;;2515:66;4976:78;;;4371:66;4976:78;4945:109;;5417:4;5411:11;5657:20;5651:4;5644:34;5947:2;5935:10;5931:19;5925:4;5922:1;5915:36;6051:24;;;5900:51;-1:-1:-1;6209:66:18;-1:-1:-1;;;;;6218:25:18;;;;11974:3:0;6209:8:18;:66::i;:::-;4838:1444;;;;;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;1506:28;1514:9;-1:-1:-1;;;1506:7:0;:28::i;:::-;1459:126;:::o;1692:3378::-;-1:-1:-1;;;1754:18:0;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14;1004:472:62;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"1510":[{"length":32,"start":384},{"length":32,"start":819}],"1512":[{"length":32,"start":764}],"1514":[{"length":32,"start":417},{"length":32,"start":855}],"1516":[{"length":32,"start":731}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100405760003560e01c8062c194db14610045578063174481fa146100c2578063634bc7db14610113575b600080fd5b61004d61015f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561008757818101518382015260200161006f565b50505050905090810190601f1680156100b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ca61017e565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6101366004803603604081101561012957600080fd5b50803590602001356101c4565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6060610179604051806020016040528060008152506102d3565b905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000009091565b6000806101f08460405160200180828152602001915050604051602081830303815290604052846103ac565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312919081900360200190a19392505050565b60008082610272577f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe610294565b7f60fe600053602038038060206001396001016000f3fefefefefefefefefefefe5b9050835181855260208101856000f090855291506102cc73ffffffffffffffffffffffffffffffffffffffff831615156101ac6103f6565b5092915050565b8051604080517f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000818101858101848101602090810190965280855293957f00000000000000000000000000000000000000000000000000000000000000009592947f000000000000000000000000000000000000000000000000000000000000000094938801866000828a3c846001888301883c506020898101908985010161039e818386610408565b505050505050505050919050565b600060606103b9846102d3565b90506000838251602084016000f5905073ffffffffffffffffffffffffffffffffffffffff81166103ee573d6000803e3d6000fd5b949350505050565b816104045761040481610482565b5050565b5b602081106104465781518352602092830192909101907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001610409565b905182516020929092036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169116179052565b6104ac817f42414c00000000000000000000000000000000000000000000000000000000006104af565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220127b6350b6f2e1ce14e6e2006c62f2c4b625d2e434b4549cea72e4b2187d72a264736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xC194DB EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x174481FA EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x634BC7DB EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x87 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x179 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2D3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1F0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP5 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xCF78CF0D6F3D8371E1075C69C492AB4EC5D8CF23A1A239B6A51A1D00BE7CA312 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x272 JUMPI PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE PUSH2 0x294 JUMP JUMPDEST PUSH32 0x60FE600053602038038060206001396001016000F3FEFEFEFEFEFEFEFEFEFEFE JUMPDEST SWAP1 POP DUP4 MLOAD DUP2 DUP6 MSTORE PUSH1 0x20 DUP2 ADD DUP6 PUSH1 0x0 CREATE SWAP1 DUP6 MSTORE SWAP2 POP PUSH2 0x2CC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x3F6 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH32 0x0 DUP2 DUP2 ADD DUP6 DUP2 ADD DUP5 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE SWAP4 SWAP6 PUSH32 0x0 SWAP6 SWAP3 SWAP5 PUSH32 0x0 SWAP5 SWAP4 DUP9 ADD DUP7 PUSH1 0x0 DUP3 DUP11 EXTCODECOPY DUP5 PUSH1 0x1 DUP9 DUP4 ADD DUP9 EXTCODECOPY POP PUSH1 0x20 DUP10 DUP2 ADD SWAP1 DUP10 DUP6 ADD ADD PUSH2 0x39E DUP2 DUP4 DUP7 PUSH2 0x408 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x3B9 DUP5 PUSH2 0x2D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x404 JUMPI PUSH2 0x404 DUP2 PUSH2 0x482 JUMP JUMPDEST POP POP JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x446 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD PUSH2 0x409 JUMP JUMPDEST SWAP1 MLOAD DUP3 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 SUB PUSH2 0x100 EXP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 NOT SWAP1 SWAP2 AND SWAP2 AND OR SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x4AC DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x4AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH28 0x6350B6F2E1CE14E6E2006C62F2C4B625D2E434B4549CEA72E4B2187D PUSH19 0xA264736F6C6343000701003300000000000000 ","sourceMap":"1004:472:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5612:114:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5347:167;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:209:62;;;;;;;;;;;;;;;;-1:-1:-1;1265:209:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5612:114:17;5660:12;5691:28;;;;;;;;;;;;;:24;:28::i;:::-;5684:35;;5612:114;:::o;5347:167::-;5460:22;5484;5347:167;;:::o;1265:209:62:-;1325:7;1344:19;1366:29;1385:2;1374:14;;;;;;;;;;;;;;;;;;;;;;;;;1390:4;1366:7;:29::i;:::-;1410:28;;;;;;;;;;1344:51;;-1:-1:-1;1410:28:62;;;;;;;;;;1456:11;1265:209;-1:-1:-1;;;1265:209:62:o;4838:1444:18:-;4914:19;4945:28;4976:16;:78;;2515:66;4976:78;;;4371:66;4976:78;4945:109;;5417:4;5411:11;5657:20;5651:4;5644:34;5947:2;5935:10;5931:19;5925:4;5922:1;5915:36;6051:24;;;5900:51;-1:-1:-1;6209:66:18;6218:25;;;;;11974:3:0;6209:8:18;:66::i;:::-;4838:1444;;;;;:::o;5856:2777:17:-;7117:22;;7491:4;7485:11;;6984:18;6864;7040:37;;;7169:38;;;7522:28;;;7546:2;7522:28;;;7509:42;;;7644:22;;;7485:11;;6804:22;;6864:18;;6924:22;;6984:18;7770:13;;6864:18;6772:29;7770:13;6804:22;7796:67;8034:17;8031:1;8011:17;8000:9;7996:33;7973:21;7961:91;-1:-1:-1;8444:2:17;8423:24;;;;8490:36;;;;8546:80;8490:36;8423:24;8606:19;8546:7;:80::i;:::-;5856:2777;;;;;;;;;;;;:::o;8874:651::-;8961:7;8980:25;9008:41;9033:15;9008:24;:41::i;:::-;8980:69;;9060:19;9182:4;9167:12;9161:19;9156:2;9142:12;9138:21;9135:1;9127:60;9112:75;-1:-1:-1;9211:25:17;;;9207:283;;9405:16;9402:1;;9384:38;9449:16;9402:1;9439:27;9366:114;9507:11;8874:651;-1:-1:-1;;;;8874:651:17:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;9661:590:17:-;9821:165;9835:2;9828:3;:9;9821:165;;9904:10;;9891:24;;9950:2;9942:10;;;;9966:9;;;;9839;;9821:165;;;10114:10;;10169:11;;10049:2;:8;;;;10043:3;:15;:19;;10126:9;;10110:26;;;10165:22;;10213:21;10200:35;;10081:164::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"create(bytes32,bytes32)":"634bc7db","getCreationCode()":"00c194db","getCreationCodeContracts()":"174481fa"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCodeContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractB\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCreationCode()\":{\"details\":\"Returns the creation code of the contract this factory creates.\"},\"getCreationCodeContracts()\":{\"details\":\"Returns the two addresses where the creation code of the contract crated by this factory is stored.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockSplitCodeFactory.sol\":\"MockSplitCodeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/BaseSplitCodeFactory.sol\":{\"keccak256\":\"0xd95018601e19e9d122ff571a041482d18852472fc1d11023a08020026c59cb83\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://620d69edbc679d988a6781fb24ad1065ed1a5244d2b596d6982b23ba047ed5b3\",\"dweb:/ipfs/QmXjEExnJkbxf2kpECjSPK9sHdFsmmWX7qdEiD8TsNCcy3\"]},\"contracts/helpers/CodeDeployer.sol\":{\"keccak256\":\"0x99d7503e23100e0d0aac1947942816b7e1a7e6bc8067a219a10f3ceb4f5edb7e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8b6bcea0432fcae4e1631deba44104bd8e21cd1cc5696f1b8f0ee8903302b115\",\"dweb:/ipfs/QmNvPKytQXvHpDVJsYSqhug515Hwp38EotY2oqcVMa5pJU\"]},\"contracts/test/MockSplitCodeFactory.sol\":{\"keccak256\":\"0x935994f78a1fe2d2a531ec5b9987bf4fa8f94555ed7021c1b321ee16ec518650\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ab35871c4119b365108a2f82a7125a506c8ef5baa4a6df4f8150d4fd00cc8d6\",\"dweb:/ipfs/Qmb91PhpDCKBavh6XLU8xTsGfagQpLaq5ung4VM5f9EWFG\"]}},\"version\":1}"}},"contracts/test/MockWordCodec.sol":{"MockWordCodec":{"abi":[{"inputs":[{"internalType":"bytes32","name":"word","type":"bytes32"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"clearWordAtPosition","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"decodeInt","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"decodeUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"encodeInt","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"encodeUint","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"word","type":"bytes32"},{"internalType":"int256","name":"value","type":"int256"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"insertInt","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"word","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"insertUint","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"oldPoolState","type":"bytes32"},{"internalType":"bytes32","name":"newPoolState","type":"bytes32"},{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"bitLength","type":"uint256"}],"name":"isOtherStateUnchanged","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b5061052e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634efc6d6f1161005b5780634efc6d6f146101495780639223250a14610172578063a427ee1e1461019b578063ab2d3f47146101ca57610088565b80631bbdab7f1461008d5780632393cb9e146100c857806337b1cd81146100f15780634cf60a711461011a575b600080fd5b6100b6600480360360608110156100a357600080fd5b508035906020810135906040013561020d565b60408051918252519081900360200190f35b6100b6600480360360608110156100de57600080fd5b5080359060208101359060400135610222565b6100b66004803603606081101561010757600080fd5b508035906020810135906040013561022f565b6100b66004803603608081101561013057600080fd5b508035906020810135906040810135906060013561023c565b6100b66004803603606081101561015f57600080fd5b5080359060208101359060400135610253565b6100b66004803603606081101561018857600080fd5b5080359060208101359060400135610260565b6100b6600480360360808110156101b157600080fd5b508035906020810135906040810135906060013561026d565b6101f9600480360360808110156101e057600080fd5b508035906020810135906040810135906060013561027b565b604080519115158252519081900360200190f35b600061021a848484610289565b949350505050565b600061021a848484610298565b600061021a8484846102bb565b600061024a858585856102da565b95945050505050565b600061021a8484846102fd565b600061021a84848461030c565b600061024a8585858561031f565b600061024a85858585610347565b6001901b6000190191901c1690565b600160001980830182901b81019490931c911b9091019081169182119019021790565b60006102c8848484610372565b506001901b6000190191909116901b90565b60006102e78484846103ee565b506001901b60001901811b1992909216911b1790565b6001901b60001901901b191690565b60006103198484846103ee565b50501b90565b600061032c848484610372565b50600019600190911b01918216811b91901b19919091161790565b6000806103558685856102fd565b905060006103648686866102fd565b919091149695505050505050565b61038161010083106064610426565b6103aa600182101580156103a3575061039f60ff8461010003610438565b8211155b6064610426565b600083126103cb576103c6600019820184901d156101b4610426565b6103e9565b6103e9600182036103de85600101610444565b901c156101b4610426565b505050565b6103fd61010083106064610426565b61041b600182101580156103a3575061039f60ff8461010003610438565b6103e983821c156101b45b816104345761043481610450565b5050565b80820390821102900390565b60ff81901d9081180390565b61047a817f42414c000000000000000000000000000000000000000000000000000000000061047d565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220d83882eca54ab0e8de4b45764380a8a21de43b4fd37e8e4fc0694603ad22ac6c64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EFC6D6F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4EFC6D6F EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x9223250A EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA427EE1E EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xAB2D3F47 EQ PUSH2 0x1CA JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1BBDAB7F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2393CB9E EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x37B1CD81 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4CF60A71 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x222 JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x22F JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x23C JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x253 JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x260 JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP6 DUP6 DUP6 DUP6 PUSH2 0x2DA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP6 DUP6 DUP6 DUP6 PUSH2 0x31F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP6 DUP6 DUP6 DUP6 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD SWAP2 SWAP1 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 NOT DUP1 DUP4 ADD DUP3 SWAP1 SHL DUP2 ADD SWAP5 SWAP1 SWAP4 SHR SWAP2 SHL SWAP1 SWAP2 ADD SWAP1 DUP2 AND SWAP2 DUP3 GT SWAP1 NOT MUL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 DUP5 DUP5 DUP5 PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E7 DUP5 DUP5 DUP5 PUSH2 0x3EE JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD SWAP1 SHL NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 DUP5 DUP5 DUP5 PUSH2 0x3EE JUMP JUMPDEST POP POP SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C DUP5 DUP5 DUP5 PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x1 SWAP1 SWAP2 SHL ADD SWAP2 DUP3 AND DUP2 SHL SWAP2 SWAP1 SHL NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x355 DUP7 DUP6 DUP6 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x364 DUP7 DUP7 DUP7 PUSH2 0x2FD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x381 PUSH2 0x100 DUP4 LT PUSH1 0x64 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x3AA PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI POP PUSH2 0x39F PUSH1 0xFF DUP5 PUSH2 0x100 SUB PUSH2 0x438 JUMP JUMPDEST DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 DUP4 SLT PUSH2 0x3CB JUMPI PUSH2 0x3C6 PUSH1 0x0 NOT DUP3 ADD DUP5 SWAP1 SAR ISZERO PUSH2 0x1B4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x3E9 PUSH1 0x1 DUP3 SUB PUSH2 0x3DE DUP6 PUSH1 0x1 ADD PUSH2 0x444 JUMP JUMPDEST SWAP1 SHR ISZERO PUSH2 0x1B4 PUSH2 0x426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x100 DUP4 LT PUSH1 0x64 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x41B PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI POP PUSH2 0x39F PUSH1 0xFF DUP5 PUSH2 0x100 SUB PUSH2 0x438 JUMP JUMPDEST PUSH2 0x3E9 DUP4 DUP3 SHR ISZERO PUSH2 0x1B4 JUMPDEST DUP2 PUSH2 0x434 JUMPI PUSH2 0x434 DUP2 PUSH2 0x450 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 DUP3 SUB SWAP1 DUP3 GT MUL SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 SWAP1 SAR SWAP1 DUP2 XOR SUB SWAP1 JUMP JUMPDEST PUSH2 0x47A DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x47D JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 CODESIZE DUP3 0xEC 0xA5 0x4A 0xB0 0xE8 0xDE 0x4B GASLIMIT PUSH23 0x4380A8A21DE43B4FD37E8E4FC0694603AD22AC6C64736F PUSH13 0x63430007010033000000000000 ","sourceMap":"791:1843:63:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80634efc6d6f1161005b5780634efc6d6f146101495780639223250a14610172578063a427ee1e1461019b578063ab2d3f47146101ca57610088565b80631bbdab7f1461008d5780632393cb9e146100c857806337b1cd81146100f15780634cf60a711461011a575b600080fd5b6100b6600480360360608110156100a357600080fd5b508035906020810135906040013561020d565b60408051918252519081900360200190f35b6100b6600480360360608110156100de57600080fd5b5080359060208101359060400135610222565b6100b66004803603606081101561010757600080fd5b508035906020810135906040013561022f565b6100b66004803603608081101561013057600080fd5b508035906020810135906040810135906060013561023c565b6100b66004803603606081101561015f57600080fd5b5080359060208101359060400135610253565b6100b66004803603606081101561018857600080fd5b5080359060208101359060400135610260565b6100b6600480360360808110156101b157600080fd5b508035906020810135906040810135906060013561026d565b6101f9600480360360808110156101e057600080fd5b508035906020810135906040810135906060013561027b565b604080519115158252519081900360200190f35b600061021a848484610289565b949350505050565b600061021a848484610298565b600061021a8484846102bb565b600061024a858585856102da565b95945050505050565b600061021a8484846102fd565b600061021a84848461030c565b600061024a8585858561031f565b600061024a85858585610347565b6001901b6000190191901c1690565b600160001980830182901b81019490931c911b9091019081169182119019021790565b60006102c8848484610372565b506001901b6000190191909116901b90565b60006102e78484846103ee565b506001901b60001901811b1992909216911b1790565b6001901b60001901901b191690565b60006103198484846103ee565b50501b90565b600061032c848484610372565b50600019600190911b01918216811b91901b19919091161790565b6000806103558685856102fd565b905060006103648686866102fd565b919091149695505050505050565b61038161010083106064610426565b6103aa600182101580156103a3575061039f60ff8461010003610438565b8211155b6064610426565b600083126103cb576103c6600019820184901d156101b4610426565b6103e9565b6103e9600182036103de85600101610444565b901c156101b4610426565b505050565b6103fd61010083106064610426565b61041b600182101580156103a3575061039f60ff8461010003610438565b6103e983821c156101b45b816104345761043481610450565b5050565b80820390821102900390565b60ff81901d9081180390565b61047a817f42414c000000000000000000000000000000000000000000000000000000000061047d565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea2646970667358221220d83882eca54ab0e8de4b45764380a8a21de43b4fd37e8e4fc0694603ad22ac6c64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EFC6D6F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4EFC6D6F EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x9223250A EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA427EE1E EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xAB2D3F47 EQ PUSH2 0x1CA JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1BBDAB7F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2393CB9E EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x37B1CD81 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4CF60A71 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x20D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x222 JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x22F JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x23C JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x253 JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x260 JUMP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP6 DUP6 DUP6 DUP6 PUSH2 0x2DA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A DUP5 DUP5 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP6 DUP6 DUP6 DUP6 PUSH2 0x31F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP6 DUP6 DUP6 DUP6 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD SWAP2 SWAP1 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 NOT DUP1 DUP4 ADD DUP3 SWAP1 SHL DUP2 ADD SWAP5 SWAP1 SWAP4 SHR SWAP2 SHL SWAP1 SWAP2 ADD SWAP1 DUP2 AND SWAP2 DUP3 GT SWAP1 NOT MUL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8 DUP5 DUP5 DUP5 PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD SWAP2 SWAP1 SWAP2 AND SWAP1 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E7 DUP5 DUP5 DUP5 PUSH2 0x3EE JUMP JUMPDEST POP PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SHL PUSH1 0x0 NOT ADD SWAP1 SHL NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 DUP5 DUP5 DUP5 PUSH2 0x3EE JUMP JUMPDEST POP POP SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C DUP5 DUP5 DUP5 PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x1 SWAP1 SWAP2 SHL ADD SWAP2 DUP3 AND DUP2 SHL SWAP2 SWAP1 SHL NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x355 DUP7 DUP6 DUP6 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x364 DUP7 DUP7 DUP7 PUSH2 0x2FD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x381 PUSH2 0x100 DUP4 LT PUSH1 0x64 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x3AA PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI POP PUSH2 0x39F PUSH1 0xFF DUP5 PUSH2 0x100 SUB PUSH2 0x438 JUMP JUMPDEST DUP3 GT ISZERO JUMPDEST PUSH1 0x64 PUSH2 0x426 JUMP JUMPDEST PUSH1 0x0 DUP4 SLT PUSH2 0x3CB JUMPI PUSH2 0x3C6 PUSH1 0x0 NOT DUP3 ADD DUP5 SWAP1 SAR ISZERO PUSH2 0x1B4 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x3E9 PUSH1 0x1 DUP3 SUB PUSH2 0x3DE DUP6 PUSH1 0x1 ADD PUSH2 0x444 JUMP JUMPDEST SWAP1 SHR ISZERO PUSH2 0x1B4 PUSH2 0x426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x100 DUP4 LT PUSH1 0x64 PUSH2 0x426 JUMP JUMPDEST PUSH2 0x41B PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x3A3 JUMPI POP PUSH2 0x39F PUSH1 0xFF DUP5 PUSH2 0x100 SUB PUSH2 0x438 JUMP JUMPDEST PUSH2 0x3E9 DUP4 DUP3 SHR ISZERO PUSH2 0x1B4 JUMPDEST DUP2 PUSH2 0x434 JUMPI PUSH2 0x434 DUP2 PUSH2 0x450 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 DUP3 SUB SWAP1 DUP3 GT MUL SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP2 SWAP1 SAR SWAP1 DUP2 XOR SUB SWAP1 JUMP JUMPDEST PUSH2 0x47A DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x47D JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 CODESIZE DUP3 0xEC 0xA5 0x4A 0xB0 0xE8 0xDE 0x4B GASLIMIT PUSH23 0x4380A8A21DE43B4FD37E8E4FC0694603AD22AC6C64736F PUSH13 0x63430007010033000000000000 ","sourceMap":"791:1843:63:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1702:202;;;;;;;;;;;;;;;;-1:-1:-1;1702:202:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1910:199;;;;;;;;;;;;;;;;-1:-1:-1;1910:199:63;;;;;;;;;;;;:::i;1497:::-;;;;;;;;;;;;;;;;-1:-1:-1;1497:199:63;;;;;;;;;;;;:::i;820:230::-;;;;;;;;;;;;;;;;-1:-1:-1;820:230:63;;;;;;;;;;;;;;;;;:::i;2115:225::-;;;;;;;;;;;;;;;;-1:-1:-1;2115:225:63;;;;;;;;;;;;:::i;1289:202::-;;;;;;;;;;;;;;;;-1:-1:-1;1289:202:63;;;;;;;;;;;;:::i;1056:227::-;;;;;;;;;;;;;;;;-1:-1:-1;1056:227:63;;;;;;;;;;;;;;;;;:::i;2346:286::-;;;;;;;;;;;;;;;;-1:-1:-1;2346:286:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1702:202;1825:7;1851:46;1872:5;1879:6;1887:9;1851:20;:46::i;:::-;1844:53;1702:202;-1:-1:-1;;;;1702:202:63:o;1910:199::-;2032:6;2057:45;2077:5;2084:6;2092:9;2057:19;:45::i;1497:199::-;1618:7;1644:45;1664:5;1671:6;1679:9;1644:19;:45::i;820:230::-;965:7;991:52;1012:4;1018:5;1025:6;1033:9;991:20;:52::i;:::-;984:59;820:230;-1:-1:-1;;;;;820:230:63:o;2115:225::-;2246:7;2272:61;2309:4;2315:6;2323:9;2272:36;:61::i;1289:202::-;1412:7;1438:46;1459:5;1466:6;1474:9;1438:20;:46::i;1056:227::-;1199:7;1225:51;1245:4;1251:5;1258:6;1266:9;1225:19;:51::i;2346:286::-;2517:4;2540:85;2579:12;2593;2607:6;2615:9;2540:38;:85::i;5135:342:28:-;5458:1;5439:17;;-1:-1:-1;;5435:25:28;5416:17;;;5412:49;;5388:83::o;5614:779::-;5808:1;-1:-1:-1;;5790:13:28;;;5784:20;;;5783:26;;5896:14;;;;5836;;5835:20;;;5888:30;;;6340:17;;;6359:9;;6336:33;6333:44;;6309:78::o;4593:385::-;4714:7;4733:49;4757:5;4764:6;4772:9;4733:23;:49::i;:::-;-1:-1:-1;4827:1:28;4809:14;;-1:-1:-1;;4808:20:28;4938:21;;;;4937:33;;;4593:385::o;2555:640::-;2700:14;2726:49;2750:5;2757:6;2765:9;2726:23;:49::i;:::-;-1:-1:-1;3054:1:28;3035:17;;-1:-1:-1;;3031:25:28;3102:17;;3098:22;3088:33;;;;3160:18;;3144:35;;3005:184::o;744:270:29:-;940:1;922:14;;-1:-1:-1;;921:20:29;991:14;;989:17;973:33;;744:270::o;4171:240:28:-;4294:7;4313:49;4337:5;4344:6;4352:9;4313:23;:49::i;:::-;-1:-1:-1;;4388:15:28;;4171:240::o;3423:495::-;3566:7;3585:49;3609:5;3616:6;3624:9;3585:23;:49::i;:::-;-1:-1:-1;;;3679:1:28;3661:14;;;3660:20;3878:21;;;3877:33;;3738:14;;;3736:17;3720:33;;;;3855:56;;3423:495::o;1020:412:29:-;1191:4;1207:23;1233:52;1253:12;1267:6;1275:9;1233:19;:52::i;:::-;1207:78;;1295:23;1321:52;1341:12;1355:6;1363:9;1321:19;:52::i;:::-;1391:34;;;;;1020:412;-1:-1:-1;;;;;;1020:412:29:o;8560:1113:28:-;8695:44;8713:3;8704:6;:12;5662:3:0;8695:8:28;:44::i;:::-;8904:90;8926:1;8913:9;:14;;:58;;;;;8944:27;8953:3;8964:6;8958:3;:12;8944:8;:27::i;:::-;8931:9;:40;;8913:58;5662:3:0;8904:8:28;:90::i;:::-;9084:1;9075:5;:10;9071:596;;9262:62;-1:-1:-1;;9281:13:28;;9271:24;;;:29;12436:3:0;9262:8:28;:62::i;:::-;9071:596;;;9580:76;9625:1;9613:9;:13;9589:19;9598:5;9606:1;9598:9;9589:8;:19::i;:::-;:38;;:43;12436:3:0;9580:8:28;:76::i;:::-;8560:1113;;;:::o;7947:607::-;8083:44;8101:3;8092:6;:12;5662:3:0;8083:8:28;:44::i;:::-;8292:90;8314:1;8301:9;:14;;:58;;;;;8332:27;8341:3;8352:6;8346:3;:12;8332:8;:27::i;8292:90::-;8491:56;8500:18;;;:23;12436:3:0;926:101;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;2233:217:32:-;2413:9;;;2424:8;;;2409:24;2402:32;;;2378:66::o;428:250::-;615:3;611:11;;;649:9;;;645:17;;588:84::o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"clearWordAtPosition(bytes32,uint256,uint256)":"4efc6d6f","decodeInt(bytes32,uint256,uint256)":"2393cb9e","decodeUint(bytes32,uint256,uint256)":"1bbdab7f","encodeInt(int256,uint256,uint256)":"37b1cd81","encodeUint(uint256,uint256,uint256)":"9223250a","insertInt(bytes32,int256,uint256,uint256)":"a427ee1e","insertUint(bytes32,uint256,uint256,uint256)":"4cf60a71","isOtherStateUnchanged(bytes32,bytes32,uint256,uint256)":"ab2d3f47"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"word\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"clearWordAtPosition\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"decodeInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"decodeUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"encodeInt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"encodeUint\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"word\",\"type\":\"bytes32\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"insertInt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"word\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"insertUint\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"oldPoolState\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newPoolState\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bitLength\",\"type\":\"uint256\"}],\"name\":\"isOtherStateUnchanged\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockWordCodec.sol\":\"MockWordCodec\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/helpers/WordCodec.sol\":{\"keccak256\":\"0x815cb69dc384b4ee082f87c06efd93c4ac702a5f704152770e2b30010f3527f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e5d48f84ec5d21673324ef9e84cb70bb9ce4264cb6678b9200a80a8929f57651\",\"dweb:/ipfs/QmT7cTTCAxU5pVFL1zxFVJF4FNhsTy2eFvu5oFF6eJTxdA\"]},\"contracts/helpers/WordCodecHelpers.sol\":{\"keccak256\":\"0xd8529d7a5e1a3ee90a8847df408e88e60a7b0f7a75737f6053f8ee7be34e2cee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f61c347b302516c238c44357a328f1af874efb65504e6bd2d4bff8726cc9cb75\",\"dweb:/ipfs/QmWjgKE5eNFHkP5VVrd9wQUkaaXP5gUsu7dBYT2EfyxYuF\"]},\"contracts/math/Math.sol\":{\"keccak256\":\"0xfa4216e1e8089d1141ed73af197c4a390b6b4722c91821ad12dacd3cf81739f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f30785ec65a1a46181b4724398f39157ba11967327e770b29174b130d2dfe8f\",\"dweb:/ipfs/Qmem8qK7ExQnQ24Def6FEmLHcjC69JbvPXcnwdcosf7LNM\"]},\"contracts/test/MockWordCodec.sol\":{\"keccak256\":\"0xf54ae4023199bfe577be439800bcd26994f33abd66efec1a20bd402279393f91\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d32b58a2b4eef5bcbace55bef211295eb5be2b049b1f6155250981fb3f69a3cc\",\"dweb:/ipfs/QmVsgtpfwAaYBKds6g6t3dn9ee3c5vGof8aCN3vb98GE3z\"]}},\"version\":1}"}},"contracts/test/OptionalOnlyCallerMock.sol":{"OptionalOnlyCallerMock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[],"name":"CheckFunctionCalled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"OnlyCallerOptIn","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"checkFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isOnlyCallerEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setOnlyCallerCheck","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setOnlyCallerCheckWithSignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60e060405234801561001057600080fd5b50604080518082018252601681527f4f7074696f6e616c4f6e6c7943616c6c65724d6f636b000000000000000000006020808301918252835180850190945260018452603160f81b908401908152915190206080529051902060a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260805160a05160c0516109896100bc6000398061045552508061049752508061047652506109896000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063e811f44b11610050578063e811f44b14610138578063ed24911d14610157578063fcaa54ee1461015f57610072565b806350898bb01461007757806390193b7c146100ac578063a1648aa5146100f1575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610229565b005b6100df600480360360208110156100c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610260565b60408051918252519081900360200190f35b6101246004803603602081101561010757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610288565b604080519115158252519081900360200190f35b6100aa6004803603602081101561014e57600080fd5b503515156102b3565b6100df6102c0565b6100aa6004803603606081101561017557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101351515918101906060810160408201356401000000008111156101b457600080fd5b8201836020820111156101c657600080fd5b803590602001918460018302840111640100000000831117156101e857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102cf945050505050565b8061023381610370565b6040517f2b2beda7ed50de87a1c9dcb615025cd9cf6f607aec8c564cd89d7f1bff52c86f90600090a15050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b6102bd33826103c2565b50565b60006102ca610451565b905090565b60007fbd291ffccec065968fe20c5f8debdad73ab50837733f357eeae8814178015a9084846102fd87610260565b604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183151581526020018281526020019450505050506040516020818303038152906040528051906020012090506103608482846101f861051c565b61036a84846103c2565b50505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff16156102bd576102bd3373ffffffffffffffffffffffffffffffffffffffff831614610191610549565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fac9874a7a931a3f5c9f202c6d9cf40de5d21506993c9f9c38ca8265add89584c9281900390910190a15050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006104be61055b565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b61036a8484847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8561055f565b8161055757610557816105c3565b5050565b4690565b600061056a856105ed565b905061058061057a878387610654565b83610549565b61058f428410156101b8610549565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b6102bd817f42414c00000000000000000000000000000000000000000000000000000000006107c0565b60006105f7610451565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60006106758473ffffffffffffffffffffffffffffffffffffffff1661083b565b156107ab57604080517f1626ba7e000000000000000000000000000000000000000000000000000000008082526004820186815260248301938452855160448401528551919373ffffffffffffffffffffffffffffffffffffffff891693631626ba7e938993899390929091606490910190602085019080838360005b8381101561070a5781810151838201526020016106f2565b50505050905090810190601f1680156107375780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161490506107b9565b6107b6848484610841565b90505b9392505050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b3b151590565b600061085382516041146101b9610549565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156108cc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061094757508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9897505050505050505056fea264697066735822122084b9d09350203547db1149a426cb648bc1b540a9c5b144d3a649d33fe276d68364736f6c63430007010033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH32 0x4F7074696F6E616C4F6E6C7943616C6C65724D6F636B00000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0xA0 MSTORE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x989 PUSH2 0xBC PUSH1 0x0 CODECOPY DUP1 PUSH2 0x455 MSTORE POP DUP1 PUSH2 0x497 MSTORE POP DUP1 PUSH2 0x476 MSTORE POP PUSH2 0x989 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE811F44B GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xE811F44B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xFCAA54EE EQ PUSH2 0x15F JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x50898BB0 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xA1648AA5 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2CF SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x233 DUP2 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B2BEDA7ED50DE87A1C9DCB615025CD9CF6F607AEC8C564CD89D7F1BFF52C86F SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2BD CALLER DUP3 PUSH2 0x3C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA PUSH2 0x451 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xBD291FFCCEC065968FE20C5F8DEBDAD73AB50837733F357EEAE8814178015A90 DUP5 DUP5 PUSH2 0x2FD DUP8 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x360 DUP5 DUP3 DUP5 PUSH2 0x1F8 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x36A DUP5 DUP5 PUSH2 0x3C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EQ PUSH2 0x191 PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0xAC9874A7A931A3F5C9F202C6D9CF40DE5D21506993C9F9C38CA8265ADD89584C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x4BE PUSH2 0x55B JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36A DUP5 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 PUSH2 0x55F JUMP JUMPDEST DUP2 PUSH2 0x557 JUMPI PUSH2 0x557 DUP2 PUSH2 0x5C3 JUMP JUMPDEST POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP6 PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP PUSH2 0x580 PUSH2 0x57A DUP8 DUP4 DUP8 PUSH2 0x654 JUMP JUMPDEST DUP4 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x58F TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x549 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2BD DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH2 0x451 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x675 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x83B JUMP JUMPDEST ISZERO PUSH2 0x7AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE DUP6 MLOAD PUSH1 0x44 DUP5 ADD MSTORE DUP6 MLOAD SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP4 PUSH4 0x1626BA7E SWAP4 DUP10 SWAP4 DUP10 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x737 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x769 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 POP PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x947 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xB9 0xD0 SWAP4 POP KECCAK256 CALLDATALOAD SELFBALANCE 0xDB GT 0x49 LOG4 0x26 0xCB PUSH5 0x8BC1B540A9 0xC5 0xB1 DIFFICULTY 0xD3 0xA6 0x49 0xD3 EXTCODEHASH 0xE2 PUSH23 0xD68364736F6C6343000701003300000000000000000000 ","sourceMap":"935:270:64:-:0;;;995:54;;;;;;;;;-1:-1:-1;2020:280:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2020:280:35;;;;;;2100:22;;;;2085:37;;2150:25;;;;2132:43;;2198:95;2185:108;;935:270:64;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"5870":[{"length":32,"start":1142}],"5872":[{"length":32,"start":1175}],"5874":[{"length":32,"start":1109}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100725760003560e01c8063e811f44b11610050578063e811f44b14610138578063ed24911d14610157578063fcaa54ee1461015f57610072565b806350898bb01461007757806390193b7c146100ac578063a1648aa5146100f1575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610229565b005b6100df600480360360208110156100c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610260565b60408051918252519081900360200190f35b6101246004803603602081101561010757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610288565b604080519115158252519081900360200190f35b6100aa6004803603602081101561014e57600080fd5b503515156102b3565b6100df6102c0565b6100aa6004803603606081101561017557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101351515918101906060810160408201356401000000008111156101b457600080fd5b8201836020820111156101c657600080fd5b803590602001918460018302840111640100000000831117156101e857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506102cf945050505050565b8061023381610370565b6040517f2b2beda7ed50de87a1c9dcb615025cd9cf6f607aec8c564cd89d7f1bff52c86f90600090a15050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205460ff1690565b6102bd33826103c2565b50565b60006102ca610451565b905090565b60007fbd291ffccec065968fe20c5f8debdad73ab50837733f357eeae8814178015a9084846102fd87610260565b604051602001808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183151581526020018281526020019450505050506040516020818303038152906040528051906020012090506103608482846101f861051c565b61036a84846103c2565b50505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff16156102bd576102bd3373ffffffffffffffffffffffffffffffffffffffff831614610191610549565b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915582519384529083015280517fac9874a7a931a3f5c9f202c6d9cf40de5d21506993c9f9c38ca8265add89584c9281900390910190a15050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006104be61055b565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b61036a8484847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8561055f565b8161055757610557816105c3565b5050565b4690565b600061056a856105ed565b905061058061057a878387610654565b83610549565b61058f428410156101b8610549565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b6102bd817f42414c00000000000000000000000000000000000000000000000000000000006107c0565b60006105f7610451565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60006106758473ffffffffffffffffffffffffffffffffffffffff1661083b565b156107ab57604080517f1626ba7e000000000000000000000000000000000000000000000000000000008082526004820186815260248301938452855160448401528551919373ffffffffffffffffffffffffffffffffffffffff891693631626ba7e938993899390929091606490910190602085019080838360005b8381101561070a5781810151838201526020016106f2565b50505050905090810190601f1680156107375780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000161490506107b9565b6107b6848484610841565b90505b9392505050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b3b151590565b600061085382516041146101b9610549565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156108cc573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061094757508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b9897505050505050505056fea264697066735822122084b9d09350203547db1149a426cb648bc1b540a9c5b144d3a649d33fe276d68364736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE811F44B GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xE811F44B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xFCAA54EE EQ PUSH2 0x15F JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x50898BB0 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0xA1648AA5 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x229 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2CF SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x233 DUP2 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B2BEDA7ED50DE87A1C9DCB615025CD9CF6F607AEC8C564CD89D7F1BFF52C86F SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2BD CALLER DUP3 PUSH2 0x3C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA PUSH2 0x451 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xBD291FFCCEC065968FE20C5F8DEBDAD73AB50837733F357EEAE8814178015A90 DUP5 DUP5 PUSH2 0x2FD DUP8 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x360 DUP5 DUP3 DUP5 PUSH2 0x1F8 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x36A DUP5 DUP5 PUSH2 0x3C2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EQ PUSH2 0x191 PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0xAC9874A7A931A3F5C9F202C6D9CF40DE5D21506993C9F9C38CA8265ADD89584C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x4BE PUSH2 0x55B JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x36A DUP5 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 PUSH2 0x55F JUMP JUMPDEST DUP2 PUSH2 0x557 JUMPI PUSH2 0x557 DUP2 PUSH2 0x5C3 JUMP JUMPDEST POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP6 PUSH2 0x5ED JUMP JUMPDEST SWAP1 POP PUSH2 0x580 PUSH2 0x57A DUP8 DUP4 DUP8 PUSH2 0x654 JUMP JUMPDEST DUP4 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x58F TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x549 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2BD DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH2 0x451 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x675 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x83B JUMP JUMPDEST ISZERO PUSH2 0x7AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE DUP6 MLOAD PUSH1 0x44 DUP5 ADD MSTORE DUP6 MLOAD SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP4 PUSH4 0x1626BA7E SWAP4 DUP10 SWAP4 DUP10 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x737 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x769 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 POP PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x853 DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x947 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xB9 0xD0 SWAP4 POP KECCAK256 CALLDATALOAD SELFBALANCE 0xDB GT 0x49 LOG4 0x26 0xCB PUSH5 0x8BC1B540A9 0xC5 0xB1 DIFFICULTY 0xD3 0xA6 0x49 0xD3 EXTCODEHASH 0xE2 PUSH23 0xD68364736F6C6343000701003300000000000000000000 ","sourceMap":"935:270:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:114;;;;;;;;;;;;;;;;-1:-1:-1;1089:114:64;;;;:::i;:::-;;1303:121:19;;;;;;;;;;;;;;;;-1:-1:-1;1303:121:19;;;;:::i;:::-;;;;;;;;;;;;;;;;2247:131:23;;;;;;;;;;;;;;;;-1:-1:-1;2247:131:23;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1551:117;;;;;;;;;;;;;;;;-1:-1:-1;1551:117:23;;;;:::i;1184:113:19:-;;;:::i;1674:398:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1674:398:23;;-1:-1:-1;1674:398:23;;-1:-1:-1;;;;;1674:398:23:i;1089:114:64:-;1154:4;1508:19:23;1522:4;1508:13;:19::i;:::-;1175:21:64::1;::::0;::::1;::::0;;;::::1;1089:114:::0;;:::o;1303:121:19:-;1398:19;;1372:7;1398:19;;;;;;;;;;;;1303:121::o;2247:131:23:-;2345:26;;2322:4;2345:26;;;:20;:26;;;;;;;;;2247:131::o;1551:117::-;1621:40;1641:10;1653:7;1621:19;:40::i;:::-;1551:117;:::o;1184:113:19:-;1244:7;1270:20;:18;:20::i;:::-;1263:27;;1184:113;:::o;1674:398:23:-;1825:18;1144:86;1900:4;1906:7;1915:18;1928:4;1915:12;:18::i;:::-;1856:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:89;;;;;;1825:110;;1945:76;1967:4;1973:10;1985:9;13190:3:0;1945:21:23;:76::i;:::-;2031:34;2051:4;2057:7;2031:19;:34::i;:::-;1674:398;;;;:::o;2384:178::-;2448:26;;;;;;;:20;:26;;;;;;;;2444:112;;;2490:55;2499:10;:18;;;;10270:3:0;2490:8:23;:55::i;2078:163::-;2153:26;;;;;;;:20;:26;;;;;;;;;:36;;;;;;;;;;;;;2204:30;;;;;;;;;;;;;;;;;;;;;2078:163;;:::o;2386:188:35:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;1430:265:19:-;1605:83;1627:7;1636:10;1648:9;1659:17;1678:9;1605:21;:83::i;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;3433:187:35:-;3595:9;;3570:44::o;1701:1214:19:-;1895:14;1912:28;1929:10;1912:16;:28::i;:::-;1895:45;;1950:66;1959:45;1977:7;1986:6;1994:9;1959:17;:45::i;:::-;2006:9;1950:8;:66::i;:::-;2487:63;2508:15;2496:8;:27;;12656:3:0;2487:8:19;:63::i;:::-;-1:-1:-1;;;2884:19:19;;;;:10;:19;;;;;;;;;;:24;;2907:1;2884:24;;;-1:-1:-1;;1701:1214:19:o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;3199:183:35:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;1045:414:25:-;1199:4;1219:20;:7;:18;;;:20::i;:::-;1215:238;;;1262:53;;;1319:34;1262:53;;;;;;;;;;;;;;;;;;;;;;;1319:34;;1262;;;;1319;;1297:6;;1305:9;;1262:53;;;;;;;;;;;;;;;;-1:-1:-1;1262:53:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1262:53:25;:91;;;;-1:-1:-1;1255:98:25;;1215:238;1391:51;1415:7;1424:6;1432:9;1391:23;:51::i;:::-;1384:58;;1215:238;1045:414;;;;;:::o;1692:3378:0:-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14;1031:433:33;1403:20;1449:8;;;1031:433::o;2921:876:19:-;3066:4;3082:60;3091:9;:16;3111:2;3091:22;12713:3:0;3082:8:19;:60::i;:::-;3153:9;3172;3191:7;3427:4;3416:9;3412:20;3406:27;3401:32;;3472:4;3461:9;3457:20;3451:27;3446:32;;3525:4;3514:9;3510:20;3504:27;3501:1;3496:36;3491:41;;3552:24;3579:26;3589:6;3597:1;3600;3603;3579:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:26:19;;;;;;-1:-1:-1;;3728:30:19;;;;;;;:61;;;3782:7;3762:27;;:16;:27;;;3728:61;3720:70;2921:876;-1:-1:-1;;;;;;;;2921:876:19:o"},"methodIdentifiers":{"checkFunction(address)":"50898bb0","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","isOnlyCallerEnabled(address)":"a1648aa5","setOnlyCallerCheck(bool)":"e811f44b","setOnlyCallerCheckWithSignature(address,bool,bytes)":"fcaa54ee"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckFunctionCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"OnlyCallerOptIn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isOnlyCallerEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setOnlyCallerCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"setOnlyCallerCheckWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock with an external method that affects an address. The user can opt in to a verification, so that the method becomes callable only by their address.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"isOnlyCallerEnabled(address)\":{\"details\":\"Returns true if caller verification is enabled for the given user, false otherwise.\"},\"setOnlyCallerCheck(bool)\":{\"details\":\"Enables / disables verification mechanism for caller.\",\"params\":{\"enabled\":\"- True if caller verification shall be enabled, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/OptionalOnlyCallerMock.sol\":\"OptionalOnlyCallerMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IOptionalOnlyCaller.sol\":{\"keccak256\":\"0x7bab0494ee39fb988722edd20b3e5ff747b4acfe93a62d0726c5d63ae3f6e472\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23e1d154f2fa589cbfa51338c285cf1862edcd6172fdbb26db17a6fcf9581ee2\",\"dweb:/ipfs/Qmbu8wgFjYqZvvv84MKbLiHMSKv3THZuFHCjRchPHLjCdY\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":{\"keccak256\":\"0xf82dab09a38bfdaf0983b69829de462c62359bc0bfaa37c4447408d93bd367c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0172b678ca594e95b7e5d881fd1280b3792052861ca98d77fa6194b524d188\",\"dweb:/ipfs/QmZ3bYEGTrfruXNYAzuFjJeg9Hx6UQw8ZyBzyM72BVGXfT\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/helpers/OptionalOnlyCaller.sol\":{\"keccak256\":\"0xc3a9b8d78e475f0290fa6f660b63f42ed4834dfcb61d7935b4b034fd31ef33f3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1793575373e2214ceee3aecbd68b8b1a3ff24070b63bf36acb5d7e2bbb700d71\",\"dweb:/ipfs/QmVGYzndTDp2z25g6WqPze1PV5okh7MGBkP3XL2CTggAcM\"]},\"contracts/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x028adc486d4df66cfc3157049ebd2772f1033be7159b27173225459d8d833e93\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5a67c6db6916df2ace5765995f45bf03e9ed07dd6e6164a196642ba4d52aa8b4\",\"dweb:/ipfs/QmYkhoC75YFywYqQPCMbj9iWyauVLczE7Db2NLisJR2vqu\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0xd0124aa262584bcdc163089547074252ace79201c02de2573fc8154cdc024b25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://333957f2afd70aef1757e5e84a8ed6e5048eb8233448a3c67e7111ae9f01b6bc\",\"dweb:/ipfs/QmSQcuZH5rkS8D1PGt6tJZpkPM8onWPwNe24iEVjZWidt4\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/test/OptionalOnlyCallerMock.sol\":{\"keccak256\":\"0x7bd850c693d32f194d19443383e8ed12808d547aac03ef6c04e2d233229ceb9a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8561b9b60d5ae204ab0e2bdfd92adb6ac63f67cc6f78ffdafa9a365ec8bcf2be\",\"dweb:/ipfs/QmYePjeYTTTPpeSBhTqPTxF5N1U13Zm6vkSBtmKFSDNzQi\"]}},\"version\":1}"}},"contracts/test/ReentrancyAttack.sol":{"ReentrancyAttack":{"abi":[{"inputs":[{"internalType":"bytes4","name":"data","type":"bytes4"}],"name":"callSender","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610229806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a2df1ed14610030575b600080fd5b61006f6004803603602081101561004657600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610071565b005b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000851617815291518151600093339392918291908083835b6020831061011857805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016100db565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461017a576040519150601f19603f3d011682016040523d82523d6000602084013e61017f565b606091505b50509050806101ef57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f5245454e5452414e43595f41545441434b000000000000000000000000000000604482015290519081900360640190fd5b505056fea26469706673582212200a92547acbcc1dbf68a61c2ee8ebd9e2f03a19a9f6ccc63429a415b64a464a5c64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2DF1ED EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x71 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 CALLER SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x118 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5245454E5452414E43595F41545441434B000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP3 SLOAD PUSH27 0xCBCC1DBF68A61C2EE8EBD9E2F03A19A9F6CCC63429A415B64A464A 0x5C PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"66:261:65:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80630a2df1ed14610030575b600080fd5b61006f6004803603602081101561004657600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610071565b005b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000851617815291518151600093339392918291908083835b6020831061011857805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016100db565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461017a576040519150601f19603f3d011682016040523d82523d6000602084013e61017f565b606091505b50509050806101ef57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f5245454e5452414e43595f41545441434b000000000000000000000000000000604482015290519081900360640190fd5b505056fea26469706673582212200a92547acbcc1dbf68a61c2ee8ebd9e2f03a19a9f6ccc63429a415b64a464a5c64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2DF1ED EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x71 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 CALLER SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x118 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5245454E5452414E43595F41545441434B000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP3 SLOAD PUSH27 0xCBCC1DBF68A61C2EE8EBD9E2F03A19A9F6CCC63429A415B64A464A 0x5C PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"66:261:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;98:227;;;;;;;;;;;;;;;;-1:-1:-1;98:227:65;;;;:::i;:::-;;;242:28;;;;;;;;;;;;;;;;;;;;;;;;226:45;;;;208:12;;226:10;;242:28;226:45;;;242:28;226:45;;242:28;226:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:64;;;289:7;281:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;98:227;;:::o"},"methodIdentifiers":{"callSender(bytes4)":"0a2df1ed"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"}],\"name\":\"callSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ReentrancyAttack.sol\":\"ReentrancyAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/test/ReentrancyAttack.sol\":{\"keccak256\":\"0x2f36b00f293f40a52131d27065a682a15659a36c243c59c7658ce0d8f383835c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c783ad9573ae20369886f2a89ce5528b3ddede69c1c82622f74e390004471c75\",\"dweb:/ipfs/QmbPrmDnUe8sHt5eoRNNBG5ZeG1Df4xEde6Qx7wLDZdHoT\"]}},\"version\":1}"}},"contracts/test/ReentrancyMock.sol":{"ReentrancyMock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"callback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract ReentrancyAttack","name":"attacker","type":"address"}],"name":"countAndCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"countLocalRecursive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"name":"countThisRecursive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"counter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b506001600081815590556104f3806100296000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638c5344fa116100505780638c5344fa1461009057806396ffa690146100ad578063b672ad8b146100ca57610067565b8063083b27321461006c57806361bc221a14610076575b600080fd5b6100746100fd565b005b61007e610117565b60408051918252519081900360200190f35b610074600480360360208110156100a657600080fd5b503561011d565b610074600480360360208110156100c357600080fd5b50356102ef565b610074600480360360208110156100e057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610311565b6101056103f2565b61010d61040b565b610115610415565b565b60015481565b6101256103f2565b80156102e45761013361040b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830160248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8c5344fa0000000000000000000000000000000000000000000000000000000017815291518151600093309392918291908083835b6020831061020b57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016101ce565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461026d576040519150601f19603f3d011682016040523d82523d6000602084013e610272565b606091505b50509050806102e257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5245454e5452414e43595f4d4f434b0000000000000000000000000000000000604482015290519081900360640190fd5b505b6102ec610415565b50565b6102f76103f2565b80156102e45761030561040b565b6102e4600182036102ef565b6103196103f2565b61032161040b565b604080517f0a2df1ed0000000000000000000000000000000000000000000000000000000081527f083b273200000000000000000000000000000000000000000000000000000000600482015290517f083b2732f78169bfaad6b407fa338cc97d697ed69d3915a18239cc111d51a4029173ffffffffffffffffffffffffffffffffffffffff841691630a2df1ed9160248082019260009290919082900301818387803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b50505050506102ec610415565b6104046002600054141561019061041c565b6002600055565b6001805481019055565b6001600055565b8161042a5761042a8161042e565b5050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818106603090810160081b83860601918390049283060160101b016642414c230000300160c81b6044526102ec917f42414c0000000000000000000000000000000000000000000000000000000000906242414c90606490fdfea2646970667358221220412d1fe471873df0fc6b082188c9387a219ed7bad2eb483cfef2c84dc911edfa64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE SWAP1 SSTORE PUSH2 0x4F3 DUP1 PUSH2 0x29 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C5344FA GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x8C5344FA EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x96FFA690 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xB672AD8B EQ PUSH2 0xCA JUMPI PUSH2 0x67 JUMP JUMPDEST DUP1 PUSH4 0x83B2732 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x11D JUMP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x311 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x40B JUMP JUMPDEST PUSH2 0x115 PUSH2 0x415 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x3F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x133 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 ADD PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5344FA00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 ADDRESS SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x272 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5245454E5452414E43595F4D4F434B0000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x2EC PUSH2 0x415 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x3F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x305 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x2E4 PUSH1 0x1 DUP3 SUB PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x319 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xA2DF1ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x83B273200000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x83B2732F78169BFAAD6B407FA338CC97D697ED69D3915A18239CC111D51A402 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0xA2DF1ED SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x2EC PUSH2 0x415 JUMP JUMPDEST PUSH2 0x404 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x190 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST DUP2 PUSH2 0x42A JUMPI PUSH2 0x42A DUP2 PUSH2 0x42E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP4 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL DUP4 DUP7 MOD ADD SWAP2 DUP4 SWAP1 DIV SWAP3 DUP4 MOD ADD PUSH1 0x10 SHL ADD PUSH7 0x42414C23000030 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH2 0x2EC SWAP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH3 0x42414C SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x2D 0x1F 0xE4 PUSH18 0x873DF0FC6B082188C9387A219ED7BAD2EB48 EXTCODECOPY INVALID CALLCODE 0xC8 0x4D 0xC9 GT 0xED STATICCALL PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"139:963:66:-:0;;;217:42;;;;;;;;;-1:-1:-1;2070:1:42;2175:7;:22;;;241:11:66;;139:963;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100675760003560e01c80638c5344fa116100505780638c5344fa1461009057806396ffa690146100ad578063b672ad8b146100ca57610067565b8063083b27321461006c57806361bc221a14610076575b600080fd5b6100746100fd565b005b61007e610117565b60408051918252519081900360200190f35b610074600480360360208110156100a657600080fd5b503561011d565b610074600480360360208110156100c357600080fd5b50356102ef565b610074600480360360208110156100e057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610311565b6101056103f2565b61010d61040b565b610115610415565b565b60015481565b6101256103f2565b80156102e45761013361040b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830160248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8c5344fa0000000000000000000000000000000000000000000000000000000017815291518151600093309392918291908083835b6020831061020b57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016101ce565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461026d576040519150601f19603f3d011682016040523d82523d6000602084013e610272565b606091505b50509050806102e257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5245454e5452414e43595f4d4f434b0000000000000000000000000000000000604482015290519081900360640190fd5b505b6102ec610415565b50565b6102f76103f2565b80156102e45761030561040b565b6102e4600182036102ef565b6103196103f2565b61032161040b565b604080517f0a2df1ed0000000000000000000000000000000000000000000000000000000081527f083b273200000000000000000000000000000000000000000000000000000000600482015290517f083b2732f78169bfaad6b407fa338cc97d697ed69d3915a18239cc111d51a4029173ffffffffffffffffffffffffffffffffffffffff841691630a2df1ed9160248082019260009290919082900301818387803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b50505050506102ec610415565b6104046002600054141561019061041c565b6002600055565b6001805481019055565b6001600055565b8161042a5761042a8161042e565b5050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818106603090810160081b83860601918390049283060160101b016642414c230000300160c81b6044526102ec917f42414c0000000000000000000000000000000000000000000000000000000000906242414c90606490fdfea2646970667358221220412d1fe471873df0fc6b082188c9387a219ed7bad2eb483cfef2c84dc911edfa64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C5344FA GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x8C5344FA EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x96FFA690 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xB672AD8B EQ PUSH2 0xCA JUMPI PUSH2 0x67 JUMP JUMPDEST DUP1 PUSH4 0x83B2732 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x76 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74 PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7E PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x11D JUMP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x311 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x40B JUMP JUMPDEST PUSH2 0x115 PUSH2 0x415 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x3F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x133 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 ADD PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5344FA00000000000000000000000000000000000000000000000000000000 OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 ADDRESS SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x272 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5245454E5452414E43595F4D4F434B0000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH2 0x2EC PUSH2 0x415 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F7 PUSH2 0x3F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x305 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x2E4 PUSH1 0x1 DUP3 SUB PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x319 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x321 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xA2DF1ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x83B273200000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0x83B2732F78169BFAAD6B407FA338CC97D697ED69D3915A18239CC111D51A402 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 PUSH4 0xA2DF1ED SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x2EC PUSH2 0x415 JUMP JUMPDEST PUSH2 0x404 PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x190 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST DUP2 PUSH2 0x42A JUMPI PUSH2 0x42A DUP2 PUSH2 0x42E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP4 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL DUP4 DUP7 MOD ADD SWAP2 DUP4 SWAP1 DIV SWAP3 DUP4 MOD ADD PUSH1 0x10 SHL ADD PUSH7 0x42414C23000030 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH2 0x2EC SWAP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH3 0x42414C SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0x2D 0x1F 0xE4 PUSH18 0x873DF0FC6B082188C9387A219ED7BAD2EB48 EXTCODECOPY INVALID CALLCODE 0xC8 0x4D 0xC9 GT 0xED STATICCALL PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"139:963:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:67;;;:::i;:::-;;188:22;;;:::i;:::-;;;;;;;;;;;;;;;;504:345;;;;;;;;;;;;;;;;-1:-1:-1;504:345:66;;:::i;338:160::-;;;;;;;;;;;;;;;;-1:-1:-1;338:160:66;;:::i;855:184::-;;;;;;;;;;;;;;;;-1:-1:-1;855:184:66;;;;:::i;265:67::-;2613:20:42;:18;:20::i;:::-;317:8:66::1;:6;:8::i;:::-;2654:19:42::0;:17;:19::i;:::-;265:67:66:o;188:22::-;;;;:::o;504:345::-;2613:20:42;:18;:20::i;:::-;577:5:66;;573:270:::1;;598:8;:6;:8::i;:::-;721:61;::::0;;776:5;;;721:61:::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;702:81;;;;684:12:::1;::::0;710:4:::1;::::0;721:61;702:81;;;721:61;702:81;;721:61;702:81:::1;;;;;;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:100;;;805:7;797:35;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;573:270;;2654:19:42::0;:17;:19::i;:::-;504:345:66;:::o;338:160::-;2613:20:42;:18;:20::i;:::-;412:5:66;;408:84:::1;;433:8;:6;:8::i;:::-;455:26;479:1;475;:5;455:19;:26::i;855:184::-:0;2613:20:42;:18;:20::i;:::-;934:8:66::1;:6;:8::i;:::-;1007:25;::::0;;;;;;::::1;::::0;::::1;::::0;;;973:23:::1;::::0;1007:19:::1;::::0;::::1;::::0;::::1;::::0;:25;;;;;952:11:::1;::::0;1007:25;;;;;;;;952:11;1007:19;:25;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2643:1:42;2654:19:::0;:17;:19::i;2686:271::-;2809:48;2113:1;2818:7;;:19;;10214:3:0;2809:8:42;:48::i;:::-;2113:1;2932:7;:18;2686:271::o;1045:55:66:-;1092:1;1081:12;;;;;;1045:55::o;2963:208:42:-;2070:1;3142:7;:22;2963:208::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;3849:26;3019:18;;;;3066;;;3062:29;3881:2;3877:17;3845:50;3824:72;;3819:3;3815:82;4832:4;4825:26;1506:28;;;;1783:14;;5058:3;;5048:14"},"methodIdentifiers":{"callback()":"083b2732","countAndCall(address)":"b672ad8b","countLocalRecursive(uint256)":"96ffa690","countThisRecursive(uint256)":"8c5344fa","counter()":"61bc221a"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ReentrancyAttack\",\"name\":\"attacker\",\"type\":\"address\"}],\"name\":\"countAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"countLocalRecursive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"countThisRecursive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ReentrancyMock.sol\":\"ReentrancyMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0x5307df1dd5e4a781ced6167873d3a2ea08d000741f1db8bcf5e12fde4b1a098d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669e378e0dd6083d04a6878f2c5b871ddf91e1d9c5c24e6c814589948ad34133\",\"dweb:/ipfs/QmcysgpZHtQgqo6JqYMp3o5GxWy2y5hbK3RDu2kSSgedHv\"]},\"contracts/test/ReentrancyAttack.sol\":{\"keccak256\":\"0x2f36b00f293f40a52131d27065a682a15659a36c243c59c7658ce0d8f383835c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c783ad9573ae20369886f2a89ce5528b3ddede69c1c82622f74e390004471c75\",\"dweb:/ipfs/QmbPrmDnUe8sHt5eoRNNBG5ZeG1Df4xEde6Qx7wLDZdHoT\"]},\"contracts/test/ReentrancyMock.sol\":{\"keccak256\":\"0x6cd96077e006a8136b6042fb5860dc2b265c41a332099be4c00f4bd71d3717a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d9911c62de24ddc9b0be3fe0c3f36c124a01fabea3537821d6762c23dc7cd2f\",\"dweb:/ipfs/QmUQVFnpxmWUzT2fjqFqshXf9BEfAFAk7axd3R625vvQkN\"]}},\"version\":1}"}},"contracts/test/SafeERC20Mock.sol":{"SafeERC20Mock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"safeApprove","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610474806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063eb5625d914610030575b600080fd5b6100736004803603606081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610075565b005b61009673ffffffffffffffffffffffffffffffffffffffff8416838361009b565b505050565b801580159061014a5750604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561011b57600080fd5b505afa15801561012f573d6000803e3d6000fd5b505050506040513d602081101561014557600080fd5b505115155b156101df576040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260006044808301919091528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526101df908490610268565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526100969084905b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106102d157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610294565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610333576040519150601f19603f3d011682016040523d82523d6000602084013e610338565b606091505b50915091506000821415610350573d6000803e3d6000fd5b61037e815160001480610376575081806020019051602081101561037357600080fd5b50515b6101a2610384565b50505050565b816103925761039281610396565b5050565b6103c0817f42414c00000000000000000000000000000000000000000000000000000000006103c3565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212207b1ef8db9322b8922f5d01b68eed69ce8f9ba1ad8e04f6b4d3786ff11fff34c564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB5625D9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x96 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0x9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x14A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1DF SWAP1 DUP5 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x96 SWAP1 DUP5 SWAP1 JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2D1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x338 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x350 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x37E DUP2 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x376 JUMPI POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1A2 PUSH2 0x384 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x392 JUMPI PUSH2 0x392 DUP2 PUSH2 0x396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C0 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x3C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x1EF8DB9322B8922F5D01B68EED69CE8F9BA1AD8E04F6B4D3786FF11F SELFDESTRUCT CALLVALUE 0xC5 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"843:236:67:-:0;;;905:16;;;;;;;;;;843:236;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063eb5625d914610030575b600080fd5b6100736004803603606081101561004657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610075565b005b61009673ffffffffffffffffffffffffffffffffffffffff8416838361009b565b505050565b801580159061014a5750604080517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561011b57600080fd5b505afa15801561012f573d6000803e3d6000fd5b505050506040513d602081101561014557600080fd5b505115155b156101df576040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260006044808301919091528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526101df908490610268565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526100969084905b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106102d157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610294565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610333576040519150601f19603f3d011682016040523d82523d6000602084013e610338565b606091505b50915091506000821415610350573d6000803e3d6000fd5b61037e815160001480610376575081806020019051602081101561037357600080fd5b50515b6101a2610384565b50505050565b816103925761039281610396565b5050565b6103c0817f42414c00000000000000000000000000000000000000000000000000000000006103c3565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212207b1ef8db9322b8922f5d01b68eed69ce8f9ba1ad8e04f6b4d3786ff11fff34c564736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB5625D9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x96 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0x9B JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x14A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x1DF SWAP1 DUP5 SWAP1 PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x96 SWAP1 DUP5 SWAP1 JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2D1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x338 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x350 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x37E DUP2 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x376 JUMPI POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1A2 PUSH2 0x384 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x392 JUMPI PUSH2 0x392 DUP2 PUSH2 0x396 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C0 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x3C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x1EF8DB9322B8922F5D01B68EED69CE8F9BA1AD8E04F6B4D3786FF11F SELFDESTRUCT CALLVALUE 0xC5 PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"843:236:67:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;927:146;;;;;;;;;;;;;;;;-1:-1:-1;927:146:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;1038:28;:17;;;1056:2;1060:5;1038:17;:28::i;:::-;927:146;;;:::o;1001:507:44:-;1218:10;;;;;:62;;-1:-1:-1;1232:43:44;;;;;;1256:4;1232:43;;;;:15;:43;;;;;;;;;:15;;;;;;:43;;;;;;;;;;;;;;;:15;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1232:43:44;:48;;1218:62;1214:183;;;1332:53;;;;;;;;;;1383:1;1332:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:22;1332:53;;;1296:90;;1324:5;;1296:19;:90::i;:::-;1443:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:22;1443:57;;;1407:94;;1435:5;;2324:914;2626:12;2640:23;2667:5;:10;;2678:4;2667:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2625:58;;;;2877:1;2868:7;2865:14;2862:2;;;2919:16;2916:1;2913;2898:38;2963:16;2960:1;2953:27;2862:2;3134:97;3143:10;:17;3164:1;3143:22;:56;;;;3180:10;3169:30;;;;;;;;;;;;;;;-1:-1:-1;3169:30:44;3143:56;11359:3:0;3134:8:44;:97::i;:::-;2324:914;;;;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"safeApprove(address,address,uint256)":"eb5625d9"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SafeERC20Mock.sol\":\"SafeERC20Mock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"contracts/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0x69d31837c1aefe83a3502a96c911bf9ec1680bfb3400f1197bd0481509ddabcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a77f611b44151bd12b432fc69ed7c0b33c413f87fd7a91f29e27ef9910cdf1cc\",\"dweb:/ipfs/QmcwJDRhVuBZnqa6681E9HrQiD9Am3gPih84R4hCXUv1E2\"]},\"contracts/test/SafeERC20Mock.sol\":{\"keccak256\":\"0xd89de86dbac342c197258e343c934641c738319380ab4b3c5330a6065bd839bf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a866b69ff3ceec97cd3126b0e40cb41ad6802d2fd02e81eecbe80f3a2809ed34\",\"dweb:/ipfs/QmeonGGZRejftPAWPL8xX6ezDMXfUVcArUrPkb6ohvPTDG\"]}},\"version\":1}"}},"contracts/test/SignaturesValidatorMock.sol":{"SignaturesValidatorMock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[],"name":"Authenticated","type":"event"},{"inputs":[],"name":"MOCK_AUTHENTICATE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"authenticatedCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"authenticatedCallWithDeadline","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"getDigest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"getStructHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"increaseNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60e060405234801561001057600080fd5b50604080518082018252601d81527f454f41205369676e6174757265732056616c696461746f72204d6f636b0000006020808301918252835180850190945260018452603160f81b908401908152915190206080529051902060a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260805160a05160c0516109bd6100bc600039806105805250806105c25250806105a152506109bd6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806390193b7c1161005b57806390193b7c146101c75780639a874583146101fa578063d8574486146102c4578063ed24911d146102e757610088565b80630d347d5d1461008d578063251a104d146100a75780636917a1ff146100ca5780638247a97c14610194575b600080fd5b6100956102ef565b60408051918252519081900360200190f35b610095600480360360408110156100bd57600080fd5b5080359060200135610313565b610192600480360360608110156100e057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561011d57600080fd5b82018360208201111561012f57600080fd5b8035906020019184600183028401116401000000008311171561015157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610368945050505050565b005b610192600480360360208110156101aa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103b5565b610095600480360360208110156101dd57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103e2565b6101926004803603608081101561021057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561024d57600080fd5b82018360208201111561025f57600080fd5b8035906020019184600183028401116401000000008311171561028157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925061040a915050565b610095600480360360408110156102da57600080fd5b5080359060200135610454565b61009561046f565b7f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a4981565b604080517f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a4960208083019190915281830194909452606080820193909352815180820390930183526080019052805191012090565b6103878361037e84610379876103e2565b610313565b836101f861047e565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a1505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080546001019055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6104258461041b85610379886103e2565b84846101f86104b1565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a150505050565b60006104686104638484610313565b610515565b9392505050565b600061047961057c565b905090565b6104ab8484847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff856104b1565b50505050565b60006104bc85610515565b90506104d26104cc878387610647565b836107b1565b6104e1428410156101b86107b1565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b600061051f61057c565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006105e96107c3565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b60006106688473ffffffffffffffffffffffffffffffffffffffff166107c7565b1561079e57604080517f1626ba7e000000000000000000000000000000000000000000000000000000008082526004820186815260248301938452855160448401528551919373ffffffffffffffffffffffffffffffffffffffff891693631626ba7e938993899390929091606490910190602085019080838360005b838110156106fd5781810151838201526020016106e5565b50505050905090810190601f16801561072a5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016149050610468565b6107a98484846107cd565b949350505050565b816107bf576107bf816108df565b5050565b4690565b3b151590565b60006107df82516041146101b96107b1565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610858573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906108d357508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b610909817f42414c000000000000000000000000000000000000000000000000000000000061090c565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212204b4d6abf017dd18dcc751e97a417a44ef51f3131898ea6484bf36a1872e6f8a364736f6c63430007010033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x454F41205369676E6174757265732056616C696461746F72204D6F636B000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE SWAP1 MLOAD SWAP1 KECCAK256 PUSH1 0xA0 MSTORE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x9BD PUSH2 0xBC PUSH1 0x0 CODECOPY DUP1 PUSH2 0x580 MSTORE POP DUP1 PUSH2 0x5C2 MSTORE POP DUP1 PUSH2 0x5A1 MSTORE POP PUSH2 0x9BD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90193B7C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x9A874583 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD8574486 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x2E7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xD347D5D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x251A104D EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x6917A1FF EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x8247A97C EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x313 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x368 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP SWAP2 CALLDATALOAD SWAP3 POP PUSH2 0x40A SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x454 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x46F JUMP JUMPDEST PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x80 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x387 DUP4 PUSH2 0x37E DUP5 PUSH2 0x379 DUP8 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST DUP4 PUSH2 0x1F8 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x425 DUP5 PUSH2 0x41B DUP6 PUSH2 0x379 DUP9 PUSH2 0x3E2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F8 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 PUSH2 0x463 DUP5 DUP5 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH2 0x57C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AB DUP5 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 PUSH2 0x4B1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP6 PUSH2 0x515 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D2 PUSH2 0x4CC DUP8 DUP4 DUP8 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x7B1 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F PUSH2 0x57C JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x5E9 PUSH2 0x7C3 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C7 JUMP JUMPDEST ISZERO PUSH2 0x79E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE DUP6 MLOAD PUSH1 0x44 DUP5 ADD MSTORE DUP6 MLOAD SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP4 PUSH4 0x1626BA7E SWAP4 DUP10 SWAP4 DUP10 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x72A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 POP PUSH2 0x468 JUMP JUMPDEST PUSH2 0x7A9 DUP5 DUP5 DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7BF JUMPI PUSH2 0x7BF DUP2 PUSH2 0x8DF JUMP JUMPDEST POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DF DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D3 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x90C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0x4D PUSH11 0xBF017DD18DCC751E97A417 LOG4 0x4E CREATE2 0x1F BALANCE BALANCE DUP10 DUP15 0xA6 0x48 0x4B RETURN PUSH11 0x1872E6F8A364736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"104:1545:68:-:0;;;309:123;;;;;;;;;-1:-1:-1;2020:280:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2020:280:35;;;;;;2100:22;;;;2085:37;;2150:25;;;;2132:43;;2198:95;2185:108;;104:1545:68;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"5870":[{"length":32,"start":1441}],"5872":[{"length":32,"start":1474}],"5874":[{"length":32,"start":1408}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806390193b7c1161005b57806390193b7c146101c75780639a874583146101fa578063d8574486146102c4578063ed24911d146102e757610088565b80630d347d5d1461008d578063251a104d146100a75780636917a1ff146100ca5780638247a97c14610194575b600080fd5b6100956102ef565b60408051918252519081900360200190f35b610095600480360360408110156100bd57600080fd5b5080359060200135610313565b610192600480360360608110156100e057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561011d57600080fd5b82018360208201111561012f57600080fd5b8035906020019184600183028401116401000000008311171561015157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610368945050505050565b005b610192600480360360208110156101aa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103b5565b610095600480360360208110156101dd57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103e2565b6101926004803603608081101561021057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561024d57600080fd5b82018360208201111561025f57600080fd5b8035906020019184600183028401116401000000008311171561028157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925061040a915050565b610095600480360360408110156102da57600080fd5b5080359060200135610454565b61009561046f565b7f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a4981565b604080517f1a2773cb2c3f9af30f9fb5190fc6bc4d770020e828d3ab1d3b40ba84e97a6a4960208083019190915281830194909452606080820193909352815180820390930183526080019052805191012090565b6103878361037e84610379876103e2565b610313565b836101f861047e565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a1505050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080546001019055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6104258461041b85610379886103e2565b84846101f86104b1565b6040517fa707c3b3e81b3f5c0275a5cb4003a187a45758f8d5f8f503dd28792e34de5ea090600090a150505050565b60006104686104638484610313565b610515565b9392505050565b600061047961057c565b905090565b6104ab8484847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff856104b1565b50505050565b60006104bc85610515565b90506104d26104cc878387610647565b836107b1565b6104e1428410156101b86107b1565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152602081905260409020805460010190555050565b600061051f61057c565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006105e96107c3565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b60006106688473ffffffffffffffffffffffffffffffffffffffff166107c7565b1561079e57604080517f1626ba7e000000000000000000000000000000000000000000000000000000008082526004820186815260248301938452855160448401528551919373ffffffffffffffffffffffffffffffffffffffff891693631626ba7e938993899390929091606490910190602085019080838360005b838110156106fd5781810151838201526020016106e5565b50505050905090810190601f16801561072a5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016149050610468565b6107a98484846107cd565b949350505050565b816107bf576107bf816108df565b5050565b4690565b3b151590565b60006107df82516041146101b96107b1565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610858573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906108d357508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b610909817f42414c000000000000000000000000000000000000000000000000000000000061090c565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fdfea26469706673582212204b4d6abf017dd18dcc751e97a417a44ef51f3131898ea6484bf36a1872e6f8a364736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90193B7C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x9A874583 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xD8574486 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x2E7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xD347D5D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x251A104D EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x6917A1FF EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x8247A97C EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x313 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x368 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP SWAP2 CALLDATALOAD SWAP3 POP PUSH2 0x40A SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x454 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x46F JUMP JUMPDEST PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1A2773CB2C3F9AF30F9FB5190FC6BC4D770020E828D3AB1D3B40BA84E97A6A49 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x80 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x387 DUP4 PUSH2 0x37E DUP5 PUSH2 0x379 DUP8 PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST DUP4 PUSH2 0x1F8 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x425 DUP5 PUSH2 0x41B DUP6 PUSH2 0x379 DUP9 PUSH2 0x3E2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1F8 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA707C3B3E81B3F5C0275A5CB4003A187A45758F8D5F8F503DD28792E34DE5EA0 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 PUSH2 0x463 DUP5 DUP5 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH2 0x57C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AB DUP5 DUP5 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 PUSH2 0x4B1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP6 PUSH2 0x515 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D2 PUSH2 0x4CC DUP8 DUP4 DUP8 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0x7B1 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F PUSH2 0x57C JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x5E9 PUSH2 0x7C3 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7C7 JUMP JUMPDEST ISZERO PUSH2 0x79E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE DUP6 MLOAD PUSH1 0x44 DUP5 ADD MSTORE DUP6 MLOAD SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP4 PUSH4 0x1626BA7E SWAP4 DUP10 SWAP4 DUP10 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6FD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6E5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x72A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 POP PUSH2 0x468 JUMP JUMPDEST PUSH2 0x7A9 DUP5 DUP5 DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7BF JUMPI PUSH2 0x7BF DUP2 PUSH2 0x8DF JUMP JUMPDEST POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DF DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D3 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 PUSH2 0x90C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0x4D PUSH11 0xBF017DD18DCC751E97A417 LOG4 0x4E CREATE2 0x1F BALANCE BALANCE DUP10 DUP15 0xA6 0x48 0x4B RETURN PUSH11 0x1872E6F8A364736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"104:1545:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:108;;;:::i;:::-;;;;;;;;;;;;;;;;438:172;;;;;;;;;;;;;;;;-1:-1:-1;438:172:68;;;;;;;:::i;772:274::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;772:274:68;;-1:-1:-1;772:274:68;;-1:-1:-1;;;;;772:274:68:i;:::-;;1566:81;;;;;;;;;;;;;;;;-1:-1:-1;1566:81:68;;;;:::i;1303:121:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1303:121:19;;;;:::i;1052:508:68:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1052:508:68;;-1:-1:-1;;1052:508:68;;;-1:-1:-1;1052:508:68;;-1:-1:-1;;1052:508:68:i;616:150::-;;;;;;;;;;;;;;;;-1:-1:-1;616:150:68;;;;;;;:::i;1184:113:19:-;;;:::i;194:108:68:-;247:55;194:108;:::o;438:172::-;549:53;;;247:55;549:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;539:64;;;;;;438:172::o;772:274::-;902:107;924:4;930:41;944:6;952:18;965:4;952:12;:18::i;:::-;930:13;:41::i;:::-;973:9;13190:3:0;902:21:68;:107::i;:::-;1024:15;;;;;;;772:274;;;:::o;1566:81::-;1622:16;;:10;:16;;;;;;;;;;:18;;;;;;1566:81::o;1303:121:19:-;1398:19;;1372:7;1398:19;;;;;;;;;;;;1303:121::o;1052:508:68:-;1336:187;1371:4;1389:41;1403:6;1411:18;1424:4;1411:12;:18::i;1389:41::-;1444:9;1467:8;13190:3:0;1336:21:68;:187::i;:::-;1538:15;;;;;;;1052:508;;;;:::o;616:150::-;687:7;713:46;730:28;744:6;752:5;730:13;:28::i;:::-;713:16;:46::i;:::-;706:53;616:150;-1:-1:-1;;;616:150:68:o;1184:113:19:-;1244:7;1270:20;:18;:20::i;:::-;1263:27;;1184:113;:::o;1430:265::-;1605:83;1627:7;1636:10;1648:9;1659:17;1678:9;1605:21;:83::i;:::-;1430:265;;;;:::o;1701:1214::-;1895:14;1912:28;1929:10;1912:16;:28::i;:::-;1895:45;;1950:66;1959:45;1977:7;1986:6;1994:9;1959:17;:45::i;:::-;2006:9;1950:8;:66::i;:::-;2487:63;2508:15;2496:8;:27;;12656:3:0;2487:8:19;:63::i;:::-;-1:-1:-1;;;2884:19:19;;;;:10;:19;;;;;;;;;;:24;;2907:1;2884:24;;;-1:-1:-1;;1701:1214:19:o;3199:183:35:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;2386:188::-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;1045:414:25:-;1199:4;1219:20;:7;:18;;;:20::i;:::-;1215:238;;;1262:53;;;1319:34;1262:53;;;;;;;;;;;;;;;;;;;;;;;1319:34;;1262;;;;1319;;1297:6;;1305:9;;1262:53;;;;;;;;;;;;;;;;-1:-1:-1;1262:53:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1262:53:25;:91;;;;-1:-1:-1;1255:98:25;;1215:238;1391:51;1415:7;1424:6;1432:9;1391:23;:51::i;:::-;1384:58;1045:414;-1:-1:-1;;;;1045:414:25:o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;3433:187:35:-;3595:9;;3570:44::o;1031:433:33:-;1403:20;1449:8;;;1031:433::o;2921:876:19:-;3066:4;3082:60;3091:9;:16;3111:2;3091:22;12713:3:0;3082:8:19;:60::i;:::-;3153:9;3172;3191:7;3427:4;3416:9;3412:20;3406:27;3401:32;;3472:4;3461:9;3457:20;3451:27;3446:32;;3525:4;3514:9;3510:20;3504:27;3501:1;3496:36;3491:41;;3552:24;3579:26;3589:6;3597:1;3600;3603;3579:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:26:19;;;;;;-1:-1:-1;;3728:30:19;;;;;;;:61;;;3782:7;3762:27;;:16;:27;;;3728:61;3720:70;2921:876;-1:-1:-1;;;;;;;;2921:876:19:o;1459:126:0:-;1506:28;1514:9;1506:28;:7;:28::i;:::-;1459:126;:::o;1692:3378::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14"},"methodIdentifiers":{"MOCK_AUTHENTICATE_TYPEHASH()":"0d347d5d","authenticatedCall(address,uint256,bytes)":"6917a1ff","authenticatedCallWithDeadline(address,uint256,bytes,uint256)":"9a874583","getDigest(uint256,uint256)":"d8574486","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","getStructHash(uint256,uint256)":"251a104d","increaseNonce(address)":"8247a97c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Authenticated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MOCK_AUTHENTICATE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"authenticatedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"authenticatedCallWithDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"getStructHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"increaseNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SignaturesValidatorMock.sol\":\"SignaturesValidatorMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC1271.sol\":{\"keccak256\":\"0xf82dab09a38bfdaf0983b69829de462c62359bc0bfaa37c4447408d93bd367c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0172b678ca594e95b7e5d881fd1280b3792052861ca98d77fa6194b524d188\",\"dweb:/ipfs/QmZ3bYEGTrfruXNYAzuFjJeg9Hx6UQw8ZyBzyM72BVGXfT\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x028adc486d4df66cfc3157049ebd2772f1033be7159b27173225459d8d833e93\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5a67c6db6916df2ace5765995f45bf03e9ed07dd6e6164a196642ba4d52aa8b4\",\"dweb:/ipfs/QmYkhoC75YFywYqQPCMbj9iWyauVLczE7Db2NLisJR2vqu\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0xd0124aa262584bcdc163089547074252ace79201c02de2573fc8154cdc024b25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://333957f2afd70aef1757e5e84a8ed6e5048eb8233448a3c67e7111ae9f01b6bc\",\"dweb:/ipfs/QmSQcuZH5rkS8D1PGt6tJZpkPM8onWPwNe24iEVjZWidt4\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/test/SignaturesValidatorMock.sol\":{\"keccak256\":\"0xff10fcd8f2766c073991b8a032c63f253c82fe6a903943962216ca62f0cc10b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc91ee03128d534f7f31077d818e5845c0f4720142a0b0ac173aad4b1eadb984\",\"dweb:/ipfs/QmV2mHztjNzcj2sogHCz4KdsEpkF8hyBQ1LrD1eYQUcT5e\"]}},\"version\":1}"}},"contracts/test/SingletonAuthenticationMock.sol":{"SingletonAuthenticationMock":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60c060405234801561001057600080fd5b5060405161028e38038061028e8339818101604052602081101561003357600080fd5b5051306080819052606082901b6001600160601b03191660a052906001600160a01b031661021b6100736000398061014352508060d6525061021b6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063851c1bb3146100465780638d928af814610097578063aaabadc5146100c8575b600080fd5b6100856004803603602081101561005c57600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166100d0565b60408051918252519081900360200190f35b61009f610141565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f610165565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008416828401528251602481840301815260449092019092528051910120919050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061016f610141565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b457600080fd5b505afa1580156101c8573d6000803e3d6000fd5b505050506040513d60208110156101de57600080fd5b505190509056fea26469706673582212209e5716dc9e6d3be50c8594a72c0c5392d0f0fc413c288149b7845af3b0583e6164736f6c63430007010033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x28E CODESIZE SUB DUP1 PUSH2 0x28E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0xA0 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21B PUSH2 0x73 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x143 MSTORE POP DUP1 PUSH1 0xD6 MSTORE POP PUSH2 0x21B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x141 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F PUSH2 0x141 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 JUMPI AND 0xDC SWAP15 PUSH14 0x3BE50C8594A72C0C5392D0F0FC41 EXTCODECOPY 0x28 DUP2 0x49 0xB7 DUP5 GAS RETURN 0xB0 PC RETURNDATACOPY PUSH2 0x6473 PUSH16 0x6C634300070100330000000000000000 ","sourceMap":"830:191:69:-:0;;;900:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;900:119:69;1054:4:26;2049:46:16;;;;1073:14:26::1;::::0;;;-1:-1:-1;;;;;;1073:14:26;::::1;::::0;1054:4;-1:-1:-1;;;;;830:191:69;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"1435":[{"length":32,"start":214}],"2858":[{"length":32,"start":323}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063851c1bb3146100465780638d928af814610097578063aaabadc5146100c8575b600080fd5b6100856004803603602081101561005c57600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166100d0565b60408051918252519081900360200190f35b61009f610141565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f610165565b604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008416828401528251602481840301815260449092019092528051910120919050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600061016f610141565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b457600080fd5b505afa1580156101c8573d6000803e3d6000fd5b505050506040513d60208110156101de57600080fd5b505190509056fea26469706673582212209e5716dc9e6d3be50c8594a72c0c5392d0f0fc413c288149b7845af3b0583e6164736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x141 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x24 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F PUSH2 0x141 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 JUMPI AND 0xDC SWAP15 PUSH14 0x3BE50C8594A72C0C5392D0F0FC41 EXTCODECOPY 0x28 DUP2 0x49 0xB7 DUP5 GAS RETURN 0xB0 PC RETURNDATACOPY PUSH2 0x6473 PUSH16 0x6C634300070100330000000000000000 ","sourceMap":"830:191:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2607:430:16;;;;;;;;;;;;;;;;-1:-1:-1;2607:430:16;;;;:::i;:::-;;;;;;;;;;;;;;;;1158:79:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1297:109;;;:::i;2607:430:16:-;2979:50;;;2996:22;2979:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2969:61;;;;;2607:430;;;:::o;1158:79:26:-;1224:6;1158:79;:::o;1297:109::-;1343:11;1373:10;:8;:10::i;:::-;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1373:26:26;;-1:-1:-1;1297:109:26;:::o"},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getVault()":"8d928af8"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAuthorizer()\":{\"notice\":\"Returns the Authorizer\"},\"getVault()\":{\"notice\":\"Returns the Balancer Vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SingletonAuthenticationMock.sol\":\"SingletonAuthenticationMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"contracts/helpers/Authentication.sol\":{\"keccak256\":\"0x1462b53900d425f1c7dcd53d928b6aa5d327cba8fa2bec27720603bb40d9be70\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ad188b1ccd7b1353665228bdc77de9c25e426553f3ec518006aa83d1300b6bf2\",\"dweb:/ipfs/QmaBTVdpM5jSucrVJHU37ZUHdZXEWPYMLkbB6hRiEwHcKN\"]},\"contracts/helpers/SingletonAuthentication.sol\":{\"keccak256\":\"0xb903f5d3f429ba5322a01af059cfd5b46f87d9a352a0064598c19e0536f150bc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0c5a8ed08c0ec6664e66b1e21d5536bf80606dad8ba428a7ae8146d911a51e3\",\"dweb:/ipfs/QmPqX5qD9UnZovLexNZettjyE98gjcQzGjRFodb2m82VVE\"]},\"contracts/test/SingletonAuthenticationMock.sol\":{\"keccak256\":\"0x6f717ba3221f3490b029843c830c59f65c34c822f95591ac898956849eb6b358\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ab0ca4c57864ebd057631e9e45f8c36ece7fbb8288f58c9f04671749722dd04d\",\"dweb:/ipfs/QmUuWhvQGzKGkGJK6HnGtzEYTBkGWV3hps4s63fZ7NDDhH\"]}},\"version\":1}"}},"contracts/test/TemporarilyPausableMock.sol":{"TemporarilyPausableMock":{"abi":[{"inputs":[{"internalType":"uint256","name":"pauseWindowDuration","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getMaxBufferPeriodDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getMaxPauseWindowDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60c060405234801561001057600080fd5b506040516103f93803806103f98339818101604052604081101561003357600080fd5b5080516020909101518181610051630163f500831115610194610078565b6100636276a700821115610195610078565b4290910160808190520160a052506100fe9050565b81610086576100868161008a565b5050565b61009a816210905360ea1b61009d565b50565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b60805160a0516102d8610121600039806101df5250806101bb52506102d86000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806316c38b3c146100515780631c0de0511461007257806388f1d2041461009a578063cd43a4d5146100b4575b600080fd5b6100706004803603602081101561006757600080fd5b503515156100bc565b005b61007a6100c8565b604080519315158452602084019290925282820152519081900360600190f35b6100a26100f1565b60408051918252519081900360200190f35b6100a26100f8565b6100c581610100565b50565b60008060006100d561019a565b1592506100e06101b9565b91506100ea6101dd565b9050909192565b6276a70090565b630163f50090565b80156101205761011b6101116101b9565b4210610193610201565b610135565b61013561012b6101dd565b42106101a9610201565b600080548215157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b60006101a46101dd565b4211806101b4575060005460ff16155b905090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b8161020f5761020f81610213565b5050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818106603090810160081b83860601918390049283060160101b016642414c230000300160c81b6044526100c5917f42414c0000000000000000000000000000000000000000000000000000000000906242414c90606490fdfea264697066735822122006c7fa82287b1ae9e48975ed96174548cfc84d64f6e693aad21b6d0d4abff3ee64736f6c63430007010033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3F9 CODESIZE SUB DUP1 PUSH2 0x3F9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD DUP2 DUP2 PUSH2 0x51 PUSH4 0x163F500 DUP4 GT ISZERO PUSH2 0x194 PUSH2 0x78 JUMP JUMPDEST PUSH2 0x63 PUSH3 0x76A700 DUP3 GT ISZERO PUSH2 0x195 PUSH2 0x78 JUMP JUMPDEST TIMESTAMP SWAP1 SWAP2 ADD PUSH1 0x80 DUP2 SWAP1 MSTORE ADD PUSH1 0xA0 MSTORE POP PUSH2 0xFE SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x86 JUMPI PUSH2 0x86 DUP2 PUSH2 0x8A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9A DUP2 PUSH3 0x109053 PUSH1 0xEA SHL PUSH2 0x9D JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD DUP6 ADD PUSH1 0x10 SHL ADD PUSH1 0x23 PUSH4 0xFFFFFF00 PUSH1 0xE0 DUP7 SWAP1 SHR AND ADD PUSH1 0x18 SHL ADD SWAP1 SWAP4 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0xE8 DUP3 SWAP1 SHR SWAP1 PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2D8 PUSH2 0x121 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x1DF MSTORE POP DUP1 PUSH2 0x1BB MSTORE POP PUSH2 0x2D8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x88F1D204 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xCD43A4D5 EQ PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0xF8 JUMP JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0x100 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD5 PUSH2 0x19A JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0xE0 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH3 0x76A700 SWAP1 JUMP JUMPDEST PUSH4 0x163F500 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x120 JUMPI PUSH2 0x11B PUSH2 0x111 PUSH2 0x1B9 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x201 JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x12B PUSH2 0x1DD JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 PUSH2 0x1DD JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x1B4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x20F JUMPI PUSH2 0x20F DUP2 PUSH2 0x213 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP4 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL DUP4 DUP7 MOD ADD SWAP2 DUP4 SWAP1 DIV SWAP3 DUP4 MOD ADD PUSH1 0x10 SHL ADD PUSH7 0x42414C23000030 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH2 0xC5 SWAP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH3 0x42414C SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC7 STATICCALL DUP3 0x28 PUSH28 0x1AE9E48975ED96174548CFC84D64F6E693AAD21B6D0D4ABFF3EE6473 PUSH16 0x6C634300070100330000000000000000 ","sourceMap":"759:580:70:-:0;;;821:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;821:148:70;;;;;;;;;2442:110:27;5493:8;2451:66;;;10435:3:0;2442:8:27;:110::i;:::-;2562:147;5560:7;2584:68;;;10499:3:0;2562:8:27;:147::i;:::-;2749:15;:37;;;2797:40;;;;2870:41;2847:64;;-1:-1:-1;759:580:70;;-1:-1:-1;759:580:70;926:101:0;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;1506:28;1514:9;-1:-1:-1;;;1506:7:0;:28::i;:::-;1459:126;:::o;1692:3378::-;-1:-1:-1;;;1754:18:0;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;;3849:26;;;;3019:18;;;;3066;;;3062:29;;3881:2;3877:17;3845:50;3759:4;3765:18;;;;;;3755:29;3751:2;3747:38;3824:72;;;;3819:3;3815:82;4832:4;4825:26;1783:14;;;;;5058:3;;5048:14;759:580:70;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"2953":[{"length":32,"start":443}],"2955":[{"length":32,"start":479}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c806316c38b3c146100515780631c0de0511461007257806388f1d2041461009a578063cd43a4d5146100b4575b600080fd5b6100706004803603602081101561006757600080fd5b503515156100bc565b005b61007a6100c8565b604080519315158452602084019290925282820152519081900360600190f35b6100a26100f1565b60408051918252519081900360200190f35b6100a26100f8565b6100c581610100565b50565b60008060006100d561019a565b1592506100e06101b9565b91506100ea6101dd565b9050909192565b6276a70090565b630163f50090565b80156101205761011b6101116101b9565b4210610193610201565b610135565b61013561012b6101dd565b42106101a9610201565b600080548215157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909116811790915560408051918252517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649181900360200190a150565b60006101a46101dd565b4211806101b4575060005460ff16155b905090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b8161020f5761020f81610213565b5050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818106603090810160081b83860601918390049283060160101b016642414c230000300160c81b6044526100c5917f42414c0000000000000000000000000000000000000000000000000000000000906242414c90606490fdfea264697066735822122006c7fa82287b1ae9e48975ed96174548cfc84d64f6e693aad21b6d0d4abff3ee64736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x88F1D204 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xCD43A4D5 EQ PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0xBC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0xF8 JUMP JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0x100 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD5 PUSH2 0x19A JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0xE0 PUSH2 0x1B9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEA PUSH2 0x1DD JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH3 0x76A700 SWAP1 JUMP JUMPDEST PUSH4 0x163F500 SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x120 JUMPI PUSH2 0x11B PUSH2 0x111 PUSH2 0x1B9 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x201 JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x12B PUSH2 0x1DD JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 PUSH2 0x1DD JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x1B4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x20F JUMPI PUSH2 0x20F DUP2 PUSH2 0x213 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP4 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL DUP4 DUP7 MOD ADD SWAP2 DUP4 SWAP1 DIV SWAP3 DUP4 MOD ADD PUSH1 0x10 SHL ADD PUSH7 0x42414C23000030 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH2 0xC5 SWAP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH3 0x42414C SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC7 STATICCALL DUP3 0x28 PUSH28 0x1AE9E48975ED96174548CFC84D64F6E693AAD21B6D0D4ABFF3EE6473 PUSH16 0x6C634300070100330000000000000000 ","sourceMap":"759:580:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:76;;;;;;;;;;;;;;;;-1:-1:-1;975:76:70;;;;:::i;:::-;;3206:363:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:138:70;;;:::i;:::-;;;;;;;;;;;;;;;;1057:136;;;:::i;975:76::-;1026:18;1037:6;1026:10;:18::i;:::-;975:76;:::o;3206:363:27:-;3309:11;3334:26;3374:27;3436:14;:12;:14::i;:::-;3435:15;3426:24;;3481;:22;:24::i;:::-;3460:45;;3537:25;:23;:25::i;:::-;3515:47;;3206:363;;;:::o;1199:138:70:-;5560:7:27;1199:138:70;:::o;1057:136::-;5493:8:27;1057:136:70;:::o;3845:358:27:-;3901:6;3897:232;;;3923:81;3950:24;:22;:24::i;:::-;3932:15;:42;10372:3:0;3923:8:27;:81::i;:::-;3897:232;;;4035:83;4062:25;:23;:25::i;:::-;4044:15;:43;11802:3:0;4035:8:27;:83::i;:::-;4139:7;:16;;;;;;;;;;;;;;4170:26;;;;;;;;;;;;;;;;3845:358;:::o;4769:237::-;4816:4;4962:25;:23;:25::i;:::-;4944:15;:43;:55;;;-1:-1:-1;4992:7:27;;;;4991:8;4944:55;4937:62;;4769:237;:::o;5119:108::-;5201:19;5119:108;:::o;5233:110::-;5316:20;5233:110;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;:::-;926:101;;:::o;1459:126::-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;3849:26;3019:18;;;;3066;;;3062:29;3881:2;3877:17;3845:50;3824:72;;3819:3;3815:82;4832:4;4825:26;1506:28;;;;1783:14;;5058:3;;5048:14"},"methodIdentifiers":{"getMaxBufferPeriodDuration()":"88f1d204","getMaxPauseWindowDuration()":"cd43a4d5","getPausedState()":"1c0de051","setPaused(bool)":"16c38b3c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pauseWindowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getMaxBufferPeriodDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxPauseWindowDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TemporarilyPausableMock.sol\":\"TemporarilyPausableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"contracts/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0x5931cd930a053c327257b9d246c583fe195b2ac5adffe3485e1be354b3ec298b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a0f50399308e97a4c560397bc0599ff77100ac472a6281d894d1ad536b61e1df\",\"dweb:/ipfs/QmeqJpptHFPnvtAHMJDfCYPB2PLnDrFUMLi2fNb3njmpt7\"]},\"contracts/test/TemporarilyPausableMock.sol\":{\"keccak256\":\"0x82f17c5052845cbc4b56a1026b1df04cc61654ce9eed443c148cb9f6d45077b7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b5e2b1f63ab33b667c1971deb878dfca211f03237f9858cdc979fa33205baee\",\"dweb:/ipfs/QmeRw2HCzgMCtNwkUFpHTNRcj7knPfrwfXgyVLjpb4Nszq\"]}},\"version\":1}"}},"contracts/test/TestToken.sol":{"TestToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnWithoutAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"linkReferences":{},"object":"60e06040523480156200001157600080fd5b506040516200140e3803806200140e833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604081815260209283015182820190915260018252603160f81b838301528651909450869350839283918791620001d6916003918501906200025e565b508051620001ec9060049060208401906200025e565b50506005805460ff19166012179055508151602092830120608052805191012060a052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c0526200023f8162000248565b505050620002fa565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a157805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d1578251825591602001919060010190620002b4565b50620002df929150620002e3565b5090565b5b80821115620002df5760008155600101620002e4565b60805160a05160c0516110e76200032760003980610dbd525080610dff525080610dde52506110e76000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806379cc6790116100cd578063a457c2d711610081578063d505accf11610066578063d505accf146104d4578063dd62ed3e14610532578063ed24911d1461056d5761016c565b8063a457c2d714610462578063a9059cbb1461049b5761016c565b80637ecebe00116100b25780637ecebe00146103f457806390193b7c1461042757806395d89b411461045a5761016c565b806379cc6790146103825780637c602bc2146103bb5761016c565b80633644e5151161012457806340c10f191161010957806340c10f19146102f757806342966c681461033257806370a082311461034f5761016c565b80633644e515146102b657806339509351146102be5761016c565b806318160ddd1161015557806318160ddd1461023b57806323b872dd14610255578063313ce567146102985761016c565b806306fdde0314610171578063095ea7b3146101ee575b600080fd5b610179610575565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102276004803603604081101561020457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610629565b604080519115158252519081900360200190f35b61024361063f565b60408051918252519081900360200190f35b6102276004803603606081101561026b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610645565b6102a06106a6565b6040805160ff9092168252519081900360200190f35b6102436106af565b610227600480360360408110156102d457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106be565b6103306004803603604081101561030d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610701565b005b6103306004803603602081101561034857600080fd5b503561070f565b6102436004803603602081101561036557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661071c565b6103306004803603604081101561039857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610744565b610330600480360360408110156103d157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561077a565b6102436004803603602081101561040a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610784565b6102436004803603602081101561043d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610795565b6101796107bd565b6102276004803603604081101561047857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561083c565b610227600480360360408110156104b157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610882565b610330600480360360e08110156104ea57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561088f565b6102436004803603604081101561054857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610964565b61024361099c565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b5050505050905090565b60006106363384846109a6565b50600192915050565b60025490565b6000610652848484610a15565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461069c918691610697908661019e610b3e565b6109a6565b5060019392505050565b60055460ff1690565b60006106b961099c565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916106369185906106979086610b54565b61070b8282610b6d565b5050565b6107193382610c26565b50565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b600061075e826101a16107578633610964565b9190610b3e565b905061076b8333836109a6565b6107758383610c26565b505050565b61070b8282610c26565b600061078f82610795565b92915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610636918590610697908661019f610b3e565b6000610636338484610a15565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108be8c610795565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120905061094f8882610946878787610d16565b886101f8610d55565b61095a8888886109a6565b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60006106b9610db9565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b610a3973ffffffffffffffffffffffffffffffffffffffff84161515610198610e84565b610a5d73ffffffffffffffffffffffffffffffffffffffff83161515610199610e84565b610a68838383610775565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610a9b90826101a0610b3e565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610ad79082610b54565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610b4d8484111583610e84565b5050900390565b6000828201610b668482101583610e84565b9392505050565b610b7960008383610775565b610b93610b8e82610b8861063f565b90610b54565b610e92565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610bc39082610b54565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610c4a73ffffffffffffffffffffffffffffffffffffffff8316151561019b610e84565b610c5682600083610775565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610c8990826101b2610b3e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055610cc4610b8e82610cbe61063f565b90610e97565b60408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b6000610d6085610ea5565b9050610d76610d70878387610f0c565b83610e84565b610d85428410156101b8610e84565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152600660205260409020805460010190555050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610e2661101e565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b8161070b5761070b81611022565b600255565b6000610b6683836001610b3e565b6000610eaf610db9565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000610f1e82516041146101b9610e84565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610f97573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061101257508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b4690565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818106603090810160081b83860601918390049283060160101b016642414c230000300160c81b604452610719917f42414c0000000000000000000000000000000000000000000000000000000000906242414c90606490fdfea2646970667358221220a077709060bb905a7f65aa1b4088a99aacaf7bbfd39977ff1c6fc91034faa11764736f6c63430007010033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x140E CODESIZE SUB DUP1 PUSH3 0x140E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD DUP3 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL DUP4 DUP4 ADD MSTORE DUP7 MLOAD SWAP1 SWAP5 POP DUP7 SWAP4 POP DUP4 SWAP3 DUP4 SWAP2 DUP8 SWAP2 PUSH3 0x1D6 SWAP2 PUSH1 0x3 SWAP2 DUP6 ADD SWAP1 PUSH3 0x25E JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1EC SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x25E JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x80 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE PUSH3 0x23F DUP2 PUSH3 0x248 JUMP JUMPDEST POP POP POP PUSH3 0x2FA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2A1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B4 JUMP JUMPDEST POP PUSH3 0x2DF SWAP3 SWAP2 POP PUSH3 0x2E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2DF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2E4 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x10E7 PUSH3 0x327 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xDBD MSTORE POP DUP1 PUSH2 0xDFF MSTORE POP DUP1 PUSH2 0xDDE MSTORE POP PUSH2 0x10E7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x56D JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49B JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45A JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x7C602BC2 EQ PUSH2 0x3BB JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34F JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BE JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x155 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x298 JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x71C JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x744 JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x77A JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x784 JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x795 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x83C JUMP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x882 JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x964 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x61F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x602 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x636 CALLER DUP5 DUP5 PUSH2 0x9A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP5 DUP5 DUP5 PUSH2 0xA15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x69C SWAP2 DUP7 SWAP2 PUSH2 0x697 SWAP1 DUP7 PUSH2 0x19E PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x636 SWAP2 DUP6 SWAP1 PUSH2 0x697 SWAP1 DUP7 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x70B DUP3 DUP3 PUSH2 0xB6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x719 CALLER DUP3 PUSH2 0xC26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH2 0x1A1 PUSH2 0x757 DUP7 CALLER PUSH2 0x964 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB3E JUMP JUMPDEST SWAP1 POP PUSH2 0x76B DUP4 CALLER DUP4 PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x775 DUP4 DUP4 PUSH2 0xC26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x70B DUP3 DUP3 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78F DUP3 PUSH2 0x795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x61F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x636 SWAP2 DUP6 SWAP1 PUSH2 0x697 SWAP1 DUP7 PUSH2 0x19F PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x636 CALLER DUP5 DUP5 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x8BE DUP13 PUSH2 0x795 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x94F DUP9 DUP3 PUSH2 0x946 DUP8 DUP8 DUP8 PUSH2 0xD16 JUMP JUMPDEST DUP9 PUSH2 0x1F8 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x95A DUP9 DUP9 DUP9 PUSH2 0x9A6 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 PUSH2 0xDB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA39 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xA5D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xA68 DUP4 DUP4 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA9B SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAD7 SWAP1 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP5 DUP5 GT ISZERO DUP4 PUSH2 0xE84 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0xB66 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0xE84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB79 PUSH1 0x0 DUP4 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH2 0xB93 PUSH2 0xB8E DUP3 PUSH2 0xB88 PUSH2 0x63F JUMP JUMPDEST SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBC3 SWAP1 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC4A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xC56 DUP3 PUSH1 0x0 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC89 SWAP1 DUP3 PUSH2 0x1B2 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xCC4 PUSH2 0xB8E DUP3 PUSH2 0xCBE PUSH2 0x63F JUMP JUMPDEST SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x41 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE8 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD60 DUP6 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 POP PUSH2 0xD76 PUSH2 0xD70 DUP8 DUP4 DUP8 PUSH2 0xF0C JUMP JUMPDEST DUP4 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xD85 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0xE84 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0xE26 PUSH2 0x101E JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x70B JUMPI PUSH2 0x70B DUP2 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB66 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAF PUSH2 0xDB9 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1E DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1012 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP4 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL DUP4 DUP7 MOD ADD SWAP2 DUP4 SWAP1 DIV SWAP3 DUP4 MOD ADD PUSH1 0x10 SHL ADD PUSH7 0x42414C23000030 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH2 0x719 SWAP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH3 0x42414C SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH24 0x709060BB905A7F65AA1B4088A99AACAF7BBFD39977FF1C6F 0xC9 LT CALLVALUE STATICCALL LOG1 OR PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"836:772:71:-:0;;;898:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:179:71;;;;;;;;;;-1:-1:-1;898:179:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:179:71;;;;;;;;;;-1:-1:-1;898:179:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:179:71;;;;;;;;;2020:280:35;;;;;;;;;-1:-1:-1;;;2020:280:35;;;;2118:13:36;;898:179:71;;-1:-1:-1;1030:4:71;;-1:-1:-1;1030:4:71;;;;1010:6;;2118:13:36;;:5;;:13;;;;:::i;:::-;-1:-1:-1;2141:17:36;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2168:9:36;:14;;-1:-1:-1;;2168:14:36;2180:2;2168:14;;;-1:-1:-1;2100:22:35;;;;;;;2085:37;;2150:25;;;;;2132:43;;-1:-1:-1;2198:95:35;2185:108;;1046:24:71::2;1061:8:::0;1046:14:::2;:24::i;:::-;898:179:::0;;;836:772;;10570:88:36;10630:9;:21;;-1:-1:-1;;10630:21:36;;;;;;;;;;;;10570:88::o;836:772:71:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;836:772:71;;;-1:-1:-1;836:772:71;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{"5870":[{"length":32,"start":3550}],"5872":[{"length":32,"start":3583}],"5874":[{"length":32,"start":3517}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061016c5760003560e01c806379cc6790116100cd578063a457c2d711610081578063d505accf11610066578063d505accf146104d4578063dd62ed3e14610532578063ed24911d1461056d5761016c565b8063a457c2d714610462578063a9059cbb1461049b5761016c565b80637ecebe00116100b25780637ecebe00146103f457806390193b7c1461042757806395d89b411461045a5761016c565b806379cc6790146103825780637c602bc2146103bb5761016c565b80633644e5151161012457806340c10f191161010957806340c10f19146102f757806342966c681461033257806370a082311461034f5761016c565b80633644e515146102b657806339509351146102be5761016c565b806318160ddd1161015557806318160ddd1461023b57806323b872dd14610255578063313ce567146102985761016c565b806306fdde0314610171578063095ea7b3146101ee575b600080fd5b610179610575565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b357818101518382015260200161019b565b50505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102276004803603604081101561020457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610629565b604080519115158252519081900360200190f35b61024361063f565b60408051918252519081900360200190f35b6102276004803603606081101561026b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610645565b6102a06106a6565b6040805160ff9092168252519081900360200190f35b6102436106af565b610227600480360360408110156102d457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106be565b6103306004803603604081101561030d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610701565b005b6103306004803603602081101561034857600080fd5b503561070f565b6102436004803603602081101561036557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661071c565b6103306004803603604081101561039857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610744565b610330600480360360408110156103d157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561077a565b6102436004803603602081101561040a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610784565b6102436004803603602081101561043d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610795565b6101796107bd565b6102276004803603604081101561047857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561083c565b610227600480360360408110156104b157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610882565b610330600480360360e08110156104ea57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561088f565b6102436004803603604081101561054857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610964565b61024361099c565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b5050505050905090565b60006106363384846109a6565b50600192915050565b60025490565b6000610652848484610a15565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461069c918691610697908661019e610b3e565b6109a6565b5060019392505050565b60055460ff1690565b60006106b961099c565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916106369185906106979086610b54565b61070b8282610b6d565b5050565b6107193382610c26565b50565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b600061075e826101a16107578633610964565b9190610b3e565b905061076b8333836109a6565b6107758383610c26565b505050565b61070b8282610c26565b600061078f82610795565b92915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561061f5780601f106105f45761010080835404028352916020019161061f565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091610636918590610697908661019f610b3e565b6000610636338484610a15565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108be8c610795565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001965050505050505060405160208183030381529060405280519060200120905061094f8882610946878787610d16565b886101f8610d55565b61095a8888886109a6565b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60006106b9610db9565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b610a3973ffffffffffffffffffffffffffffffffffffffff84161515610198610e84565b610a5d73ffffffffffffffffffffffffffffffffffffffff83161515610199610e84565b610a68838383610775565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610a9b90826101a0610b3e565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610ad79082610b54565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610b4d8484111583610e84565b5050900390565b6000828201610b668482101583610e84565b9392505050565b610b7960008383610775565b610b93610b8e82610b8861063f565b90610b54565b610e92565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610bc39082610b54565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610c4a73ffffffffffffffffffffffffffffffffffffffff8316151561019b610e84565b610c5682600083610775565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054610c8990826101b2610b3e565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055610cc4610b8e82610cbe61063f565b90610e97565b60408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b6000610d6085610ea5565b9050610d76610d70878387610f0c565b83610e84565b610d85428410156101b8610e84565b50505073ffffffffffffffffffffffffffffffffffffffff9092166000908152600660205260409020805460010190555050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610e2661101e565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405160208183030381529060405280519060200120905090565b8161070b5761070b81611022565b600255565b6000610b6683836001610b3e565b6000610eaf610db9565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b6000610f1e82516041146101b9610e84565b60008060006020850151925060408501519150606085015160001a9050600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610f97573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061101257508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b98975050505050505050565b4690565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818106603090810160081b83860601918390049283060160101b016642414c230000300160c81b604452610719917f42414c0000000000000000000000000000000000000000000000000000000000906242414c90606490fdfea2646970667358221220a077709060bb905a7f65aa1b4088a99aacaf7bbfd39977ff1c6fc91034faa11764736f6c63430007010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xED24911D EQ PUSH2 0x56D JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49B JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45A JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x7C602BC2 EQ PUSH2 0x3BB JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x34F JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BE JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x155 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x298 JUMPI PUSH2 0x16C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x645 JUMP JUMPDEST PUSH2 0x2A0 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x71C JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x744 JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x77A JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x784 JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x795 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x83C JUMP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x882 JUMP JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x88F JUMP JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x964 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x61F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x602 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x636 CALLER DUP5 DUP5 PUSH2 0x9A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP5 DUP5 DUP5 PUSH2 0xA15 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x69C SWAP2 DUP7 SWAP2 PUSH2 0x697 SWAP1 DUP7 PUSH2 0x19E PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x636 SWAP2 DUP6 SWAP1 PUSH2 0x697 SWAP1 DUP7 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0x70B DUP3 DUP3 PUSH2 0xB6D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x719 CALLER DUP3 PUSH2 0xC26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH2 0x1A1 PUSH2 0x757 DUP7 CALLER PUSH2 0x964 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB3E JUMP JUMPDEST SWAP1 POP PUSH2 0x76B DUP4 CALLER DUP4 PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x775 DUP4 DUP4 PUSH2 0xC26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x70B DUP3 DUP3 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78F DUP3 PUSH2 0x795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x61F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x636 SWAP2 DUP6 SWAP1 PUSH2 0x697 SWAP1 DUP7 PUSH2 0x19F PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x636 CALLER DUP5 DUP5 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x8BE DUP13 PUSH2 0x795 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x94F DUP9 DUP3 PUSH2 0x946 DUP8 DUP8 DUP8 PUSH2 0xD16 JUMP JUMPDEST DUP9 PUSH2 0x1F8 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x95A DUP9 DUP9 DUP9 PUSH2 0x9A6 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 PUSH2 0xDB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA39 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xA5D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xA68 DUP4 DUP4 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA9B SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xAD7 SWAP1 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP5 DUP5 GT ISZERO DUP4 PUSH2 0xE84 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0xB66 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0xE84 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB79 PUSH1 0x0 DUP4 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH2 0xB93 PUSH2 0xB8E DUP3 PUSH2 0xB88 PUSH2 0x63F JUMP JUMPDEST SWAP1 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBC3 SWAP1 DUP3 PUSH2 0xB54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC4A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xC56 DUP3 PUSH1 0x0 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC89 SWAP1 DUP3 PUSH2 0x1B2 PUSH2 0xB3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xCC4 PUSH2 0xB8E DUP3 PUSH2 0xCBE PUSH2 0x63F JUMP JUMPDEST SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x41 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE8 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD60 DUP6 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 POP PUSH2 0xD76 PUSH2 0xD70 DUP8 DUP4 DUP8 PUSH2 0xF0C JUMP JUMPDEST DUP4 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xD85 TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B8 PUSH2 0xE84 JUMP JUMPDEST POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0xE26 PUSH2 0x101E JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH2 0x70B JUMPI PUSH2 0x70B DUP2 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB66 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAF PUSH2 0xDB9 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1E DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x1B9 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1012 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH1 0xA DUP1 DUP4 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL DUP4 DUP7 MOD ADD SWAP2 DUP4 SWAP1 DIV SWAP3 DUP4 MOD ADD PUSH1 0x10 SHL ADD PUSH7 0x42414C23000030 ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH2 0x719 SWAP2 PUSH32 0x42414C0000000000000000000000000000000000000000000000000000000000 SWAP1 PUSH3 0x42414C SWAP1 PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 PUSH24 0x709060BB905A7F65AA1B4088A99AACAF7BBFD39977FF1C6F 0xC9 LT CALLVALUE STATICCALL LOG1 OR PUSH5 0x736F6C6343 STOP SMOD ADD STOP CALLER ","sourceMap":"836:772:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:164;;;;;;;;;;;;;;;;-1:-1:-1;4857:164:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3500:106;;;:::i;:::-;;;;;;;;;;;;;;;;5488:386;;;;;;;;;;;;;;;;-1:-1:-1;5488:386:36;;;;;;;;;;;;;;;;;;:::i;3156:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2243:113:38;;;:::i;6269:211:36:-;;;;;;;;;;;;;;;;-1:-1:-1;6269:211:36;;;;;;;;;:::i;1083:99:71:-;;;;;;;;;;;;;;;;-1:-1:-1;1083:99:71;;;;;;;;;:::i;:::-;;473:87:37;;;;;;;;;;;;;;;;-1:-1:-1;473:87:37;;:::i;4022:117:36:-;;;;;;;;;;;;;;;;-1:-1:-1;4022:117:36;;;;:::i;866:283:37:-;;;;;;;;;;;;;;;;-1:-1:-1;866:283:37;;;;;;;;;:::i;1497:109:71:-;;;;;;;;;;;;;;;;-1:-1:-1;1497:109:71;;;;;;;;;:::i;2006:113:38:-;;;;;;;;;;;;;;;;-1:-1:-1;2006:113:38;;;;:::i;1303:121:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1303:121:19;;;;:::i;2448:85:36:-;;;:::i;6967:312::-;;;;;;;;;;;;;;;;-1:-1:-1;6967:312:36;;;;;;;;;:::i;4342:170::-;;;;;;;;;;;;;;;;-1:-1:-1;4342:170:36;;;;;;;;;:::i;1437:508:38:-;;;;;;;;;;;;;;;;-1:-1:-1;1437:508:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4570:149:36:-;;;;;;;;;;;;;;;;-1:-1:-1;4570:149:36;;;;;;;;;;;:::i;1184:113:19:-;;;:::i;2254:81:36:-;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2291:13;;2316:12;;2323:5;;2316:12;;2323:5;2316:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:81;:::o;4857:164::-;4940:4;4956:37;4965:10;4977:7;4986:6;4956:8;:37::i;:::-;-1:-1:-1;5010:4:36;4857:164;;;;:::o;3500:106::-;3587:12;;3500:106;:::o;5488:386::-;5624:4;5640:36;5650:6;5658:9;5669:6;5640:9;:36::i;:::-;5752:19;;;;;;;:11;:19;;;;;;;;5728:10;5752:31;;;;;;;;;5686:160;;5708:6;;5752:84;;5788:6;11091:3:0;5752:35:36;:84::i;:::-;5686:8;:160::i;:::-;-1:-1:-1;5863:4:36;5488:386;;;;;:::o;3156:81::-;3221:9;;;;3156:81;:::o;2243:113:38:-;2303:7;2329:20;:18;:20::i;:::-;2322:27;;2243:113;:::o;6269:211:36:-;6382:10;6357:4;6403:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;6357:4;;6373:79;;6394:7;;6403:48;;6440:10;6403:36;:48::i;1083:99:71:-;1151:24;1157:9;1168:6;1151:5;:24::i;:::-;1083:99;;:::o;473:87:37:-;528:25;534:10;546:6;528:5;:25::i;:::-;473:87;:::o;4022:117:36:-;4114:18;;4088:7;4114:18;;;;;;;;;;;;4022:117::o;866:283:37:-;942:26;971:79;1006:6;11299:3:0;971:30:37;981:7;990:10;971:9;:30::i;:::-;:34;:79;:34;:79::i;:::-;942:108;;1061:49;1070:7;1079:10;1091:18;1061:8;:49::i;:::-;1120:22;1126:7;1135:6;1120:5;:22::i;:::-;866:283;;;:::o;1497:109:71:-;1578:21;1584:6;1592;1578:5;:21::i;2006:113:38:-;2067:7;2093:19;2106:5;2093:12;:19::i;:::-;2086:26;2006:113;-1:-1:-1;;2006:113:38:o;1303:121:19:-;1398:19;;1372:7;1398:19;;;:10;:19;;;;;;;1303:121::o;2448:85:36:-;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2487:13;;2512:14;;2519:7;;2512:14;;2519:7;2512:14;;;;;;;;;;;;;;;;;;;;;;;;6967:312;7098:10;7060:4;7143:23;;;:11;:23;;;;;;;;;:32;;;;;;;;;;7060:4;;7076:175;;7122:7;;7143:98;;7180:15;11165:3:0;7143:36:36;:98::i;4342:170::-;4428:4;4444:40;4454:10;4466:9;4477:6;4444:9;:40::i;1437:508:38:-;1645:18;921:109;1718:5;1725:7;1734:5;1741:19;1754:5;1741:12;:19::i;:::-;1762:8;1689:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:115;;;;;;1645:136;;1792:104;1814:5;1821:10;1833:26;1851:1;1854;1857;1833:17;:26::i;:::-;1861:8;13190:3:0;1792:21:38;:104::i;:::-;1907:31;1916:5;1923:7;1932:5;1907:8;:31::i;:::-;1437:508;;;;;;;;:::o;4570:149:36:-;4685:18;;;;4659:7;4685:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4570:149::o;1184:113:19:-;1244:7;1270:20;:18;:20::i;10034:213:36:-;10157:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10208:32;;;;;;;;;;;;;;;;;10034:213;;;:::o;7753:559::-;7880:71;7889:20;;;;;10687:3:0;7880:8:36;:71::i;:::-;7961:72;7970:23;;;;;10755:3:0;7961:8:36;:72::i;:::-;8044:47;8065:6;8073:9;8084:6;8044:20;:47::i;:::-;8122:17;;;:9;:17;;;;;;;;;;;:68;;8144:6;11233:3:0;8122:21:36;:68::i;:::-;8102:17;;;;:9;:17;;;;;;;;;;;:88;;;;8223:20;;;;;;;:32;;8248:6;8223:24;:32::i;:::-;8200:20;;;;:9;:20;;;;;;;;;;;;:55;;;;8270:35;;;;;;;8200:20;;8270:35;;;;;;;;;;;;;7753:559;;;:::o;1816:206:45:-;1923:7;1942:27;1956:1;1951;:6;;1959:9;1942:8;:27::i;:::-;-1:-1:-1;;1991:5:45;;;1816:206::o;966:167::-;1024:7;1055:5;;;1070:37;1079:6;;;;1024:7;1070:8;:37::i;:::-;1125:1;966:167;-1:-1:-1;;;966:167:45:o;8583:297:36:-;8658:49;8687:1;8691:7;8700:6;8658:20;:49::i;:::-;8718:42;8734:25;8752:6;8734:13;:11;:13::i;:::-;:17;;:25::i;:::-;8718:15;:42::i;:::-;8791:18;;;:9;:18;;;;;;;;;;;:30;;8814:6;8791:22;:30::i;:::-;8770:18;;;:9;:18;;;;;;;;;;;:51;;;;8836:37;;;;;;;8770:18;;:9;;8836:37;;;;;;;;;;8583:297;;:::o;9200:411::-;9275:68;9284:21;;;;;10885:3:0;9275:8:36;:68::i;:::-;9354:49;9375:7;9392:1;9396:6;9354:20;:49::i;:::-;9435:18;;;:9;:18;;;;;;;;;;;:65;;9458:6;12329:3:0;9435:22:36;:65::i;:::-;9414:18;;;:9;:18;;;;;;;;;;:86;9510:42;9526:25;9544:6;9526:13;:11;:13::i;:::-;:17;;:25::i;9510:42::-;9567:37;;;;;;;;9593:1;;9567:37;;;;;;;;;;;;;9200:411;;:::o;3803:419:19:-;3963:13;;;3973:2;3963:13;;;;;;;;;3914:12;;;;3963:13;;;;;;;;;;;-1:-1:-1;3963:13:19;3938:38;;4092:1;4087:2;4076:9;4072:18;4065:29;4134:1;4129:2;4118:9;4114:18;4107:29;4177:1;4172:2;4161:9;4157:18;4149:30;4206:9;3803:419;-1:-1:-1;;;;3803:419:19:o;1701:1214::-;1895:14;1912:28;1929:10;1912:16;:28::i;:::-;1895:45;;1950:66;1959:45;1977:7;1986:6;1994:9;1959:17;:45::i;:::-;2006:9;1950:8;:66::i;:::-;2487:63;2508:15;2496:8;:27;;12656:3:0;2487:8:19;:63::i;:::-;-1:-1:-1;;;2884:19:19;;;;;;;;:10;:19;;;;;:24;;2907:1;2884:24;;;-1:-1:-1;;1701:1214:19:o;2386:188:35:-;2447:7;2494:10;2506:12;2520:15;2537:13;:11;:13::i;:::-;2560:4;2483:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:94;;;;;;2466:101;;2386:188;:::o;926:101:0:-;995:9;990:34;;1006:18;1014:9;1006:7;:18::i;3870:94:36:-;3937:12;:20;3870:94::o;1404:121:45:-;1462:7;1488:30;1492:1;1495;5194::0;1488:3:45;:30::i;3199:183:35:-;3276:7;3341:20;:18;:20::i;:::-;3363:10;3312:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:73;;;;;;3295:80;;3199:183;;;:::o;2921:876:19:-;3066:4;3082:60;3091:9;:16;3111:2;3091:22;12713:3:0;3082:8:19;:60::i;:::-;3153:9;3172;3191:7;3427:4;3416:9;3412:20;3406:27;3401:32;;3472:4;3461:9;3457:20;3451:27;3446:32;;3525:4;3514:9;3510:20;3504:27;3501:1;3496:36;3491:41;;3552:24;3579:26;3589:6;3597:1;3600;3603;3579:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:26:19;;;;;;-1:-1:-1;;3728:30:19;;;;;;;:61;;;3782:7;3762:27;;:16;:27;;;3728:61;3720:70;2921:876;-1:-1:-1;;;;;;;;2921:876:19:o;3433:187:35:-;3595:9;;3570:44::o;1459:126:0:-;4417:66;1754:18;4405:79;;;4623:66;4617:4;4610:80;4765:1;4759:4;4752:15;2893:2;2926:18;;;2971;;;2898:4;2967:29;;;3769:1;3860:14;2878:18;;;3849:26;3019:18;;;;3066;;;3062:29;3881:2;3877:17;3845:50;3824:72;;3819:3;3815:82;4832:4;4825:26;1506:28;;;;1783:14;;5058:3;;5048:14"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","burnWithoutAllowance(address,uint256)":"7c602bc2","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnWithoutAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}. The total supply should only be read using this function Can be overridden by derived contracts to store the total supply in a different way (e.g. packed with other storage values).\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xc895b6a37efc3ccf190487b2089bee9c946c46011a3f0b2a650dbf11a9287ad9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://405f7c172f2114d590b28282ca97db114d7d8fda09491512c2ffdcbf3590e135\",\"dweb:/ipfs/QmS9ZoHooQdrAa2JD7iQKUT2u3iLHGEn9VVnTLcVpiaLxB\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20Permit.sol\":{\"keccak256\":\"0xeb8a588cfca3dddd2da141ec6adc1672646186f6dbd1e707ec9b1def45e59c25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec0afd86c576a818b61a5cb6e4d3bf946b73ce04728a2e53b3bfc7f8522b1aa1\",\"dweb:/ipfs/QmS81F4CQ7nTqamsdHaN9AGwYRguw5fCZ5EM9jtVXT7G5U\"]},\"contracts/helpers/EOASignaturesValidator.sol\":{\"keccak256\":\"0x01bbfbec787d72db3b84969a1e629d922bcab2116c84e27d596979457e778c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e89c70804224f69f50546824a8c963774fd239430a2677090d23ad8e018d3052\",\"dweb:/ipfs/QmbSHyur8EDo798qz3TCqcBcoiWuuPmoVjCbP2CzH1hoCP\"]},\"contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0c02dcb47f57575355bd9dcbc5f7cb11d9a241b10592f8b3a1d67bb813bc07e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1166afa2f200547f148297bb90e670635f557d0dffb184aef3265af597c66d4\",\"dweb:/ipfs/QmZJbYpwJHWk34mrD6wDTG6Rfmoi9Hz7gsHBkfktxXF8pq\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x4c243366b8586a81a439c52e400fd74ef22ee55dc6569ee49beefc0651417163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ef6fc6451c8f9010777eb0e46ed7800212220e50d36286caf56b9a9fcdb4229\",\"dweb:/ipfs/QmR2HnofdMgVS9qW8AzPGNEQTBk8UJxPrLheTUmXX5GfSH\"]},\"contracts/openzeppelin/ERC20Burnable.sol\":{\"keccak256\":\"0x6df4b13f2ea83b6b7fd766ed4d2c9edbfed217825cb867ecf92ac11af44b9ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f644d0949a840356fd81eaf45a989ede75abe1e653ce1d5e59e82b7a13a97b4e\",\"dweb:/ipfs/QmUNEpURhR9LA8gwmvM6vbqmxcTVkiXcGHPSL5oCVCKVPZ\"]},\"contracts/openzeppelin/ERC20Permit.sol\":{\"keccak256\":\"0xbd474d9fb6f51b241ac85b659eabed4bac9a029f8565c64bc285edf04ef591cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334c367ffb8ff1df7f8dfebe67d0d7bf72cf39306481dd32f98b5a52033082b0\",\"dweb:/ipfs/QmdEmGyCohoDBhHqBaV6JbzYEXUqhRzVjLCPCmc81HfqUs\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0x59848b5045422c5cf58841baea490766b848f84ec1bb5066e2ae9365e2a6d750\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bc10face470969cd65169aa12404814b4f76ad0e199e8ffedbf64af135e86e2\",\"dweb:/ipfs/QmSzcRHgfGuBUD2TPLat3JJejCWgSWKJP54ZCvzLWZPCiz\"]},\"contracts/test/TestToken.sol\":{\"keccak256\":\"0x57c5b7287eadaa3e8f0cb99ff1469df80025a7f05fd63caa17cdb46e0ef88a75\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6f79c4f836042c0d20f357274b6a8731cce0d7182a1591f8b1bbfc15b3c6a352\",\"dweb:/ipfs/QmckCVT16h8MhyAeAqyKfRVSGjC7YydZ28yvBk1xC63SgA\"]}},\"version\":1}"}}}}}